{"version":3,"file":"875.js","mappings":"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","sources":["webpack://d-hondt-calculator-online/./node_modules/chart.js/dist/chart.esm.js","webpack://d-hondt-calculator-online/./node_modules/chart.js/dist/chunks/helpers.segment.js","webpack://d-hondt-calculator-online/./node_modules/chartjs-plugin-datalabels/dist/chartjs-plugin-datalabels.esm.js","webpack://d-hondt-calculator-online/./node_modules/react-chartjs-2/dist/index.js"],"sourcesContent":["/*!\n * Chart.js v3.7.0\n * https://www.chartjs.org\n * (c) 2021 Chart.js Contributors\n * Released under the MIT License\n */\nimport { r as requestAnimFrame, a as resolve, e as effects, c as color, d as defaults, i as isObject, b as isArray, v as valueOrDefault, u as unlistenArrayEvents, l as listenArrayEvents, f as resolveObjectKey, g as isNumberFinite, h as createContext, j as defined, s as sign, k as isNullOrUndef, _ as _arrayUnique, t as toRadians, m as toPercentage, n as toDimension, T as TAU, o as formatNumber, p as _angleBetween, H as HALF_PI, P as PI, q as isNumber, w as _limitValue, x as _lookupByKey, y as getRelativePosition$1, z as _isPointInArea, A as _rlookupByKey, B as getAngleFromPoint, C as toPadding, D as each, E as getMaximumSize, F as _getParentNode, G as readUsedSize, I as throttled, J as supportsEventListenerOptions, K as _isDomSupported, L as log10, M as _factorize, N as finiteOrDefault, O as callback, Q as _addGrace, R as toDegrees, S as _measureText, U as _int16Range, V as _alignPixel, W as clipArea, X as renderText, Y as unclipArea, Z as toFont, $ as _toLeftRightCenter, a0 as _alignStartEnd, a1 as overrides, a2 as merge, a3 as _capitalize, a4 as descriptors, a5 as isFunction, a6 as _attachContext, a7 as _createResolver, a8 as _descriptors, a9 as mergeIf, aa as uid, ab as debounce, ac as retinaScale, ad as clearCanvas, ae as setsEqual, af as _elementsEqual, ag as _isClickEvent, ah as _isBetween, ai as _readValueToProps, aj as _updateBezierControlPoints, ak as _computeSegments, al as _boundSegments, am as _steppedInterpolation, an as _bezierInterpolation, ao as _pointInLine, ap as _steppedLineTo, aq as _bezierCurveTo, ar as drawPoint, as as addRoundedRectPath, at as toTRBL, au as toTRBLCorners, av as _boundSegment, aw as _normalizeAngle, ax as getRtlAdapter, ay as overrideTextDirection, az as _textX, aA as restoreTextDirection, aB as noop, aC as distanceBetweenPoints, aD as _setMinAndMaxByKey, aE as niceNum, aF as almostWhole, aG as almostEquals, aH as _decimalPlaces, aI as _longestText, aJ as _filterBetween, aK as _lookup } from './chunks/helpers.segment.js';\nexport { d as defaults } from './chunks/helpers.segment.js';\n\nclass Animator {\n  constructor() {\n    this._request = null;\n    this._charts = new Map();\n    this._running = false;\n    this._lastDate = undefined;\n  }\n  _notify(chart, anims, date, type) {\n    const callbacks = anims.listeners[type];\n    const numSteps = anims.duration;\n    callbacks.forEach(fn => fn({\n      chart,\n      initial: anims.initial,\n      numSteps,\n      currentStep: Math.min(date - anims.start, numSteps)\n    }));\n  }\n  _refresh() {\n    if (this._request) {\n      return;\n    }\n    this._running = true;\n    this._request = requestAnimFrame.call(window, () => {\n      this._update();\n      this._request = null;\n      if (this._running) {\n        this._refresh();\n      }\n    });\n  }\n  _update(date = Date.now()) {\n    let remaining = 0;\n    this._charts.forEach((anims, chart) => {\n      if (!anims.running || !anims.items.length) {\n        return;\n      }\n      const items = anims.items;\n      let i = items.length - 1;\n      let draw = false;\n      let item;\n      for (; i >= 0; --i) {\n        item = items[i];\n        if (item._active) {\n          if (item._total > anims.duration) {\n            anims.duration = item._total;\n          }\n          item.tick(date);\n          draw = true;\n        } else {\n          items[i] = items[items.length - 1];\n          items.pop();\n        }\n      }\n      if (draw) {\n        chart.draw();\n        this._notify(chart, anims, date, 'progress');\n      }\n      if (!items.length) {\n        anims.running = false;\n        this._notify(chart, anims, date, 'complete');\n        anims.initial = false;\n      }\n      remaining += items.length;\n    });\n    this._lastDate = date;\n    if (remaining === 0) {\n      this._running = false;\n    }\n  }\n  _getAnims(chart) {\n    const charts = this._charts;\n    let anims = charts.get(chart);\n    if (!anims) {\n      anims = {\n        running: false,\n        initial: true,\n        items: [],\n        listeners: {\n          complete: [],\n          progress: []\n        }\n      };\n      charts.set(chart, anims);\n    }\n    return anims;\n  }\n  listen(chart, event, cb) {\n    this._getAnims(chart).listeners[event].push(cb);\n  }\n  add(chart, items) {\n    if (!items || !items.length) {\n      return;\n    }\n    this._getAnims(chart).items.push(...items);\n  }\n  has(chart) {\n    return this._getAnims(chart).items.length > 0;\n  }\n  start(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims) {\n      return;\n    }\n    anims.running = true;\n    anims.start = Date.now();\n    anims.duration = anims.items.reduce((acc, cur) => Math.max(acc, cur._duration), 0);\n    this._refresh();\n  }\n  running(chart) {\n    if (!this._running) {\n      return false;\n    }\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.running || !anims.items.length) {\n      return false;\n    }\n    return true;\n  }\n  stop(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.items.length) {\n      return;\n    }\n    const items = anims.items;\n    let i = items.length - 1;\n    for (; i >= 0; --i) {\n      items[i].cancel();\n    }\n    anims.items = [];\n    this._notify(chart, anims, Date.now(), 'complete');\n  }\n  remove(chart) {\n    return this._charts.delete(chart);\n  }\n}\nvar animator = new Animator();\n\nconst transparent = 'transparent';\nconst interpolators = {\n  boolean(from, to, factor) {\n    return factor > 0.5 ? to : from;\n  },\n  color(from, to, factor) {\n    const c0 = color(from || transparent);\n    const c1 = c0.valid && color(to || transparent);\n    return c1 && c1.valid\n      ? c1.mix(c0, factor).hexString()\n      : to;\n  },\n  number(from, to, factor) {\n    return from + (to - from) * factor;\n  }\n};\nclass Animation {\n  constructor(cfg, target, prop, to) {\n    const currentValue = target[prop];\n    to = resolve([cfg.to, to, currentValue, cfg.from]);\n    const from = resolve([cfg.from, currentValue, to]);\n    this._active = true;\n    this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n    this._easing = effects[cfg.easing] || effects.linear;\n    this._start = Math.floor(Date.now() + (cfg.delay || 0));\n    this._duration = this._total = Math.floor(cfg.duration);\n    this._loop = !!cfg.loop;\n    this._target = target;\n    this._prop = prop;\n    this._from = from;\n    this._to = to;\n    this._promises = undefined;\n  }\n  active() {\n    return this._active;\n  }\n  update(cfg, to, date) {\n    if (this._active) {\n      this._notify(false);\n      const currentValue = this._target[this._prop];\n      const elapsed = date - this._start;\n      const remain = this._duration - elapsed;\n      this._start = date;\n      this._duration = Math.floor(Math.max(remain, cfg.duration));\n      this._total += elapsed;\n      this._loop = !!cfg.loop;\n      this._to = resolve([cfg.to, to, currentValue, cfg.from]);\n      this._from = resolve([cfg.from, currentValue, to]);\n    }\n  }\n  cancel() {\n    if (this._active) {\n      this.tick(Date.now());\n      this._active = false;\n      this._notify(false);\n    }\n  }\n  tick(date) {\n    const elapsed = date - this._start;\n    const duration = this._duration;\n    const prop = this._prop;\n    const from = this._from;\n    const loop = this._loop;\n    const to = this._to;\n    let factor;\n    this._active = from !== to && (loop || (elapsed < duration));\n    if (!this._active) {\n      this._target[prop] = to;\n      this._notify(true);\n      return;\n    }\n    if (elapsed < 0) {\n      this._target[prop] = from;\n      return;\n    }\n    factor = (elapsed / duration) % 2;\n    factor = loop && factor > 1 ? 2 - factor : factor;\n    factor = this._easing(Math.min(1, Math.max(0, factor)));\n    this._target[prop] = this._fn(from, to, factor);\n  }\n  wait() {\n    const promises = this._promises || (this._promises = []);\n    return new Promise((res, rej) => {\n      promises.push({res, rej});\n    });\n  }\n  _notify(resolved) {\n    const method = resolved ? 'res' : 'rej';\n    const promises = this._promises || [];\n    for (let i = 0; i < promises.length; i++) {\n      promises[i][method]();\n    }\n  }\n}\n\nconst numbers = ['x', 'y', 'borderWidth', 'radius', 'tension'];\nconst colors = ['color', 'borderColor', 'backgroundColor'];\ndefaults.set('animation', {\n  delay: undefined,\n  duration: 1000,\n  easing: 'easeOutQuart',\n  fn: undefined,\n  from: undefined,\n  loop: undefined,\n  to: undefined,\n  type: undefined,\n});\nconst animationOptions = Object.keys(defaults.animation);\ndefaults.describe('animation', {\n  _fallback: false,\n  _indexable: false,\n  _scriptable: (name) => name !== 'onProgress' && name !== 'onComplete' && name !== 'fn',\n});\ndefaults.set('animations', {\n  colors: {\n    type: 'color',\n    properties: colors\n  },\n  numbers: {\n    type: 'number',\n    properties: numbers\n  },\n});\ndefaults.describe('animations', {\n  _fallback: 'animation',\n});\ndefaults.set('transitions', {\n  active: {\n    animation: {\n      duration: 400\n    }\n  },\n  resize: {\n    animation: {\n      duration: 0\n    }\n  },\n  show: {\n    animations: {\n      colors: {\n        from: 'transparent'\n      },\n      visible: {\n        type: 'boolean',\n        duration: 0\n      },\n    }\n  },\n  hide: {\n    animations: {\n      colors: {\n        to: 'transparent'\n      },\n      visible: {\n        type: 'boolean',\n        easing: 'linear',\n        fn: v => v | 0\n      },\n    }\n  }\n});\nclass Animations {\n  constructor(chart, config) {\n    this._chart = chart;\n    this._properties = new Map();\n    this.configure(config);\n  }\n  configure(config) {\n    if (!isObject(config)) {\n      return;\n    }\n    const animatedProps = this._properties;\n    Object.getOwnPropertyNames(config).forEach(key => {\n      const cfg = config[key];\n      if (!isObject(cfg)) {\n        return;\n      }\n      const resolved = {};\n      for (const option of animationOptions) {\n        resolved[option] = cfg[option];\n      }\n      (isArray(cfg.properties) && cfg.properties || [key]).forEach((prop) => {\n        if (prop === key || !animatedProps.has(prop)) {\n          animatedProps.set(prop, resolved);\n        }\n      });\n    });\n  }\n  _animateOptions(target, values) {\n    const newOptions = values.options;\n    const options = resolveTargetOptions(target, newOptions);\n    if (!options) {\n      return [];\n    }\n    const animations = this._createAnimations(options, newOptions);\n    if (newOptions.$shared) {\n      awaitAll(target.options.$animations, newOptions).then(() => {\n        target.options = newOptions;\n      }, () => {\n      });\n    }\n    return animations;\n  }\n  _createAnimations(target, values) {\n    const animatedProps = this._properties;\n    const animations = [];\n    const running = target.$animations || (target.$animations = {});\n    const props = Object.keys(values);\n    const date = Date.now();\n    let i;\n    for (i = props.length - 1; i >= 0; --i) {\n      const prop = props[i];\n      if (prop.charAt(0) === '$') {\n        continue;\n      }\n      if (prop === 'options') {\n        animations.push(...this._animateOptions(target, values));\n        continue;\n      }\n      const value = values[prop];\n      let animation = running[prop];\n      const cfg = animatedProps.get(prop);\n      if (animation) {\n        if (cfg && animation.active()) {\n          animation.update(cfg, value, date);\n          continue;\n        } else {\n          animation.cancel();\n        }\n      }\n      if (!cfg || !cfg.duration) {\n        target[prop] = value;\n        continue;\n      }\n      running[prop] = animation = new Animation(cfg, target, prop, value);\n      animations.push(animation);\n    }\n    return animations;\n  }\n  update(target, values) {\n    if (this._properties.size === 0) {\n      Object.assign(target, values);\n      return;\n    }\n    const animations = this._createAnimations(target, values);\n    if (animations.length) {\n      animator.add(this._chart, animations);\n      return true;\n    }\n  }\n}\nfunction awaitAll(animations, properties) {\n  const running = [];\n  const keys = Object.keys(properties);\n  for (let i = 0; i < keys.length; i++) {\n    const anim = animations[keys[i]];\n    if (anim && anim.active()) {\n      running.push(anim.wait());\n    }\n  }\n  return Promise.all(running);\n}\nfunction resolveTargetOptions(target, newOptions) {\n  if (!newOptions) {\n    return;\n  }\n  let options = target.options;\n  if (!options) {\n    target.options = newOptions;\n    return;\n  }\n  if (options.$shared) {\n    target.options = options = Object.assign({}, options, {$shared: false, $animations: {}});\n  }\n  return options;\n}\n\nfunction scaleClip(scale, allowedOverflow) {\n  const opts = scale && scale.options || {};\n  const reverse = opts.reverse;\n  const min = opts.min === undefined ? allowedOverflow : 0;\n  const max = opts.max === undefined ? allowedOverflow : 0;\n  return {\n    start: reverse ? max : min,\n    end: reverse ? min : max\n  };\n}\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n  if (allowedOverflow === false) {\n    return false;\n  }\n  const x = scaleClip(xScale, allowedOverflow);\n  const y = scaleClip(yScale, allowedOverflow);\n  return {\n    top: y.end,\n    right: x.end,\n    bottom: y.start,\n    left: x.start\n  };\n}\nfunction toClip(value) {\n  let t, r, b, l;\n  if (isObject(value)) {\n    t = value.top;\n    r = value.right;\n    b = value.bottom;\n    l = value.left;\n  } else {\n    t = r = b = l = value;\n  }\n  return {\n    top: t,\n    right: r,\n    bottom: b,\n    left: l,\n    disabled: value === false\n  };\n}\nfunction getSortedDatasetIndices(chart, filterVisible) {\n  const keys = [];\n  const metasets = chart._getSortedDatasetMetas(filterVisible);\n  let i, ilen;\n  for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n    keys.push(metasets[i].index);\n  }\n  return keys;\n}\nfunction applyStack(stack, value, dsIndex, options = {}) {\n  const keys = stack.keys;\n  const singleMode = options.mode === 'single';\n  let i, ilen, datasetIndex, otherValue;\n  if (value === null) {\n    return;\n  }\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    datasetIndex = +keys[i];\n    if (datasetIndex === dsIndex) {\n      if (options.all) {\n        continue;\n      }\n      break;\n    }\n    otherValue = stack.values[datasetIndex];\n    if (isNumberFinite(otherValue) && (singleMode || (value === 0 || sign(value) === sign(otherValue)))) {\n      value += otherValue;\n    }\n  }\n  return value;\n}\nfunction convertObjectDataToArray(data) {\n  const keys = Object.keys(data);\n  const adata = new Array(keys.length);\n  let i, ilen, key;\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    key = keys[i];\n    adata[i] = {\n      x: key,\n      y: data[key]\n    };\n  }\n  return adata;\n}\nfunction isStacked(scale, meta) {\n  const stacked = scale && scale.options.stacked;\n  return stacked || (stacked === undefined && meta.stack !== undefined);\n}\nfunction getStackKey(indexScale, valueScale, meta) {\n  return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\nfunction getUserBounds(scale) {\n  const {min, max, minDefined, maxDefined} = scale.getUserBounds();\n  return {\n    min: minDefined ? min : Number.NEGATIVE_INFINITY,\n    max: maxDefined ? max : Number.POSITIVE_INFINITY\n  };\n}\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n  const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n  return subStack[indexValue] || (subStack[indexValue] = {});\n}\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n  for (const meta of vScale.getMatchingVisibleMetas(type).reverse()) {\n    const value = stack[meta.index];\n    if ((positive && value > 0) || (!positive && value < 0)) {\n      return meta.index;\n    }\n  }\n  return null;\n}\nfunction updateStacks(controller, parsed) {\n  const {chart, _cachedMeta: meta} = controller;\n  const stacks = chart._stacks || (chart._stacks = {});\n  const {iScale, vScale, index: datasetIndex} = meta;\n  const iAxis = iScale.axis;\n  const vAxis = vScale.axis;\n  const key = getStackKey(iScale, vScale, meta);\n  const ilen = parsed.length;\n  let stack;\n  for (let i = 0; i < ilen; ++i) {\n    const item = parsed[i];\n    const {[iAxis]: index, [vAxis]: value} = item;\n    const itemStacks = item._stacks || (item._stacks = {});\n    stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n    stack[datasetIndex] = value;\n    stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n    stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n  }\n}\nfunction getFirstScaleId(chart, axis) {\n  const scales = chart.scales;\n  return Object.keys(scales).filter(key => scales[key].axis === axis).shift();\n}\nfunction createDatasetContext(parent, index) {\n  return createContext(parent,\n    {\n      active: false,\n      dataset: undefined,\n      datasetIndex: index,\n      index,\n      mode: 'default',\n      type: 'dataset'\n    }\n  );\n}\nfunction createDataContext(parent, index, element) {\n  return createContext(parent, {\n    active: false,\n    dataIndex: index,\n    parsed: undefined,\n    raw: undefined,\n    element,\n    index,\n    mode: 'default',\n    type: 'data'\n  });\n}\nfunction clearStacks(meta, items) {\n  const datasetIndex = meta.controller.index;\n  const axis = meta.vScale && meta.vScale.axis;\n  if (!axis) {\n    return;\n  }\n  items = items || meta._parsed;\n  for (const parsed of items) {\n    const stacks = parsed._stacks;\n    if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n      return;\n    }\n    delete stacks[axis][datasetIndex];\n  }\n}\nconst isDirectUpdateMode = (mode) => mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared) => shared ? cached : Object.assign({}, cached);\nconst createStack = (canStack, meta, chart) => canStack && !meta.hidden && meta._stacked\n  && {keys: getSortedDatasetIndices(chart, true), values: null};\nclass DatasetController {\n  constructor(chart, datasetIndex) {\n    this.chart = chart;\n    this._ctx = chart.ctx;\n    this.index = datasetIndex;\n    this._cachedDataOpts = {};\n    this._cachedMeta = this.getMeta();\n    this._type = this._cachedMeta.type;\n    this.options = undefined;\n    this._parsing = false;\n    this._data = undefined;\n    this._objectData = undefined;\n    this._sharedOptions = undefined;\n    this._drawStart = undefined;\n    this._drawCount = undefined;\n    this.enableOptionSharing = false;\n    this.$context = undefined;\n    this._syncList = [];\n    this.initialize();\n  }\n  initialize() {\n    const meta = this._cachedMeta;\n    this.configure();\n    this.linkScales();\n    meta._stacked = isStacked(meta.vScale, meta);\n    this.addElements();\n  }\n  updateIndex(datasetIndex) {\n    if (this.index !== datasetIndex) {\n      clearStacks(this._cachedMeta);\n    }\n    this.index = datasetIndex;\n  }\n  linkScales() {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n    const chooseId = (axis, x, y, r) => axis === 'x' ? x : axis === 'r' ? r : y;\n    const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n    const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n    const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n    const indexAxis = meta.indexAxis;\n    const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n    const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n    meta.xScale = this.getScaleForId(xid);\n    meta.yScale = this.getScaleForId(yid);\n    meta.rScale = this.getScaleForId(rid);\n    meta.iScale = this.getScaleForId(iid);\n    meta.vScale = this.getScaleForId(vid);\n  }\n  getDataset() {\n    return this.chart.data.datasets[this.index];\n  }\n  getMeta() {\n    return this.chart.getDatasetMeta(this.index);\n  }\n  getScaleForId(scaleID) {\n    return this.chart.scales[scaleID];\n  }\n  _getOtherScale(scale) {\n    const meta = this._cachedMeta;\n    return scale === meta.iScale\n      ? meta.vScale\n      : meta.iScale;\n  }\n  reset() {\n    this._update('reset');\n  }\n  _destroy() {\n    const meta = this._cachedMeta;\n    if (this._data) {\n      unlistenArrayEvents(this._data, this);\n    }\n    if (meta._stacked) {\n      clearStacks(meta);\n    }\n  }\n  _dataCheck() {\n    const dataset = this.getDataset();\n    const data = dataset.data || (dataset.data = []);\n    const _data = this._data;\n    if (isObject(data)) {\n      this._data = convertObjectDataToArray(data);\n    } else if (_data !== data) {\n      if (_data) {\n        unlistenArrayEvents(_data, this);\n        const meta = this._cachedMeta;\n        clearStacks(meta);\n        meta._parsed = [];\n      }\n      if (data && Object.isExtensible(data)) {\n        listenArrayEvents(data, this);\n      }\n      this._syncList = [];\n      this._data = data;\n    }\n  }\n  addElements() {\n    const meta = this._cachedMeta;\n    this._dataCheck();\n    if (this.datasetElementType) {\n      meta.dataset = new this.datasetElementType();\n    }\n  }\n  buildOrUpdateElements(resetNewElements) {\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n    let stackChanged = false;\n    this._dataCheck();\n    const oldStacked = meta._stacked;\n    meta._stacked = isStacked(meta.vScale, meta);\n    if (meta.stack !== dataset.stack) {\n      stackChanged = true;\n      clearStacks(meta);\n      meta.stack = dataset.stack;\n    }\n    this._resyncElements(resetNewElements);\n    if (stackChanged || oldStacked !== meta._stacked) {\n      updateStacks(this, meta._parsed);\n    }\n  }\n  configure() {\n    const config = this.chart.config;\n    const scopeKeys = config.datasetScopeKeys(this._type);\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n    this.options = config.createResolver(scopes, this.getContext());\n    this._parsing = this.options.parsing;\n    this._cachedDataOpts = {};\n  }\n  parse(start, count) {\n    const {_cachedMeta: meta, _data: data} = this;\n    const {iScale, _stacked} = meta;\n    const iAxis = iScale.axis;\n    let sorted = start === 0 && count === data.length ? true : meta._sorted;\n    let prev = start > 0 && meta._parsed[start - 1];\n    let i, cur, parsed;\n    if (this._parsing === false) {\n      meta._parsed = data;\n      meta._sorted = true;\n      parsed = data;\n    } else {\n      if (isArray(data[start])) {\n        parsed = this.parseArrayData(meta, data, start, count);\n      } else if (isObject(data[start])) {\n        parsed = this.parseObjectData(meta, data, start, count);\n      } else {\n        parsed = this.parsePrimitiveData(meta, data, start, count);\n      }\n      const isNotInOrderComparedToPrev = () => cur[iAxis] === null || (prev && cur[iAxis] < prev[iAxis]);\n      for (i = 0; i < count; ++i) {\n        meta._parsed[i + start] = cur = parsed[i];\n        if (sorted) {\n          if (isNotInOrderComparedToPrev()) {\n            sorted = false;\n          }\n          prev = cur;\n        }\n      }\n      meta._sorted = sorted;\n    }\n    if (_stacked) {\n      updateStacks(this, parsed);\n    }\n  }\n  parsePrimitiveData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = new Array(count);\n    let i, ilen, index;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      parsed[i] = {\n        [iAxis]: singleScale || iScale.parse(labels[index], index),\n        [vAxis]: vScale.parse(data[index], index)\n      };\n    }\n    return parsed;\n  }\n  parseArrayData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(item[0], index),\n        y: yScale.parse(item[1], index)\n      };\n    }\n    return parsed;\n  }\n  parseObjectData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n        y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n      };\n    }\n    return parsed;\n  }\n  getParsed(index) {\n    return this._cachedMeta._parsed[index];\n  }\n  getDataElement(index) {\n    return this._cachedMeta.data[index];\n  }\n  applyStack(scale, parsed, mode) {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const value = parsed[scale.axis];\n    const stack = {\n      keys: getSortedDatasetIndices(chart, true),\n      values: parsed._stacks[scale.axis]\n    };\n    return applyStack(stack, value, meta.index, {mode});\n  }\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    const parsedValue = parsed[scale.axis];\n    let value = parsedValue === null ? NaN : parsedValue;\n    const values = stack && parsed._stacks[scale.axis];\n    if (stack && values) {\n      stack.values = values;\n      value = applyStack(stack, parsedValue, this._cachedMeta.index);\n    }\n    range.min = Math.min(range.min, value);\n    range.max = Math.max(range.max, value);\n  }\n  getMinMax(scale, canStack) {\n    const meta = this._cachedMeta;\n    const _parsed = meta._parsed;\n    const sorted = meta._sorted && scale === meta.iScale;\n    const ilen = _parsed.length;\n    const otherScale = this._getOtherScale(scale);\n    const stack = createStack(canStack, meta, this.chart);\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n    const {min: otherMin, max: otherMax} = getUserBounds(otherScale);\n    let i, parsed;\n    function _skip() {\n      parsed = _parsed[i];\n      const otherValue = parsed[otherScale.axis];\n      return !isNumberFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n    }\n    for (i = 0; i < ilen; ++i) {\n      if (_skip()) {\n        continue;\n      }\n      this.updateRangeFromParsed(range, scale, parsed, stack);\n      if (sorted) {\n        break;\n      }\n    }\n    if (sorted) {\n      for (i = ilen - 1; i >= 0; --i) {\n        if (_skip()) {\n          continue;\n        }\n        this.updateRangeFromParsed(range, scale, parsed, stack);\n        break;\n      }\n    }\n    return range;\n  }\n  getAllParsedValues(scale) {\n    const parsed = this._cachedMeta._parsed;\n    const values = [];\n    let i, ilen, value;\n    for (i = 0, ilen = parsed.length; i < ilen; ++i) {\n      value = parsed[i][scale.axis];\n      if (isNumberFinite(value)) {\n        values.push(value);\n      }\n    }\n    return values;\n  }\n  getMaxOverflow() {\n    return false;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const parsed = this.getParsed(index);\n    return {\n      label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n      value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n    };\n  }\n  _update(mode) {\n    const meta = this._cachedMeta;\n    this.update(mode || 'default');\n    meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n  }\n  update(mode) {}\n  draw() {\n    const ctx = this._ctx;\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const elements = meta.data || [];\n    const area = chart.chartArea;\n    const active = [];\n    const start = this._drawStart || 0;\n    const count = this._drawCount || (elements.length - start);\n    const drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\n    let i;\n    if (meta.dataset) {\n      meta.dataset.draw(ctx, area, start, count);\n    }\n    for (i = start; i < start + count; ++i) {\n      const element = elements[i];\n      if (element.hidden) {\n        continue;\n      }\n      if (element.active && drawActiveElementsOnTop) {\n        active.push(element);\n      } else {\n        element.draw(ctx, area);\n      }\n    }\n    for (i = 0; i < active.length; ++i) {\n      active[i].draw(ctx, area);\n    }\n  }\n  getStyle(index, active) {\n    const mode = active ? 'active' : 'default';\n    return index === undefined && this._cachedMeta.dataset\n      ? this.resolveDatasetElementOptions(mode)\n      : this.resolveDataElementOptions(index || 0, mode);\n  }\n  getContext(index, active, mode) {\n    const dataset = this.getDataset();\n    let context;\n    if (index >= 0 && index < this._cachedMeta.data.length) {\n      const element = this._cachedMeta.data[index];\n      context = element.$context ||\n        (element.$context = createDataContext(this.getContext(), index, element));\n      context.parsed = this.getParsed(index);\n      context.raw = dataset.data[index];\n      context.index = context.dataIndex = index;\n    } else {\n      context = this.$context ||\n        (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n      context.dataset = dataset;\n      context.index = context.datasetIndex = this.index;\n    }\n    context.active = !!active;\n    context.mode = mode;\n    return context;\n  }\n  resolveDatasetElementOptions(mode) {\n    return this._resolveElementOptions(this.datasetElementType.id, mode);\n  }\n  resolveDataElementOptions(index, mode) {\n    return this._resolveElementOptions(this.dataElementType.id, mode, index);\n  }\n  _resolveElementOptions(elementType, mode = 'default', index) {\n    const active = mode === 'active';\n    const cache = this._cachedDataOpts;\n    const cacheKey = elementType + '-' + mode;\n    const cached = cache[cacheKey];\n    const sharing = this.enableOptionSharing && defined(index);\n    if (cached) {\n      return cloneIfNotShared(cached, sharing);\n    }\n    const config = this.chart.config;\n    const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n    const prefixes = active ? [`${elementType}Hover`, 'hover', elementType, ''] : [elementType, ''];\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n    const names = Object.keys(defaults.elements[elementType]);\n    const context = () => this.getContext(index, active);\n    const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n    if (values.$shared) {\n      values.$shared = sharing;\n      cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n    }\n    return values;\n  }\n  _resolveAnimations(index, transition, active) {\n    const chart = this.chart;\n    const cache = this._cachedDataOpts;\n    const cacheKey = `animation-${transition}`;\n    const cached = cache[cacheKey];\n    if (cached) {\n      return cached;\n    }\n    let options;\n    if (chart.options.animation !== false) {\n      const config = this.chart.config;\n      const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n      const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n      options = config.createResolver(scopes, this.getContext(index, active, transition));\n    }\n    const animations = new Animations(chart, options && options.animations);\n    if (options && options._cacheable) {\n      cache[cacheKey] = Object.freeze(animations);\n    }\n    return animations;\n  }\n  getSharedOptions(options) {\n    if (!options.$shared) {\n      return;\n    }\n    return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n  }\n  includeOptions(mode, sharedOptions) {\n    return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n  }\n  updateElement(element, index, properties, mode) {\n    if (isDirectUpdateMode(mode)) {\n      Object.assign(element, properties);\n    } else {\n      this._resolveAnimations(index, mode).update(element, properties);\n    }\n  }\n  updateSharedOptions(sharedOptions, mode, newOptions) {\n    if (sharedOptions && !isDirectUpdateMode(mode)) {\n      this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n    }\n  }\n  _setStyle(element, index, mode, active) {\n    element.active = active;\n    const options = this.getStyle(index, active);\n    this._resolveAnimations(index, mode, active).update(element, {\n      options: (!active && this.getSharedOptions(options)) || options\n    });\n  }\n  removeHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', false);\n  }\n  setHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', true);\n  }\n  _removeDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n    if (element) {\n      this._setStyle(element, undefined, 'active', false);\n    }\n  }\n  _setDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n    if (element) {\n      this._setStyle(element, undefined, 'active', true);\n    }\n  }\n  _resyncElements(resetNewElements) {\n    const data = this._data;\n    const elements = this._cachedMeta.data;\n    for (const [method, arg1, arg2] of this._syncList) {\n      this[method](arg1, arg2);\n    }\n    this._syncList = [];\n    const numMeta = elements.length;\n    const numData = data.length;\n    const count = Math.min(numData, numMeta);\n    if (count) {\n      this.parse(0, count);\n    }\n    if (numData > numMeta) {\n      this._insertElements(numMeta, numData - numMeta, resetNewElements);\n    } else if (numData < numMeta) {\n      this._removeElements(numData, numMeta - numData);\n    }\n  }\n  _insertElements(start, count, resetNewElements = true) {\n    const meta = this._cachedMeta;\n    const data = meta.data;\n    const end = start + count;\n    let i;\n    const move = (arr) => {\n      arr.length += count;\n      for (i = arr.length - 1; i >= end; i--) {\n        arr[i] = arr[i - count];\n      }\n    };\n    move(data);\n    for (i = start; i < end; ++i) {\n      data[i] = new this.dataElementType();\n    }\n    if (this._parsing) {\n      move(meta._parsed);\n    }\n    this.parse(start, count);\n    if (resetNewElements) {\n      this.updateElements(data, start, count, 'reset');\n    }\n  }\n  updateElements(element, start, count, mode) {}\n  _removeElements(start, count) {\n    const meta = this._cachedMeta;\n    if (this._parsing) {\n      const removed = meta._parsed.splice(start, count);\n      if (meta._stacked) {\n        clearStacks(meta, removed);\n      }\n    }\n    meta.data.splice(start, count);\n  }\n  _sync(args) {\n    if (this._parsing) {\n      this._syncList.push(args);\n    } else {\n      const [method, arg1, arg2] = args;\n      this[method](arg1, arg2);\n    }\n    this.chart._dataChanges.push([this.index, ...args]);\n  }\n  _onDataPush() {\n    const count = arguments.length;\n    this._sync(['_insertElements', this.getDataset().data.length - count, count]);\n  }\n  _onDataPop() {\n    this._sync(['_removeElements', this._cachedMeta.data.length - 1, 1]);\n  }\n  _onDataShift() {\n    this._sync(['_removeElements', 0, 1]);\n  }\n  _onDataSplice(start, count) {\n    if (count) {\n      this._sync(['_removeElements', start, count]);\n    }\n    const newCount = arguments.length - 2;\n    if (newCount) {\n      this._sync(['_insertElements', start, newCount]);\n    }\n  }\n  _onDataUnshift() {\n    this._sync(['_insertElements', 0, arguments.length]);\n  }\n}\nDatasetController.defaults = {};\nDatasetController.prototype.datasetElementType = null;\nDatasetController.prototype.dataElementType = null;\n\nfunction getAllScaleValues(scale, type) {\n  if (!scale._cache.$bar) {\n    const visibleMetas = scale.getMatchingVisibleMetas(type);\n    let values = [];\n    for (let i = 0, ilen = visibleMetas.length; i < ilen; i++) {\n      values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\n    }\n    scale._cache.$bar = _arrayUnique(values.sort((a, b) => a - b));\n  }\n  return scale._cache.$bar;\n}\nfunction computeMinSampleSize(meta) {\n  const scale = meta.iScale;\n  const values = getAllScaleValues(scale, meta.type);\n  let min = scale._length;\n  let i, ilen, curr, prev;\n  const updateMinAndPrev = () => {\n    if (curr === 32767 || curr === -32768) {\n      return;\n    }\n    if (defined(prev)) {\n      min = Math.min(min, Math.abs(curr - prev) || min);\n    }\n    prev = curr;\n  };\n  for (i = 0, ilen = values.length; i < ilen; ++i) {\n    curr = scale.getPixelForValue(values[i]);\n    updateMinAndPrev();\n  }\n  prev = undefined;\n  for (i = 0, ilen = scale.ticks.length; i < ilen; ++i) {\n    curr = scale.getPixelForTick(i);\n    updateMinAndPrev();\n  }\n  return min;\n}\nfunction computeFitCategoryTraits(index, ruler, options, stackCount) {\n  const thickness = options.barThickness;\n  let size, ratio;\n  if (isNullOrUndef(thickness)) {\n    size = ruler.min * options.categoryPercentage;\n    ratio = options.barPercentage;\n  } else {\n    size = thickness * stackCount;\n    ratio = 1;\n  }\n  return {\n    chunk: size / stackCount,\n    ratio,\n    start: ruler.pixels[index] - (size / 2)\n  };\n}\nfunction computeFlexCategoryTraits(index, ruler, options, stackCount) {\n  const pixels = ruler.pixels;\n  const curr = pixels[index];\n  let prev = index > 0 ? pixels[index - 1] : null;\n  let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n  const percent = options.categoryPercentage;\n  if (prev === null) {\n    prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n  }\n  if (next === null) {\n    next = curr + curr - prev;\n  }\n  const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n  const size = Math.abs(next - prev) / 2 * percent;\n  return {\n    chunk: size / stackCount,\n    ratio: options.barPercentage,\n    start\n  };\n}\nfunction parseFloatBar(entry, item, vScale, i) {\n  const startValue = vScale.parse(entry[0], i);\n  const endValue = vScale.parse(entry[1], i);\n  const min = Math.min(startValue, endValue);\n  const max = Math.max(startValue, endValue);\n  let barStart = min;\n  let barEnd = max;\n  if (Math.abs(min) > Math.abs(max)) {\n    barStart = max;\n    barEnd = min;\n  }\n  item[vScale.axis] = barEnd;\n  item._custom = {\n    barStart,\n    barEnd,\n    start: startValue,\n    end: endValue,\n    min,\n    max\n  };\n}\nfunction parseValue(entry, item, vScale, i) {\n  if (isArray(entry)) {\n    parseFloatBar(entry, item, vScale, i);\n  } else {\n    item[vScale.axis] = vScale.parse(entry, i);\n  }\n  return item;\n}\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n  const iScale = meta.iScale;\n  const vScale = meta.vScale;\n  const labels = iScale.getLabels();\n  const singleScale = iScale === vScale;\n  const parsed = [];\n  let i, ilen, item, entry;\n  for (i = start, ilen = start + count; i < ilen; ++i) {\n    entry = data[i];\n    item = {};\n    item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n    parsed.push(parseValue(entry, item, vScale, i));\n  }\n  return parsed;\n}\nfunction isFloatBar(custom) {\n  return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\nfunction barSign(size, vScale, actualBase) {\n  if (size !== 0) {\n    return sign(size);\n  }\n  return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\nfunction borderProps(properties) {\n  let reverse, start, end, top, bottom;\n  if (properties.horizontal) {\n    reverse = properties.base > properties.x;\n    start = 'left';\n    end = 'right';\n  } else {\n    reverse = properties.base < properties.y;\n    start = 'bottom';\n    end = 'top';\n  }\n  if (reverse) {\n    top = 'end';\n    bottom = 'start';\n  } else {\n    top = 'start';\n    bottom = 'end';\n  }\n  return {start, end, reverse, top, bottom};\n}\nfunction setBorderSkipped(properties, options, stack, index) {\n  let edge = options.borderSkipped;\n  const res = {};\n  if (!edge) {\n    properties.borderSkipped = res;\n    return;\n  }\n  const {start, end, reverse, top, bottom} = borderProps(properties);\n  if (edge === 'middle' && stack) {\n    properties.enableBorderRadius = true;\n    if ((stack._top || 0) === index) {\n      edge = top;\n    } else if ((stack._bottom || 0) === index) {\n      edge = bottom;\n    } else {\n      res[parseEdge(bottom, start, end, reverse)] = true;\n      edge = top;\n    }\n  }\n  res[parseEdge(edge, start, end, reverse)] = true;\n  properties.borderSkipped = res;\n}\nfunction parseEdge(edge, a, b, reverse) {\n  if (reverse) {\n    edge = swap(edge, a, b);\n    edge = startEnd(edge, b, a);\n  } else {\n    edge = startEnd(edge, a, b);\n  }\n  return edge;\n}\nfunction swap(orig, v1, v2) {\n  return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\nfunction startEnd(v, start, end) {\n  return v === 'start' ? start : v === 'end' ? end : v;\n}\nfunction setInflateAmount(properties, {inflateAmount}, ratio) {\n  properties.inflateAmount = inflateAmount === 'auto'\n    ? ratio === 1 ? 0.33 : 0\n    : inflateAmount;\n}\nclass BarController extends DatasetController {\n  parsePrimitiveData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n  parseArrayData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n  parseObjectData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const parsed = [];\n    let i, ilen, item, obj;\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      obj = data[i];\n      item = {};\n      item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n      parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n    }\n    return parsed;\n  }\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    super.updateRangeFromParsed(range, scale, parsed, stack);\n    const custom = parsed._custom;\n    if (custom && scale === this._cachedMeta.vScale) {\n      range.min = Math.min(range.min, custom.min);\n      range.max = Math.max(range.max, custom.max);\n    }\n  }\n  getMaxOverflow() {\n    return 0;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const {iScale, vScale} = meta;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const value = isFloatBar(custom)\n      ? '[' + custom.start + ', ' + custom.end + ']'\n      : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n    return {\n      label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n      value\n    };\n  }\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n    const meta = this._cachedMeta;\n    meta.stack = this.getDataset().stack;\n  }\n  update(mode) {\n    const meta = this._cachedMeta;\n    this.updateElements(meta.data, 0, meta.data.length, mode);\n  }\n  updateElements(bars, start, count, mode) {\n    const reset = mode === 'reset';\n    const {index, _cachedMeta: {vScale}} = this;\n    const base = vScale.getBasePixel();\n    const horizontal = vScale.isHorizontal();\n    const ruler = this._getRuler();\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions);\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    for (let i = start; i < start + count; i++) {\n      const parsed = this.getParsed(i);\n      const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {base, head: base} : this._calculateBarValuePixels(i);\n      const ipixels = this._calculateBarIndexPixels(i, ruler);\n      const stack = (parsed._stacks || {})[vScale.axis];\n      const properties = {\n        horizontal,\n        base: vpixels.base,\n        enableBorderRadius: !stack || isFloatBar(parsed._custom) || (index === stack._top || index === stack._bottom),\n        x: horizontal ? vpixels.head : ipixels.center,\n        y: horizontal ? ipixels.center : vpixels.head,\n        height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n        width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n      }\n      const options = properties.options || bars[i].options;\n      setBorderSkipped(properties, options, stack, index);\n      setInflateAmount(properties, options, ruler.ratio);\n      this.updateElement(bars[i], i, properties, mode);\n    }\n  }\n  _getStacks(last, dataIndex) {\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const metasets = iScale.getMatchingVisibleMetas(this._type);\n    const stacked = iScale.options.stacked;\n    const ilen = metasets.length;\n    const stacks = [];\n    let i, item;\n    for (i = 0; i < ilen; ++i) {\n      item = metasets[i];\n      if (!item.controller.options.grouped) {\n        continue;\n      }\n      if (typeof dataIndex !== 'undefined') {\n        const val = item.controller.getParsed(dataIndex)[\n          item.controller._cachedMeta.vScale.axis\n        ];\n        if (isNullOrUndef(val) || isNaN(val)) {\n          continue;\n        }\n      }\n      if (stacked === false || stacks.indexOf(item.stack) === -1 ||\n\t\t\t\t(stacked === undefined && item.stack === undefined)) {\n        stacks.push(item.stack);\n      }\n      if (item.index === last) {\n        break;\n      }\n    }\n    if (!stacks.length) {\n      stacks.push(undefined);\n    }\n    return stacks;\n  }\n  _getStackCount(index) {\n    return this._getStacks(undefined, index).length;\n  }\n  _getStackIndex(datasetIndex, name, dataIndex) {\n    const stacks = this._getStacks(datasetIndex, dataIndex);\n    const index = (name !== undefined)\n      ? stacks.indexOf(name)\n      : -1;\n    return (index === -1)\n      ? stacks.length - 1\n      : index;\n  }\n  _getRuler() {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const pixels = [];\n    let i, ilen;\n    for (i = 0, ilen = meta.data.length; i < ilen; ++i) {\n      pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\n    }\n    const barThickness = opts.barThickness;\n    const min = barThickness || computeMinSampleSize(meta);\n    return {\n      min,\n      pixels,\n      start: iScale._startPixel,\n      end: iScale._endPixel,\n      stackCount: this._getStackCount(),\n      scale: iScale,\n      grouped: opts.grouped,\n      ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n    };\n  }\n  _calculateBarValuePixels(index) {\n    const {_cachedMeta: {vScale, _stacked}, options: {base: baseValue, minBarLength}} = this;\n    const actualBase = baseValue || 0;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const floating = isFloatBar(custom);\n    let value = parsed[vScale.axis];\n    let start = 0;\n    let length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\n    let head, size;\n    if (length !== value) {\n      start = length - value;\n      length = value;\n    }\n    if (floating) {\n      value = custom.barStart;\n      length = custom.barEnd - custom.barStart;\n      if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n        start = 0;\n      }\n      start += value;\n    }\n    const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n    let base = vScale.getPixelForValue(startValue);\n    if (this.chart.getDataVisibility(index)) {\n      head = vScale.getPixelForValue(start + length);\n    } else {\n      head = base;\n    }\n    size = head - base;\n    if (Math.abs(size) < minBarLength) {\n      size = barSign(size, vScale, actualBase) * minBarLength;\n      if (value === actualBase) {\n        base -= size / 2;\n      }\n      head = base + size;\n    }\n    if (base === vScale.getPixelForValue(actualBase)) {\n      const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n      base += halfGrid;\n      size -= halfGrid;\n    }\n    return {\n      size,\n      base,\n      head,\n      center: head + size / 2\n    };\n  }\n  _calculateBarIndexPixels(index, ruler) {\n    const scale = ruler.scale;\n    const options = this.options;\n    const skipNull = options.skipNull;\n    const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n    let center, size;\n    if (ruler.grouped) {\n      const stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\n      const range = options.barThickness === 'flex'\n        ? computeFlexCategoryTraits(index, ruler, options, stackCount)\n        : computeFitCategoryTraits(index, ruler, options, stackCount);\n      const stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined);\n      center = range.start + (range.chunk * stackIndex) + (range.chunk / 2);\n      size = Math.min(maxBarThickness, range.chunk * range.ratio);\n    } else {\n      center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\n      size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n    }\n    return {\n      base: center - size / 2,\n      head: center + size / 2,\n      center,\n      size\n    };\n  }\n  draw() {\n    const meta = this._cachedMeta;\n    const vScale = meta.vScale;\n    const rects = meta.data;\n    const ilen = rects.length;\n    let i = 0;\n    for (; i < ilen; ++i) {\n      if (this.getParsed(i)[vScale.axis] !== null) {\n        rects[i].draw(this._ctx);\n      }\n    }\n  }\n}\nBarController.id = 'bar';\nBarController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'bar',\n  categoryPercentage: 0.8,\n  barPercentage: 0.9,\n  grouped: true,\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'base', 'width', 'height']\n    }\n  }\n};\nBarController.overrides = {\n  scales: {\n    _index_: {\n      type: 'category',\n      offset: true,\n      grid: {\n        offset: true\n      }\n    },\n    _value_: {\n      type: 'linear',\n      beginAtZero: true,\n    }\n  }\n};\n\nclass BubbleController extends DatasetController {\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n  }\n  parsePrimitiveData(meta, data, start, count) {\n    const parsed = super.parsePrimitiveData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      parsed[i]._custom = this.resolveDataElementOptions(i + start).radius;\n    }\n    return parsed;\n  }\n  parseArrayData(meta, data, start, count) {\n    const parsed = super.parseArrayData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item[2], this.resolveDataElementOptions(i + start).radius);\n    }\n    return parsed;\n  }\n  parseObjectData(meta, data, start, count) {\n    const parsed = super.parseObjectData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item && item.r && +item.r, this.resolveDataElementOptions(i + start).radius);\n    }\n    return parsed;\n  }\n  getMaxOverflow() {\n    const data = this._cachedMeta.data;\n    let max = 0;\n    for (let i = data.length - 1; i >= 0; --i) {\n      max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n    }\n    return max > 0 && max;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const {xScale, yScale} = meta;\n    const parsed = this.getParsed(index);\n    const x = xScale.getLabelForValue(parsed.x);\n    const y = yScale.getLabelForValue(parsed.y);\n    const r = parsed._custom;\n    return {\n      label: meta.label,\n      value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n    };\n  }\n  update(mode) {\n    const points = this._cachedMeta.data;\n    this.updateElements(points, 0, points.length, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale} = this._cachedMeta;\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const parsed = !reset && this.getParsed(i);\n      const properties = {};\n      const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n      const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n      properties.skip = isNaN(iPixel) || isNaN(vPixel);\n      if (includeOptions) {\n        properties.options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n        if (reset) {\n          properties.options.radius = 0;\n        }\n      }\n      this.updateElement(point, i, properties, mode);\n    }\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n  resolveDataElementOptions(index, mode) {\n    const parsed = this.getParsed(index);\n    let values = super.resolveDataElementOptions(index, mode);\n    if (values.$shared) {\n      values = Object.assign({}, values, {$shared: false});\n    }\n    const radius = values.radius;\n    if (mode !== 'active') {\n      values.radius = 0;\n    }\n    values.radius += valueOrDefault(parsed && parsed._custom, radius);\n    return values;\n  }\n}\nBubbleController.id = 'bubble';\nBubbleController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'point',\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'borderWidth', 'radius']\n    }\n  }\n};\nBubbleController.overrides = {\n  scales: {\n    x: {\n      type: 'linear'\n    },\n    y: {\n      type: 'linear'\n    }\n  },\n  plugins: {\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        }\n      }\n    }\n  }\n};\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n  let ratioX = 1;\n  let ratioY = 1;\n  let offsetX = 0;\n  let offsetY = 0;\n  if (circumference < TAU) {\n    const startAngle = rotation;\n    const endAngle = startAngle + circumference;\n    const startX = Math.cos(startAngle);\n    const startY = Math.sin(startAngle);\n    const endX = Math.cos(endAngle);\n    const endY = Math.sin(endAngle);\n    const calcMax = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n    const calcMin = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n    const maxX = calcMax(0, startX, endX);\n    const maxY = calcMax(HALF_PI, startY, endY);\n    const minX = calcMin(PI, startX, endX);\n    const minY = calcMin(PI + HALF_PI, startY, endY);\n    ratioX = (maxX - minX) / 2;\n    ratioY = (maxY - minY) / 2;\n    offsetX = -(maxX + minX) / 2;\n    offsetY = -(maxY + minY) / 2;\n  }\n  return {ratioX, ratioY, offsetX, offsetY};\n}\nclass DoughnutController extends DatasetController {\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n    this.enableOptionSharing = true;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.offsetX = undefined;\n    this.offsetY = undefined;\n  }\n  linkScales() {}\n  parse(start, count) {\n    const data = this.getDataset().data;\n    const meta = this._cachedMeta;\n    if (this._parsing === false) {\n      meta._parsed = data;\n    } else {\n      let getter = (i) => +data[i];\n      if (isObject(data[start])) {\n        const {key = 'value'} = this._parsing;\n        getter = (i) => +resolveObjectKey(data[i], key);\n      }\n      let i, ilen;\n      for (i = start, ilen = start + count; i < ilen; ++i) {\n        meta._parsed[i] = getter(i);\n      }\n    }\n  }\n  _getRotation() {\n    return toRadians(this.options.rotation - 90);\n  }\n  _getCircumference() {\n    return toRadians(this.options.circumference);\n  }\n  _getRotationExtents() {\n    let min = TAU;\n    let max = -TAU;\n    for (let i = 0; i < this.chart.data.datasets.length; ++i) {\n      if (this.chart.isDatasetVisible(i)) {\n        const controller = this.chart.getDatasetMeta(i).controller;\n        const rotation = controller._getRotation();\n        const circumference = controller._getCircumference();\n        min = Math.min(min, rotation);\n        max = Math.max(max, rotation + circumference);\n      }\n    }\n    return {\n      rotation: min,\n      circumference: max - min,\n    };\n  }\n  update(mode) {\n    const chart = this.chart;\n    const {chartArea} = chart;\n    const meta = this._cachedMeta;\n    const arcs = meta.data;\n    const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n    const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n    const cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\n    const chartWeight = this._getRingWeight(this.index);\n    const {circumference, rotation} = this._getRotationExtents();\n    const {ratioX, ratioY, offsetX, offsetY} = getRatioAndOffset(rotation, circumference, cutout);\n    const maxWidth = (chartArea.width - spacing) / ratioX;\n    const maxHeight = (chartArea.height - spacing) / ratioY;\n    const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n    const outerRadius = toDimension(this.options.radius, maxRadius);\n    const innerRadius = Math.max(outerRadius * cutout, 0);\n    const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n    this.offsetX = offsetX * outerRadius;\n    this.offsetY = offsetY * outerRadius;\n    meta.total = this.calculateTotal();\n    this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n    this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n  _circumference(i, reset) {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const circumference = this._getCircumference();\n    if ((reset && opts.animation.animateRotate) || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n      return 0;\n    }\n    return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\n  }\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const centerX = (chartArea.left + chartArea.right) / 2;\n    const centerY = (chartArea.top + chartArea.bottom) / 2;\n    const animateScale = reset && animationOpts.animateScale;\n    const innerRadius = animateScale ? 0 : this.innerRadius;\n    const outerRadius = animateScale ? 0 : this.outerRadius;\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions);\n    let startAngle = this._getRotation();\n    let i;\n    for (i = 0; i < start; ++i) {\n      startAngle += this._circumference(i, reset);\n    }\n    for (i = start; i < start + count; ++i) {\n      const circumference = this._circumference(i, reset);\n      const arc = arcs[i];\n      const properties = {\n        x: centerX + this.offsetX,\n        y: centerY + this.offsetY,\n        startAngle,\n        endAngle: startAngle + circumference,\n        circumference,\n        outerRadius,\n        innerRadius\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n      }\n      startAngle += circumference;\n      this.updateElement(arc, i, properties, mode);\n    }\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n  calculateTotal() {\n    const meta = this._cachedMeta;\n    const metaData = meta.data;\n    let total = 0;\n    let i;\n    for (i = 0; i < metaData.length; i++) {\n      const value = meta._parsed[i];\n      if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n        total += Math.abs(value);\n      }\n    }\n    return total;\n  }\n  calculateCircumference(value) {\n    const total = this._cachedMeta.total;\n    if (total > 0 && !isNaN(value)) {\n      return TAU * (Math.abs(value) / total);\n    }\n    return 0;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index], chart.options.locale);\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n  getMaxBorderWidth(arcs) {\n    let max = 0;\n    const chart = this.chart;\n    let i, ilen, meta, controller, options;\n    if (!arcs) {\n      for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          meta = chart.getDatasetMeta(i);\n          arcs = meta.data;\n          controller = meta.controller;\n          break;\n        }\n      }\n    }\n    if (!arcs) {\n      return 0;\n    }\n    for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n      options = controller.resolveDataElementOptions(i);\n      if (options.borderAlign !== 'inner') {\n        max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n      }\n    }\n    return max;\n  }\n  getMaxOffset(arcs) {\n    let max = 0;\n    for (let i = 0, ilen = arcs.length; i < ilen; ++i) {\n      const options = this.resolveDataElementOptions(i);\n      max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n    }\n    return max;\n  }\n  _getRingWeightOffset(datasetIndex) {\n    let ringWeightOffset = 0;\n    for (let i = 0; i < datasetIndex; ++i) {\n      if (this.chart.isDatasetVisible(i)) {\n        ringWeightOffset += this._getRingWeight(i);\n      }\n    }\n    return ringWeightOffset;\n  }\n  _getRingWeight(datasetIndex) {\n    return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n  }\n  _getVisibleDatasetWeightTotal() {\n    return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n  }\n}\nDoughnutController.id = 'doughnut';\nDoughnutController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'arc',\n  animation: {\n    animateRotate: true,\n    animateScale: false\n  },\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['circumference', 'endAngle', 'innerRadius', 'outerRadius', 'startAngle', 'x', 'y', 'offset', 'borderWidth', 'spacing']\n    },\n  },\n  cutout: '50%',\n  rotation: 0,\n  circumference: 360,\n  radius: '100%',\n  spacing: 0,\n  indexAxis: 'r',\n};\nDoughnutController.descriptors = {\n  _scriptable: (name) => name !== 'spacing',\n  _indexable: (name) => name !== 'spacing',\n};\nDoughnutController.overrides = {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels(chart) {\n          const data = chart.data;\n          if (data.labels.length && data.datasets.length) {\n            const {labels: {pointStyle}} = chart.legend.options;\n            return data.labels.map((label, i) => {\n              const meta = chart.getDatasetMeta(0);\n              const style = meta.controller.getStyle(i);\n              return {\n                text: label,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                lineWidth: style.borderWidth,\n                pointStyle: pointStyle,\n                hidden: !chart.getDataVisibility(i),\n                index: i\n              };\n            });\n          }\n          return [];\n        }\n      },\n      onClick(e, legendItem, legend) {\n        legend.chart.toggleDataVisibility(legendItem.index);\n        legend.chart.update();\n      }\n    },\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(tooltipItem) {\n          let dataLabel = tooltipItem.label;\n          const value = ': ' + tooltipItem.formattedValue;\n          if (isArray(dataLabel)) {\n            dataLabel = dataLabel.slice();\n            dataLabel[0] += value;\n          } else {\n            dataLabel += value;\n          }\n          return dataLabel;\n        }\n      }\n    }\n  }\n};\n\nclass LineController extends DatasetController {\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n  }\n  update(mode) {\n    const meta = this._cachedMeta;\n    const {dataset: line, data: points = [], _dataset} = meta;\n    const animationsDisabled = this.chart._animationsDisabled;\n    let {start, count} = getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n    this._drawStart = start;\n    this._drawCount = count;\n    if (scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n    line._chart = this.chart;\n    line._datasetIndex = this.index;\n    line._decimated = !!_dataset._decimated;\n    line.points = points;\n    const options = this.resolveDatasetElementOptions(mode);\n    if (!this.options.showLine) {\n      options.borderWidth = 0;\n    }\n    options.segment = this.options.segment;\n    this.updateElement(line, undefined, {\n      animated: !animationsDisabled,\n      options\n    }, mode);\n    this.updateElements(points, start, count, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale, _stacked, _dataset} = this._cachedMeta;\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const {spanGaps, segment} = this.options;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n    let prevParsed = start > 0 && this.getParsed(start - 1);\n    for (let i = start; i < start + count; ++i) {\n      const point = points[i];\n      const parsed = this.getParsed(i);\n      const properties = directUpdate ? point : {};\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && (parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n      if (segment) {\n        properties.parsed = parsed;\n        properties.raw = _dataset.data[i];\n      }\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      }\n      if (!directUpdate) {\n        this.updateElement(point, i, properties, mode);\n      }\n      prevParsed = parsed;\n    }\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n  getMaxOverflow() {\n    const meta = this._cachedMeta;\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n    const data = meta.data || [];\n    if (!data.length) {\n      return border;\n    }\n    const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n  draw() {\n    const meta = this._cachedMeta;\n    meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n    super.draw();\n  }\n}\nLineController.id = 'line';\nLineController.defaults = {\n  datasetElementType: 'line',\n  dataElementType: 'point',\n  showLine: true,\n  spanGaps: false,\n};\nLineController.overrides = {\n  scales: {\n    _index_: {\n      type: 'category',\n    },\n    _value_: {\n      type: 'linear',\n    },\n  }\n};\nfunction getStartAndCountOfVisiblePoints(meta, points, animationsDisabled) {\n  const pointCount = points.length;\n  let start = 0;\n  let count = pointCount;\n  if (meta._sorted) {\n    const {iScale, _parsed} = meta;\n    const axis = iScale.axis;\n    const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n    if (minDefined) {\n      start = _limitValue(Math.min(\n        _lookupByKey(_parsed, iScale.axis, min).lo,\n        animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo),\n      0, pointCount - 1);\n    }\n    if (maxDefined) {\n      count = _limitValue(Math.max(\n        _lookupByKey(_parsed, iScale.axis, max).hi + 1,\n        animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max)).hi + 1),\n      start, pointCount) - start;\n    } else {\n      count = pointCount - start;\n    }\n  }\n  return {start, count};\n}\nfunction scaleRangesChanged(meta) {\n  const {xScale, yScale, _scaleRanges} = meta;\n  const newRanges = {\n    xmin: xScale.min,\n    xmax: xScale.max,\n    ymin: yScale.min,\n    ymax: yScale.max\n  };\n  if (!_scaleRanges) {\n    meta._scaleRanges = newRanges;\n    return true;\n  }\n  const changed = _scaleRanges.xmin !== xScale.min\n\t\t|| _scaleRanges.xmax !== xScale.max\n\t\t|| _scaleRanges.ymin !== yScale.min\n\t\t|| _scaleRanges.ymax !== yScale.max;\n  Object.assign(_scaleRanges, newRanges);\n  return changed;\n}\n\nclass PolarAreaController extends DatasetController {\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n  update(mode) {\n    const arcs = this._cachedMeta.data;\n    this._updateRadius();\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n  _updateRadius() {\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n    const outerRadius = Math.max(minSize / 2, 0);\n    const innerRadius = Math.max(opts.cutoutPercentage ? (outerRadius / 100) * (opts.cutoutPercentage) : 1, 0);\n    const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n    this.outerRadius = outerRadius - (radiusLength * this.index);\n    this.innerRadius = this.outerRadius - radiusLength;\n  }\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const dataset = this.getDataset();\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const scale = this._cachedMeta.rScale;\n    const centerX = scale.xCenter;\n    const centerY = scale.yCenter;\n    const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n    let angle = datasetStartAngle;\n    let i;\n    const defaultAngle = 360 / this.countVisibleElements();\n    for (i = 0; i < start; ++i) {\n      angle += this._computeAngle(i, mode, defaultAngle);\n    }\n    for (i = start; i < start + count; i++) {\n      const arc = arcs[i];\n      let startAngle = angle;\n      let endAngle = angle + this._computeAngle(i, mode, defaultAngle);\n      let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(dataset.data[i]) : 0;\n      angle = endAngle;\n      if (reset) {\n        if (animationOpts.animateScale) {\n          outerRadius = 0;\n        }\n        if (animationOpts.animateRotate) {\n          startAngle = endAngle = datasetStartAngle;\n        }\n      }\n      const properties = {\n        x: centerX,\n        y: centerY,\n        innerRadius: 0,\n        outerRadius,\n        startAngle,\n        endAngle,\n        options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n      };\n      this.updateElement(arc, i, properties, mode);\n    }\n  }\n  countVisibleElements() {\n    const dataset = this.getDataset();\n    const meta = this._cachedMeta;\n    let count = 0;\n    meta.data.forEach((element, index) => {\n      if (!isNaN(dataset.data[index]) && this.chart.getDataVisibility(index)) {\n        count++;\n      }\n    });\n    return count;\n  }\n  _computeAngle(index, mode, defaultAngle) {\n    return this.chart.getDataVisibility(index)\n      ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle)\n      : 0;\n  }\n}\nPolarAreaController.id = 'polarArea';\nPolarAreaController.defaults = {\n  dataElementType: 'arc',\n  animation: {\n    animateRotate: true,\n    animateScale: true\n  },\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius']\n    },\n  },\n  indexAxis: 'r',\n  startAngle: 0,\n};\nPolarAreaController.overrides = {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels(chart) {\n          const data = chart.data;\n          if (data.labels.length && data.datasets.length) {\n            const {labels: {pointStyle}} = chart.legend.options;\n            return data.labels.map((label, i) => {\n              const meta = chart.getDatasetMeta(0);\n              const style = meta.controller.getStyle(i);\n              return {\n                text: label,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                lineWidth: style.borderWidth,\n                pointStyle: pointStyle,\n                hidden: !chart.getDataVisibility(i),\n                index: i\n              };\n            });\n          }\n          return [];\n        }\n      },\n      onClick(e, legendItem, legend) {\n        legend.chart.toggleDataVisibility(legendItem.index);\n        legend.chart.update();\n      }\n    },\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(context) {\n          return context.chart.data.labels[context.dataIndex] + ': ' + context.formattedValue;\n        }\n      }\n    }\n  },\n  scales: {\n    r: {\n      type: 'radialLinear',\n      angleLines: {\n        display: false\n      },\n      beginAtZero: true,\n      grid: {\n        circular: true\n      },\n      pointLabels: {\n        display: false\n      },\n      startAngle: 0\n    }\n  }\n};\n\nclass PieController extends DoughnutController {\n}\nPieController.id = 'pie';\nPieController.defaults = {\n  cutout: 0,\n  rotation: 0,\n  circumference: 360,\n  radius: '100%'\n};\n\nclass RadarController extends DatasetController {\n  getLabelAndValue(index) {\n    const vScale = this._cachedMeta.vScale;\n    const parsed = this.getParsed(index);\n    return {\n      label: vScale.getLabels()[index],\n      value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n    };\n  }\n  update(mode) {\n    const meta = this._cachedMeta;\n    const line = meta.dataset;\n    const points = meta.data || [];\n    const labels = meta.iScale.getLabels();\n    line.points = points;\n    if (mode !== 'resize') {\n      const options = this.resolveDatasetElementOptions(mode);\n      if (!this.options.showLine) {\n        options.borderWidth = 0;\n      }\n      const properties = {\n        _loop: true,\n        _fullLoop: labels.length === points.length,\n        options\n      };\n      this.updateElement(line, undefined, properties, mode);\n    }\n    this.updateElements(points, 0, points.length, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const dataset = this.getDataset();\n    const scale = this._cachedMeta.rScale;\n    const reset = mode === 'reset';\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      const pointPosition = scale.getPointPositionForValue(i, dataset.data[i]);\n      const x = reset ? scale.xCenter : pointPosition.x;\n      const y = reset ? scale.yCenter : pointPosition.y;\n      const properties = {\n        x,\n        y,\n        angle: pointPosition.angle,\n        skip: isNaN(x) || isNaN(y),\n        options\n      };\n      this.updateElement(point, i, properties, mode);\n    }\n  }\n}\nRadarController.id = 'radar';\nRadarController.defaults = {\n  datasetElementType: 'line',\n  dataElementType: 'point',\n  indexAxis: 'r',\n  showLine: true,\n  elements: {\n    line: {\n      fill: 'start'\n    }\n  },\n};\nRadarController.overrides = {\n  aspectRatio: 1,\n  scales: {\n    r: {\n      type: 'radialLinear',\n    }\n  }\n};\n\nclass ScatterController extends LineController {\n}\nScatterController.id = 'scatter';\nScatterController.defaults = {\n  showLine: false,\n  fill: false\n};\nScatterController.overrides = {\n  interaction: {\n    mode: 'point'\n  },\n  plugins: {\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(item) {\n          return '(' + item.label + ', ' + item.formattedValue + ')';\n        }\n      }\n    }\n  },\n  scales: {\n    x: {\n      type: 'linear'\n    },\n    y: {\n      type: 'linear'\n    }\n  }\n};\n\nvar controllers = /*#__PURE__*/Object.freeze({\n__proto__: null,\nBarController: BarController,\nBubbleController: BubbleController,\nDoughnutController: DoughnutController,\nLineController: LineController,\nPolarAreaController: PolarAreaController,\nPieController: PieController,\nRadarController: RadarController,\nScatterController: ScatterController\n});\n\nfunction abstract() {\n  throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\nclass DateAdapter {\n  constructor(options) {\n    this.options = options || {};\n  }\n  formats() {\n    return abstract();\n  }\n  parse(value, format) {\n    return abstract();\n  }\n  format(timestamp, format) {\n    return abstract();\n  }\n  add(timestamp, amount, unit) {\n    return abstract();\n  }\n  diff(a, b, unit) {\n    return abstract();\n  }\n  startOf(timestamp, unit, weekday) {\n    return abstract();\n  }\n  endOf(timestamp, unit) {\n    return abstract();\n  }\n}\nDateAdapter.override = function(members) {\n  Object.assign(DateAdapter.prototype, members);\n};\nvar adapters = {\n  _date: DateAdapter\n};\n\nfunction getRelativePosition(e, chart) {\n  if ('native' in e) {\n    return {\n      x: e.x,\n      y: e.y\n    };\n  }\n  return getRelativePosition$1(e, chart);\n}\nfunction evaluateAllVisibleItems(chart, handler) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  let index, data, element;\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    ({index, data} = metasets[i]);\n    for (let j = 0, jlen = data.length; j < jlen; ++j) {\n      element = data[j];\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\nfunction binarySearch(metaset, axis, value, intersect) {\n  const {controller, data, _sorted} = metaset;\n  const iScale = controller._cachedMeta.iScale;\n  if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\n    const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n    if (!intersect) {\n      return lookupMethod(data, axis, value);\n    } else if (controller._sharedOptions) {\n      const el = data[0];\n      const range = typeof el.getRange === 'function' && el.getRange(axis);\n      if (range) {\n        const start = lookupMethod(data, axis, value - range);\n        const end = lookupMethod(data, axis, value + range);\n        return {lo: start.lo, hi: end.hi};\n      }\n    }\n  }\n  return {lo: 0, hi: data.length - 1};\n}\nfunction optimizedEvaluateItems(chart, axis, position, handler, intersect) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  const value = position[axis];\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    const {index, data} = metasets[i];\n    const {lo, hi} = binarySearch(metasets[i], axis, value, intersect);\n    for (let j = lo; j <= hi; ++j) {\n      const element = data[j];\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\nfunction getDistanceMetricForAxis(axis) {\n  const useX = axis.indexOf('x') !== -1;\n  const useY = axis.indexOf('y') !== -1;\n  return function(pt1, pt2) {\n    const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n    const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n    return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n  };\n}\nfunction getIntersectItems(chart, position, axis, useFinalPosition) {\n  const items = [];\n  if (!_isPointInArea(position, chart.chartArea, chart._minPadding)) {\n    return items;\n  }\n  const evaluationFunc = function(element, datasetIndex, index) {\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n    }\n  };\n  optimizedEvaluateItems(chart, axis, position, evaluationFunc, true);\n  return items;\n}\nfunction getNearestRadialItems(chart, position, axis, useFinalPosition) {\n  let items = [];\n  function evaluationFunc(element, datasetIndex, index) {\n    const {startAngle, endAngle} = element.getProps(['startAngle', 'endAngle'], useFinalPosition);\n    const {angle} = getAngleFromPoint(element, {x: position.x, y: position.y});\n    if (_angleBetween(angle, startAngle, endAngle)) {\n      items.push({element, datasetIndex, index});\n    }\n  }\n  optimizedEvaluateItems(chart, axis, position, evaluationFunc);\n  return items;\n}\nfunction getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition) {\n  let items = [];\n  const distanceMetric = getDistanceMetricForAxis(axis);\n  let minDistance = Number.POSITIVE_INFINITY;\n  function evaluationFunc(element, datasetIndex, index) {\n    const inRange = element.inRange(position.x, position.y, useFinalPosition);\n    if (intersect && !inRange) {\n      return;\n    }\n    const center = element.getCenterPoint(useFinalPosition);\n    const pointInArea = _isPointInArea(center, chart.chartArea, chart._minPadding);\n    if (!pointInArea && !inRange) {\n      return;\n    }\n    const distance = distanceMetric(position, center);\n    if (distance < minDistance) {\n      items = [{element, datasetIndex, index}];\n      minDistance = distance;\n    } else if (distance === minDistance) {\n      items.push({element, datasetIndex, index});\n    }\n  }\n  optimizedEvaluateItems(chart, axis, position, evaluationFunc);\n  return items;\n}\nfunction getNearestItems(chart, position, axis, intersect, useFinalPosition) {\n  if (!_isPointInArea(position, chart.chartArea, chart._minPadding)) {\n    return [];\n  }\n  return axis === 'r' && !intersect\n    ? getNearestRadialItems(chart, position, axis, useFinalPosition)\n    : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition);\n}\nfunction getAxisItems(chart, e, options, useFinalPosition) {\n  const position = getRelativePosition(e, chart);\n  const items = [];\n  const axis = options.axis;\n  const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n  let intersectsItem = false;\n  evaluateAllVisibleItems(chart, (element, datasetIndex, index) => {\n    if (element[rangeMethod](position[axis], useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n    }\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      intersectsItem = true;\n    }\n  });\n  if (options.intersect && !intersectsItem) {\n    return [];\n  }\n  return items;\n}\nvar Interaction = {\n  modes: {\n    index(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'x';\n      const items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition)\n        : getNearestItems(chart, position, axis, false, useFinalPosition);\n      const elements = [];\n      if (!items.length) {\n        return [];\n      }\n      chart.getSortedVisibleDatasetMetas().forEach((meta) => {\n        const index = items[0].index;\n        const element = meta.data[index];\n        if (element && !element.skip) {\n          elements.push({element, datasetIndex: meta.index, index});\n        }\n      });\n      return elements;\n    },\n    dataset(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      let items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition) :\n        getNearestItems(chart, position, axis, false, useFinalPosition);\n      if (items.length > 0) {\n        const datasetIndex = items[0].datasetIndex;\n        const data = chart.getDatasetMeta(datasetIndex).data;\n        items = [];\n        for (let i = 0; i < data.length; ++i) {\n          items.push({element: data[i], datasetIndex, index: i});\n        }\n      }\n      return items;\n    },\n    point(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      return getIntersectItems(chart, position, axis, useFinalPosition);\n    },\n    nearest(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      return getNearestItems(chart, position, axis, options.intersect, useFinalPosition);\n    },\n    x(chart, e, options, useFinalPosition) {\n      return getAxisItems(chart, e, {axis: 'x', intersect: options.intersect}, useFinalPosition);\n    },\n    y(chart, e, options, useFinalPosition) {\n      return getAxisItems(chart, e, {axis: 'y', intersect: options.intersect}, useFinalPosition);\n    }\n  }\n};\n\nconst STATIC_POSITIONS = ['left', 'top', 'right', 'bottom'];\nfunction filterByPosition(array, position) {\n  return array.filter(v => v.pos === position);\n}\nfunction filterDynamicPositionByAxis(array, axis) {\n  return array.filter(v => STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\nfunction sortByWeight(array, reverse) {\n  return array.sort((a, b) => {\n    const v0 = reverse ? b : a;\n    const v1 = reverse ? a : b;\n    return v0.weight === v1.weight ?\n      v0.index - v1.index :\n      v0.weight - v1.weight;\n  });\n}\nfunction wrapBoxes(boxes) {\n  const layoutBoxes = [];\n  let i, ilen, box, pos, stack, stackWeight;\n  for (i = 0, ilen = (boxes || []).length; i < ilen; ++i) {\n    box = boxes[i];\n    ({position: pos, options: {stack, stackWeight = 1}} = box);\n    layoutBoxes.push({\n      index: i,\n      box,\n      pos,\n      horizontal: box.isHorizontal(),\n      weight: box.weight,\n      stack: stack && (pos + stack),\n      stackWeight\n    });\n  }\n  return layoutBoxes;\n}\nfunction buildStacks(layouts) {\n  const stacks = {};\n  for (const wrap of layouts) {\n    const {stack, pos, stackWeight} = wrap;\n    if (!stack || !STATIC_POSITIONS.includes(pos)) {\n      continue;\n    }\n    const _stack = stacks[stack] || (stacks[stack] = {count: 0, placed: 0, weight: 0, size: 0});\n    _stack.count++;\n    _stack.weight += stackWeight;\n  }\n  return stacks;\n}\nfunction setLayoutDims(layouts, params) {\n  const stacks = buildStacks(layouts);\n  const {vBoxMaxWidth, hBoxMaxHeight} = params;\n  let i, ilen, layout;\n  for (i = 0, ilen = layouts.length; i < ilen; ++i) {\n    layout = layouts[i];\n    const {fullSize} = layout.box;\n    const stack = stacks[layout.stack];\n    const factor = stack && layout.stackWeight / stack.weight;\n    if (layout.horizontal) {\n      layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n      layout.height = hBoxMaxHeight;\n    } else {\n      layout.width = vBoxMaxWidth;\n      layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n    }\n  }\n  return stacks;\n}\nfunction buildLayoutBoxes(boxes) {\n  const layoutBoxes = wrapBoxes(boxes);\n  const fullSize = sortByWeight(layoutBoxes.filter(wrap => wrap.box.fullSize), true);\n  const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n  const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n  const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n  const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n  const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n  const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n  return {\n    fullSize,\n    leftAndTop: left.concat(top),\n    rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n    chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n    vertical: left.concat(right).concat(centerVertical),\n    horizontal: top.concat(bottom).concat(centerHorizontal)\n  };\n}\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n  return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\nfunction updateMaxPadding(maxPadding, boxPadding) {\n  maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n  maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n  maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n  maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\nfunction updateDims(chartArea, params, layout, stacks) {\n  const {pos, box} = layout;\n  const maxPadding = chartArea.maxPadding;\n  if (!isObject(pos)) {\n    if (layout.size) {\n      chartArea[pos] -= layout.size;\n    }\n    const stack = stacks[layout.stack] || {size: 0, count: 1};\n    stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n    layout.size = stack.size / stack.count;\n    chartArea[pos] += layout.size;\n  }\n  if (box.getPadding) {\n    updateMaxPadding(maxPadding, box.getPadding());\n  }\n  const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n  const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n  const widthChanged = newWidth !== chartArea.w;\n  const heightChanged = newHeight !== chartArea.h;\n  chartArea.w = newWidth;\n  chartArea.h = newHeight;\n  return layout.horizontal\n    ? {same: widthChanged, other: heightChanged}\n    : {same: heightChanged, other: widthChanged};\n}\nfunction handleMaxPadding(chartArea) {\n  const maxPadding = chartArea.maxPadding;\n  function updatePos(pos) {\n    const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n    chartArea[pos] += change;\n    return change;\n  }\n  chartArea.y += updatePos('top');\n  chartArea.x += updatePos('left');\n  updatePos('right');\n  updatePos('bottom');\n}\nfunction getMargins(horizontal, chartArea) {\n  const maxPadding = chartArea.maxPadding;\n  function marginForPositions(positions) {\n    const margin = {left: 0, top: 0, right: 0, bottom: 0};\n    positions.forEach((pos) => {\n      margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n    });\n    return margin;\n  }\n  return horizontal\n    ? marginForPositions(['left', 'right'])\n    : marginForPositions(['top', 'bottom']);\n}\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n  const refitBoxes = [];\n  let i, ilen, layout, box, refit, changed;\n  for (i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i) {\n    layout = boxes[i];\n    box = layout.box;\n    box.update(\n      layout.width || chartArea.w,\n      layout.height || chartArea.h,\n      getMargins(layout.horizontal, chartArea)\n    );\n    const {same, other} = updateDims(chartArea, params, layout, stacks);\n    refit |= same && refitBoxes.length;\n    changed = changed || other;\n    if (!box.fullSize) {\n      refitBoxes.push(layout);\n    }\n  }\n  return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\nfunction setBoxDims(box, left, top, width, height) {\n  box.top = top;\n  box.left = left;\n  box.right = left + width;\n  box.bottom = top + height;\n  box.width = width;\n  box.height = height;\n}\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n  const userPadding = params.padding;\n  let {x, y} = chartArea;\n  for (const layout of boxes) {\n    const box = layout.box;\n    const stack = stacks[layout.stack] || {count: 1, placed: 0, weight: 1};\n    const weight = (layout.stackWeight / stack.weight) || 1;\n    if (layout.horizontal) {\n      const width = chartArea.w * weight;\n      const height = stack.size || box.height;\n      if (defined(stack.start)) {\n        y = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n      } else {\n        setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n      }\n      stack.start = y;\n      stack.placed += width;\n      y = box.bottom;\n    } else {\n      const height = chartArea.h * weight;\n      const width = stack.size || box.width;\n      if (defined(stack.start)) {\n        x = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, x, userPadding.top, width, params.outerHeight - userPadding.bottom - userPadding.top);\n      } else {\n        setBoxDims(box, x, chartArea.top + stack.placed, width, height);\n      }\n      stack.start = x;\n      stack.placed += height;\n      x = box.right;\n    }\n  }\n  chartArea.x = x;\n  chartArea.y = y;\n}\ndefaults.set('layout', {\n  autoPadding: true,\n  padding: {\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0\n  }\n});\nvar layouts = {\n  addBox(chart, item) {\n    if (!chart.boxes) {\n      chart.boxes = [];\n    }\n    item.fullSize = item.fullSize || false;\n    item.position = item.position || 'top';\n    item.weight = item.weight || 0;\n    item._layers = item._layers || function() {\n      return [{\n        z: 0,\n        draw(chartArea) {\n          item.draw(chartArea);\n        }\n      }];\n    };\n    chart.boxes.push(item);\n  },\n  removeBox(chart, layoutItem) {\n    const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n    if (index !== -1) {\n      chart.boxes.splice(index, 1);\n    }\n  },\n  configure(chart, item, options) {\n    item.fullSize = options.fullSize;\n    item.position = options.position;\n    item.weight = options.weight;\n  },\n  update(chart, width, height, minPadding) {\n    if (!chart) {\n      return;\n    }\n    const padding = toPadding(chart.options.layout.padding);\n    const availableWidth = Math.max(width - padding.width, 0);\n    const availableHeight = Math.max(height - padding.height, 0);\n    const boxes = buildLayoutBoxes(chart.boxes);\n    const verticalBoxes = boxes.vertical;\n    const horizontalBoxes = boxes.horizontal;\n    each(chart.boxes, box => {\n      if (typeof box.beforeLayout === 'function') {\n        box.beforeLayout();\n      }\n    });\n    const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap) =>\n      wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n    const params = Object.freeze({\n      outerWidth: width,\n      outerHeight: height,\n      padding,\n      availableWidth,\n      availableHeight,\n      vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n      hBoxMaxHeight: availableHeight / 2\n    });\n    const maxPadding = Object.assign({}, padding);\n    updateMaxPadding(maxPadding, toPadding(minPadding));\n    const chartArea = Object.assign({\n      maxPadding,\n      w: availableWidth,\n      h: availableHeight,\n      x: padding.left,\n      y: padding.top\n    }, padding);\n    const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n    fitBoxes(boxes.fullSize, chartArea, params, stacks);\n    fitBoxes(verticalBoxes, chartArea, params, stacks);\n    if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n      fitBoxes(verticalBoxes, chartArea, params, stacks);\n    }\n    handleMaxPadding(chartArea);\n    placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n    chartArea.x += chartArea.w;\n    chartArea.y += chartArea.h;\n    placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n    chart.chartArea = {\n      left: chartArea.left,\n      top: chartArea.top,\n      right: chartArea.left + chartArea.w,\n      bottom: chartArea.top + chartArea.h,\n      height: chartArea.h,\n      width: chartArea.w,\n    };\n    each(boxes.chartArea, (layout) => {\n      const box = layout.box;\n      Object.assign(box, chart.chartArea);\n      box.update(chartArea.w, chartArea.h, {left: 0, top: 0, right: 0, bottom: 0});\n    });\n  }\n};\n\nclass BasePlatform {\n  acquireContext(canvas, aspectRatio) {}\n  releaseContext(context) {\n    return false;\n  }\n  addEventListener(chart, type, listener) {}\n  removeEventListener(chart, type, listener) {}\n  getDevicePixelRatio() {\n    return 1;\n  }\n  getMaximumSize(element, width, height, aspectRatio) {\n    width = Math.max(0, width || element.width);\n    height = height || element.height;\n    return {\n      width,\n      height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n    };\n  }\n  isAttached(canvas) {\n    return true;\n  }\n  updateConfig(config) {\n  }\n}\n\nclass BasicPlatform extends BasePlatform {\n  acquireContext(item) {\n    return item && item.getContext && item.getContext('2d') || null;\n  }\n  updateConfig(config) {\n    config.options.animation = false;\n  }\n}\n\nconst EXPANDO_KEY = '$chartjs';\nconst EVENT_TYPES = {\n  touchstart: 'mousedown',\n  touchmove: 'mousemove',\n  touchend: 'mouseup',\n  pointerenter: 'mouseenter',\n  pointerdown: 'mousedown',\n  pointermove: 'mousemove',\n  pointerup: 'mouseup',\n  pointerleave: 'mouseout',\n  pointerout: 'mouseout'\n};\nconst isNullOrEmpty = value => value === null || value === '';\nfunction initCanvas(canvas, aspectRatio) {\n  const style = canvas.style;\n  const renderHeight = canvas.getAttribute('height');\n  const renderWidth = canvas.getAttribute('width');\n  canvas[EXPANDO_KEY] = {\n    initial: {\n      height: renderHeight,\n      width: renderWidth,\n      style: {\n        display: style.display,\n        height: style.height,\n        width: style.width\n      }\n    }\n  };\n  style.display = style.display || 'block';\n  style.boxSizing = style.boxSizing || 'border-box';\n  if (isNullOrEmpty(renderWidth)) {\n    const displayWidth = readUsedSize(canvas, 'width');\n    if (displayWidth !== undefined) {\n      canvas.width = displayWidth;\n    }\n  }\n  if (isNullOrEmpty(renderHeight)) {\n    if (canvas.style.height === '') {\n      canvas.height = canvas.width / (aspectRatio || 2);\n    } else {\n      const displayHeight = readUsedSize(canvas, 'height');\n      if (displayHeight !== undefined) {\n        canvas.height = displayHeight;\n      }\n    }\n  }\n  return canvas;\n}\nconst eventListenerOptions = supportsEventListenerOptions ? {passive: true} : false;\nfunction addListener(node, type, listener) {\n  node.addEventListener(type, listener, eventListenerOptions);\n}\nfunction removeListener(chart, type, listener) {\n  chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n}\nfunction fromNativeEvent(event, chart) {\n  const type = EVENT_TYPES[event.type] || event.type;\n  const {x, y} = getRelativePosition$1(event, chart);\n  return {\n    type,\n    chart,\n    native: event,\n    x: x !== undefined ? x : null,\n    y: y !== undefined ? y : null,\n  };\n}\nfunction nodeListContains(nodeList, canvas) {\n  for (const node of nodeList) {\n    if (node === canvas || node.contains(canvas)) {\n      return true;\n    }\n  }\n}\nfunction createAttachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\nfunction createDetachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\nfunction onWindowResize() {\n  const dpr = window.devicePixelRatio;\n  if (dpr === oldDevicePixelRatio) {\n    return;\n  }\n  oldDevicePixelRatio = dpr;\n  drpListeningCharts.forEach((resize, chart) => {\n    if (chart.currentDevicePixelRatio !== dpr) {\n      resize();\n    }\n  });\n}\nfunction listenDevicePixelRatioChanges(chart, resize) {\n  if (!drpListeningCharts.size) {\n    window.addEventListener('resize', onWindowResize);\n  }\n  drpListeningCharts.set(chart, resize);\n}\nfunction unlistenDevicePixelRatioChanges(chart) {\n  drpListeningCharts.delete(chart);\n  if (!drpListeningCharts.size) {\n    window.removeEventListener('resize', onWindowResize);\n  }\n}\nfunction createResizeObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && _getParentNode(canvas);\n  if (!container) {\n    return;\n  }\n  const resize = throttled((width, height) => {\n    const w = container.clientWidth;\n    listener(width, height);\n    if (w < container.clientWidth) {\n      listener();\n    }\n  }, window);\n  const observer = new ResizeObserver(entries => {\n    const entry = entries[0];\n    const width = entry.contentRect.width;\n    const height = entry.contentRect.height;\n    if (width === 0 && height === 0) {\n      return;\n    }\n    resize(width, height);\n  });\n  observer.observe(container);\n  listenDevicePixelRatioChanges(chart, resize);\n  return observer;\n}\nfunction releaseObserver(chart, type, observer) {\n  if (observer) {\n    observer.disconnect();\n  }\n  if (type === 'resize') {\n    unlistenDevicePixelRatioChanges(chart);\n  }\n}\nfunction createProxyAndListen(chart, type, listener) {\n  const canvas = chart.canvas;\n  const proxy = throttled((event) => {\n    if (chart.ctx !== null) {\n      listener(fromNativeEvent(event, chart));\n    }\n  }, chart, (args) => {\n    const event = args[0];\n    return [event, event.offsetX, event.offsetY];\n  });\n  addListener(canvas, type, proxy);\n  return proxy;\n}\nclass DomPlatform extends BasePlatform {\n  acquireContext(canvas, aspectRatio) {\n    const context = canvas && canvas.getContext && canvas.getContext('2d');\n    if (context && context.canvas === canvas) {\n      initCanvas(canvas, aspectRatio);\n      return context;\n    }\n    return null;\n  }\n  releaseContext(context) {\n    const canvas = context.canvas;\n    if (!canvas[EXPANDO_KEY]) {\n      return false;\n    }\n    const initial = canvas[EXPANDO_KEY].initial;\n    ['height', 'width'].forEach((prop) => {\n      const value = initial[prop];\n      if (isNullOrUndef(value)) {\n        canvas.removeAttribute(prop);\n      } else {\n        canvas.setAttribute(prop, value);\n      }\n    });\n    const style = initial.style || {};\n    Object.keys(style).forEach((key) => {\n      canvas.style[key] = style[key];\n    });\n    canvas.width = canvas.width;\n    delete canvas[EXPANDO_KEY];\n    return true;\n  }\n  addEventListener(chart, type, listener) {\n    this.removeEventListener(chart, type);\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const handlers = {\n      attach: createAttachObserver,\n      detach: createDetachObserver,\n      resize: createResizeObserver\n    };\n    const handler = handlers[type] || createProxyAndListen;\n    proxies[type] = handler(chart, type, listener);\n  }\n  removeEventListener(chart, type) {\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const proxy = proxies[type];\n    if (!proxy) {\n      return;\n    }\n    const handlers = {\n      attach: releaseObserver,\n      detach: releaseObserver,\n      resize: releaseObserver\n    };\n    const handler = handlers[type] || removeListener;\n    handler(chart, type, proxy);\n    proxies[type] = undefined;\n  }\n  getDevicePixelRatio() {\n    return window.devicePixelRatio;\n  }\n  getMaximumSize(canvas, width, height, aspectRatio) {\n    return getMaximumSize(canvas, width, height, aspectRatio);\n  }\n  isAttached(canvas) {\n    const container = _getParentNode(canvas);\n    return !!(container && container.isConnected);\n  }\n}\n\nfunction _detectPlatform(canvas) {\n  if (!_isDomSupported() || (typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas)) {\n    return BasicPlatform;\n  }\n  return DomPlatform;\n}\n\nclass Element {\n  constructor() {\n    this.x = undefined;\n    this.y = undefined;\n    this.active = false;\n    this.options = undefined;\n    this.$animations = undefined;\n  }\n  tooltipPosition(useFinalPosition) {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y};\n  }\n  hasValue() {\n    return isNumber(this.x) && isNumber(this.y);\n  }\n  getProps(props, final) {\n    const anims = this.$animations;\n    if (!final || !anims) {\n      return this;\n    }\n    const ret = {};\n    props.forEach(prop => {\n      ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop];\n    });\n    return ret;\n  }\n}\nElement.defaults = {};\nElement.defaultRoutes = undefined;\n\nconst formatters = {\n  values(value) {\n    return isArray(value) ? value : '' + value;\n  },\n  numeric(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const locale = this.chart.options.locale;\n    let notation;\n    let delta = tickValue;\n    if (ticks.length > 1) {\n      const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n      if (maxTick < 1e-4 || maxTick > 1e+15) {\n        notation = 'scientific';\n      }\n      delta = calculateDelta(tickValue, ticks);\n    }\n    const logDelta = log10(Math.abs(delta));\n    const numDecimal = Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n    const options = {notation, minimumFractionDigits: numDecimal, maximumFractionDigits: numDecimal};\n    Object.assign(options, this.options.ticks.format);\n    return formatNumber(tickValue, locale, options);\n  },\n  logarithmic(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const remain = tickValue / (Math.pow(10, Math.floor(log10(tickValue))));\n    if (remain === 1 || remain === 2 || remain === 5) {\n      return formatters.numeric.call(this, tickValue, index, ticks);\n    }\n    return '';\n  }\n};\nfunction calculateDelta(tickValue, ticks) {\n  let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n  if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n    delta = tickValue - Math.floor(tickValue);\n  }\n  return delta;\n}\nvar Ticks = {formatters};\n\ndefaults.set('scale', {\n  display: true,\n  offset: false,\n  reverse: false,\n  beginAtZero: false,\n  bounds: 'ticks',\n  grace: 0,\n  grid: {\n    display: true,\n    lineWidth: 1,\n    drawBorder: true,\n    drawOnChartArea: true,\n    drawTicks: true,\n    tickLength: 8,\n    tickWidth: (_ctx, options) => options.lineWidth,\n    tickColor: (_ctx, options) => options.color,\n    offset: false,\n    borderDash: [],\n    borderDashOffset: 0.0,\n    borderWidth: 1\n  },\n  title: {\n    display: false,\n    text: '',\n    padding: {\n      top: 4,\n      bottom: 4\n    }\n  },\n  ticks: {\n    minRotation: 0,\n    maxRotation: 50,\n    mirror: false,\n    textStrokeWidth: 0,\n    textStrokeColor: '',\n    padding: 3,\n    display: true,\n    autoSkip: true,\n    autoSkipPadding: 3,\n    labelOffset: 0,\n    callback: Ticks.formatters.values,\n    minor: {},\n    major: {},\n    align: 'center',\n    crossAlign: 'near',\n    showLabelBackdrop: false,\n    backdropColor: 'rgba(255, 255, 255, 0.75)',\n    backdropPadding: 2,\n  }\n});\ndefaults.route('scale.ticks', 'color', '', 'color');\ndefaults.route('scale.grid', 'color', '', 'borderColor');\ndefaults.route('scale.grid', 'borderColor', '', 'borderColor');\ndefaults.route('scale.title', 'color', '', 'color');\ndefaults.describe('scale', {\n  _fallback: false,\n  _scriptable: (name) => !name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n  _indexable: (name) => name !== 'borderDash' && name !== 'tickBorderDash',\n});\ndefaults.describe('scales', {\n  _fallback: 'scale',\n});\ndefaults.describe('scale.ticks', {\n  _scriptable: (name) => name !== 'backdropPadding' && name !== 'callback',\n  _indexable: (name) => name !== 'backdropPadding',\n});\n\nfunction autoSkip(scale, ticks) {\n  const tickOpts = scale.options.ticks;\n  const ticksLimit = tickOpts.maxTicksLimit || determineMaxTicks(scale);\n  const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n  const numMajorIndices = majorIndices.length;\n  const first = majorIndices[0];\n  const last = majorIndices[numMajorIndices - 1];\n  const newTicks = [];\n  if (numMajorIndices > ticksLimit) {\n    skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n    return newTicks;\n  }\n  const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n  if (numMajorIndices > 0) {\n    let i, ilen;\n    const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n    skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n    for (i = 0, ilen = numMajorIndices - 1; i < ilen; i++) {\n      skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n    }\n    skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n    return newTicks;\n  }\n  skip(ticks, newTicks, spacing);\n  return newTicks;\n}\nfunction determineMaxTicks(scale) {\n  const offset = scale.options.offset;\n  const tickLength = scale._tickSize();\n  const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n  const maxChart = scale._maxLength / tickLength;\n  return Math.floor(Math.min(maxScale, maxChart));\n}\nfunction calculateSpacing(majorIndices, ticks, ticksLimit) {\n  const evenMajorSpacing = getEvenSpacing(majorIndices);\n  const spacing = ticks.length / ticksLimit;\n  if (!evenMajorSpacing) {\n    return Math.max(spacing, 1);\n  }\n  const factors = _factorize(evenMajorSpacing);\n  for (let i = 0, ilen = factors.length - 1; i < ilen; i++) {\n    const factor = factors[i];\n    if (factor > spacing) {\n      return factor;\n    }\n  }\n  return Math.max(spacing, 1);\n}\nfunction getMajorIndices(ticks) {\n  const result = [];\n  let i, ilen;\n  for (i = 0, ilen = ticks.length; i < ilen; i++) {\n    if (ticks[i].major) {\n      result.push(i);\n    }\n  }\n  return result;\n}\nfunction skipMajors(ticks, newTicks, majorIndices, spacing) {\n  let count = 0;\n  let next = majorIndices[0];\n  let i;\n  spacing = Math.ceil(spacing);\n  for (i = 0; i < ticks.length; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = majorIndices[count * spacing];\n    }\n  }\n}\nfunction skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n  const start = valueOrDefault(majorStart, 0);\n  const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n  let count = 0;\n  let length, i, next;\n  spacing = Math.ceil(spacing);\n  if (majorEnd) {\n    length = majorEnd - majorStart;\n    spacing = length / Math.floor(length / spacing);\n  }\n  next = start;\n  while (next < 0) {\n    count++;\n    next = Math.round(start + count * spacing);\n  }\n  for (i = Math.max(start, 0); i < end; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = Math.round(start + count * spacing);\n    }\n  }\n}\nfunction getEvenSpacing(arr) {\n  const len = arr.length;\n  let i, diff;\n  if (len < 2) {\n    return false;\n  }\n  for (diff = arr[0], i = 1; i < len; ++i) {\n    if (arr[i] - arr[i - 1] !== diff) {\n      return false;\n    }\n  }\n  return diff;\n}\n\nconst reverseAlign = (align) => align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset) => edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\nfunction sample(arr, numItems) {\n  const result = [];\n  const increment = arr.length / numItems;\n  const len = arr.length;\n  let i = 0;\n  for (; i < len; i += increment) {\n    result.push(arr[Math.floor(i)]);\n  }\n  return result;\n}\nfunction getPixelForGridLine(scale, index, offsetGridLines) {\n  const length = scale.ticks.length;\n  const validIndex = Math.min(index, length - 1);\n  const start = scale._startPixel;\n  const end = scale._endPixel;\n  const epsilon = 1e-6;\n  let lineValue = scale.getPixelForTick(validIndex);\n  let offset;\n  if (offsetGridLines) {\n    if (length === 1) {\n      offset = Math.max(lineValue - start, end - lineValue);\n    } else if (index === 0) {\n      offset = (scale.getPixelForTick(1) - lineValue) / 2;\n    } else {\n      offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n    }\n    lineValue += validIndex < index ? offset : -offset;\n    if (lineValue < start - epsilon || lineValue > end + epsilon) {\n      return;\n    }\n  }\n  return lineValue;\n}\nfunction garbageCollect(caches, length) {\n  each(caches, (cache) => {\n    const gc = cache.gc;\n    const gcLen = gc.length / 2;\n    let i;\n    if (gcLen > length) {\n      for (i = 0; i < gcLen; ++i) {\n        delete cache.data[gc[i]];\n      }\n      gc.splice(0, gcLen);\n    }\n  });\n}\nfunction getTickMarkLength(options) {\n  return options.drawTicks ? options.tickLength : 0;\n}\nfunction getTitleHeight(options, fallback) {\n  if (!options.display) {\n    return 0;\n  }\n  const font = toFont(options.font, fallback);\n  const padding = toPadding(options.padding);\n  const lines = isArray(options.text) ? options.text.length : 1;\n  return (lines * font.lineHeight) + padding.height;\n}\nfunction createScaleContext(parent, scale) {\n  return createContext(parent, {\n    scale,\n    type: 'scale'\n  });\n}\nfunction createTickContext(parent, index, tick) {\n  return createContext(parent, {\n    tick,\n    index,\n    type: 'tick'\n  });\n}\nfunction titleAlign(align, position, reverse) {\n  let ret = _toLeftRightCenter(align);\n  if ((reverse && position !== 'right') || (!reverse && position === 'right')) {\n    ret = reverseAlign(ret);\n  }\n  return ret;\n}\nfunction titleArgs(scale, offset, position, align) {\n  const {top, left, bottom, right, chart} = scale;\n  const {chartArea, scales} = chart;\n  let rotation = 0;\n  let maxWidth, titleX, titleY;\n  const height = bottom - top;\n  const width = right - left;\n  if (scale.isHorizontal()) {\n    titleX = _alignStartEnd(align, left, right);\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n    } else if (position === 'center') {\n      titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n    } else {\n      titleY = offsetFromEdge(scale, position, offset);\n    }\n    maxWidth = right - left;\n  } else {\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleX = scales[positionAxisID].getPixelForValue(value) - width + offset;\n    } else if (position === 'center') {\n      titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n    } else {\n      titleX = offsetFromEdge(scale, position, offset);\n    }\n    titleY = _alignStartEnd(align, bottom, top);\n    rotation = position === 'left' ? -HALF_PI : HALF_PI;\n  }\n  return {titleX, titleY, maxWidth, rotation};\n}\nclass Scale extends Element {\n  constructor(cfg) {\n    super();\n    this.id = cfg.id;\n    this.type = cfg.type;\n    this.options = undefined;\n    this.ctx = cfg.ctx;\n    this.chart = cfg.chart;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this._margins = {\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    };\n    this.maxWidth = undefined;\n    this.maxHeight = undefined;\n    this.paddingTop = undefined;\n    this.paddingBottom = undefined;\n    this.paddingLeft = undefined;\n    this.paddingRight = undefined;\n    this.axis = undefined;\n    this.labelRotation = undefined;\n    this.min = undefined;\n    this.max = undefined;\n    this._range = undefined;\n    this.ticks = [];\n    this._gridLineItems = null;\n    this._labelItems = null;\n    this._labelSizes = null;\n    this._length = 0;\n    this._maxLength = 0;\n    this._longestTextCache = {};\n    this._startPixel = undefined;\n    this._endPixel = undefined;\n    this._reversePixels = false;\n    this._userMax = undefined;\n    this._userMin = undefined;\n    this._suggestedMax = undefined;\n    this._suggestedMin = undefined;\n    this._ticksLength = 0;\n    this._borderValue = 0;\n    this._cache = {};\n    this._dataLimitsCached = false;\n    this.$context = undefined;\n  }\n  init(options) {\n    this.options = options.setContext(this.getContext());\n    this.axis = options.axis;\n    this._userMin = this.parse(options.min);\n    this._userMax = this.parse(options.max);\n    this._suggestedMin = this.parse(options.suggestedMin);\n    this._suggestedMax = this.parse(options.suggestedMax);\n  }\n  parse(raw, index) {\n    return raw;\n  }\n  getUserBounds() {\n    let {_userMin, _userMax, _suggestedMin, _suggestedMax} = this;\n    _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n    _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n    _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n    _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n    return {\n      min: finiteOrDefault(_userMin, _suggestedMin),\n      max: finiteOrDefault(_userMax, _suggestedMax),\n      minDefined: isNumberFinite(_userMin),\n      maxDefined: isNumberFinite(_userMax)\n    };\n  }\n  getMinMax(canStack) {\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n    let range;\n    if (minDefined && maxDefined) {\n      return {min, max};\n    }\n    const metas = this.getMatchingVisibleMetas();\n    for (let i = 0, ilen = metas.length; i < ilen; ++i) {\n      range = metas[i].controller.getMinMax(this, canStack);\n      if (!minDefined) {\n        min = Math.min(min, range.min);\n      }\n      if (!maxDefined) {\n        max = Math.max(max, range.max);\n      }\n    }\n    min = maxDefined && min > max ? max : min;\n    max = minDefined && min > max ? min : max;\n    return {\n      min: finiteOrDefault(min, finiteOrDefault(max, min)),\n      max: finiteOrDefault(max, finiteOrDefault(min, max))\n    };\n  }\n  getPadding() {\n    return {\n      left: this.paddingLeft || 0,\n      top: this.paddingTop || 0,\n      right: this.paddingRight || 0,\n      bottom: this.paddingBottom || 0\n    };\n  }\n  getTicks() {\n    return this.ticks;\n  }\n  getLabels() {\n    const data = this.chart.data;\n    return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n  }\n  beforeLayout() {\n    this._cache = {};\n    this._dataLimitsCached = false;\n  }\n  beforeUpdate() {\n    callback(this.options.beforeUpdate, [this]);\n  }\n  update(maxWidth, maxHeight, margins) {\n    const {beginAtZero, grace, ticks: tickOpts} = this.options;\n    const sampleSize = tickOpts.sampleSize;\n    this.beforeUpdate();\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins = Object.assign({\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    }, margins);\n    this.ticks = null;\n    this._labelSizes = null;\n    this._gridLineItems = null;\n    this._labelItems = null;\n    this.beforeSetDimensions();\n    this.setDimensions();\n    this.afterSetDimensions();\n    this._maxLength = this.isHorizontal()\n      ? this.width + margins.left + margins.right\n      : this.height + margins.top + margins.bottom;\n    if (!this._dataLimitsCached) {\n      this.beforeDataLimits();\n      this.determineDataLimits();\n      this.afterDataLimits();\n      this._range = _addGrace(this, grace, beginAtZero);\n      this._dataLimitsCached = true;\n    }\n    this.beforeBuildTicks();\n    this.ticks = this.buildTicks() || [];\n    this.afterBuildTicks();\n    const samplingEnabled = sampleSize < this.ticks.length;\n    this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n    this.configure();\n    this.beforeCalculateLabelRotation();\n    this.calculateLabelRotation();\n    this.afterCalculateLabelRotation();\n    if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n      this.ticks = autoSkip(this, this.ticks);\n      this._labelSizes = null;\n    }\n    if (samplingEnabled) {\n      this._convertTicksToLabels(this.ticks);\n    }\n    this.beforeFit();\n    this.fit();\n    this.afterFit();\n    this.afterUpdate();\n  }\n  configure() {\n    let reversePixels = this.options.reverse;\n    let startPixel, endPixel;\n    if (this.isHorizontal()) {\n      startPixel = this.left;\n      endPixel = this.right;\n    } else {\n      startPixel = this.top;\n      endPixel = this.bottom;\n      reversePixels = !reversePixels;\n    }\n    this._startPixel = startPixel;\n    this._endPixel = endPixel;\n    this._reversePixels = reversePixels;\n    this._length = endPixel - startPixel;\n    this._alignToPixels = this.options.alignToPixels;\n  }\n  afterUpdate() {\n    callback(this.options.afterUpdate, [this]);\n  }\n  beforeSetDimensions() {\n    callback(this.options.beforeSetDimensions, [this]);\n  }\n  setDimensions() {\n    if (this.isHorizontal()) {\n      this.width = this.maxWidth;\n      this.left = 0;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n      this.top = 0;\n      this.bottom = this.height;\n    }\n    this.paddingLeft = 0;\n    this.paddingTop = 0;\n    this.paddingRight = 0;\n    this.paddingBottom = 0;\n  }\n  afterSetDimensions() {\n    callback(this.options.afterSetDimensions, [this]);\n  }\n  _callHooks(name) {\n    this.chart.notifyPlugins(name, this.getContext());\n    callback(this.options[name], [this]);\n  }\n  beforeDataLimits() {\n    this._callHooks('beforeDataLimits');\n  }\n  determineDataLimits() {}\n  afterDataLimits() {\n    this._callHooks('afterDataLimits');\n  }\n  beforeBuildTicks() {\n    this._callHooks('beforeBuildTicks');\n  }\n  buildTicks() {\n    return [];\n  }\n  afterBuildTicks() {\n    this._callHooks('afterBuildTicks');\n  }\n  beforeTickToLabelConversion() {\n    callback(this.options.beforeTickToLabelConversion, [this]);\n  }\n  generateTickLabels(ticks) {\n    const tickOpts = this.options.ticks;\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      tick = ticks[i];\n      tick.label = callback(tickOpts.callback, [tick.value, i, ticks], this);\n    }\n  }\n  afterTickToLabelConversion() {\n    callback(this.options.afterTickToLabelConversion, [this]);\n  }\n  beforeCalculateLabelRotation() {\n    callback(this.options.beforeCalculateLabelRotation, [this]);\n  }\n  calculateLabelRotation() {\n    const options = this.options;\n    const tickOpts = options.ticks;\n    const numTicks = this.ticks.length;\n    const minRotation = tickOpts.minRotation || 0;\n    const maxRotation = tickOpts.maxRotation;\n    let labelRotation = minRotation;\n    let tickWidth, maxHeight, maxLabelDiagonal;\n    if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n      this.labelRotation = minRotation;\n      return;\n    }\n    const labelSizes = this._getLabelSizes();\n    const maxLabelWidth = labelSizes.widest.width;\n    const maxLabelHeight = labelSizes.highest.height;\n    const maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n    tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n    if (maxLabelWidth + 6 > tickWidth) {\n      tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n      maxHeight = this.maxHeight - getTickMarkLength(options.grid)\n\t\t\t\t- tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n      maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n      labelRotation = toDegrees(Math.min(\n        Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)),\n        Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))\n      ));\n      labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n    }\n    this.labelRotation = labelRotation;\n  }\n  afterCalculateLabelRotation() {\n    callback(this.options.afterCalculateLabelRotation, [this]);\n  }\n  beforeFit() {\n    callback(this.options.beforeFit, [this]);\n  }\n  fit() {\n    const minSize = {\n      width: 0,\n      height: 0\n    };\n    const {chart, options: {ticks: tickOpts, title: titleOpts, grid: gridOpts}} = this;\n    const display = this._isVisible();\n    const isHorizontal = this.isHorizontal();\n    if (display) {\n      const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n      if (isHorizontal) {\n        minSize.width = this.maxWidth;\n        minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n      } else {\n        minSize.height = this.maxHeight;\n        minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n      }\n      if (tickOpts.display && this.ticks.length) {\n        const {first, last, widest, highest} = this._getLabelSizes();\n        const tickPadding = tickOpts.padding * 2;\n        const angleRadians = toRadians(this.labelRotation);\n        const cos = Math.cos(angleRadians);\n        const sin = Math.sin(angleRadians);\n        if (isHorizontal) {\n          const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n          minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n        } else {\n          const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n          minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n        }\n        this._calculatePadding(first, last, sin, cos);\n      }\n    }\n    this._handleMargins();\n    if (isHorizontal) {\n      this.width = this._length = chart.width - this._margins.left - this._margins.right;\n      this.height = minSize.height;\n    } else {\n      this.width = minSize.width;\n      this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n    }\n  }\n  _calculatePadding(first, last, sin, cos) {\n    const {ticks: {align, padding}, position} = this.options;\n    const isRotated = this.labelRotation !== 0;\n    const labelsBelowTicks = position !== 'top' && this.axis === 'x';\n    if (this.isHorizontal()) {\n      const offsetLeft = this.getPixelForTick(0) - this.left;\n      const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n      let paddingLeft = 0;\n      let paddingRight = 0;\n      if (isRotated) {\n        if (labelsBelowTicks) {\n          paddingLeft = cos * first.width;\n          paddingRight = sin * last.height;\n        } else {\n          paddingLeft = sin * first.height;\n          paddingRight = cos * last.width;\n        }\n      } else if (align === 'start') {\n        paddingRight = last.width;\n      } else if (align === 'end') {\n        paddingLeft = first.width;\n      } else {\n        paddingLeft = first.width / 2;\n        paddingRight = last.width / 2;\n      }\n      this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n      this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n    } else {\n      let paddingTop = last.height / 2;\n      let paddingBottom = first.height / 2;\n      if (align === 'start') {\n        paddingTop = 0;\n        paddingBottom = first.height;\n      } else if (align === 'end') {\n        paddingTop = last.height;\n        paddingBottom = 0;\n      }\n      this.paddingTop = paddingTop + padding;\n      this.paddingBottom = paddingBottom + padding;\n    }\n  }\n  _handleMargins() {\n    if (this._margins) {\n      this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n      this._margins.top = Math.max(this.paddingTop, this._margins.top);\n      this._margins.right = Math.max(this.paddingRight, this._margins.right);\n      this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n    }\n  }\n  afterFit() {\n    callback(this.options.afterFit, [this]);\n  }\n  isHorizontal() {\n    const {axis, position} = this.options;\n    return position === 'top' || position === 'bottom' || axis === 'x';\n  }\n  isFullSize() {\n    return this.options.fullSize;\n  }\n  _convertTicksToLabels(ticks) {\n    this.beforeTickToLabelConversion();\n    this.generateTickLabels(ticks);\n    let i, ilen;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      if (isNullOrUndef(ticks[i].label)) {\n        ticks.splice(i, 1);\n        ilen--;\n        i--;\n      }\n    }\n    this.afterTickToLabelConversion();\n  }\n  _getLabelSizes() {\n    let labelSizes = this._labelSizes;\n    if (!labelSizes) {\n      const sampleSize = this.options.ticks.sampleSize;\n      let ticks = this.ticks;\n      if (sampleSize < ticks.length) {\n        ticks = sample(ticks, sampleSize);\n      }\n      this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length);\n    }\n    return labelSizes;\n  }\n  _computeLabelSizes(ticks, length) {\n    const {ctx, _longestTextCache: caches} = this;\n    const widths = [];\n    const heights = [];\n    let widestLabelSize = 0;\n    let highestLabelSize = 0;\n    let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n    for (i = 0; i < length; ++i) {\n      label = ticks[i].label;\n      tickFont = this._resolveTickFontOptions(i);\n      ctx.font = fontString = tickFont.string;\n      cache = caches[fontString] = caches[fontString] || {data: {}, gc: []};\n      lineHeight = tickFont.lineHeight;\n      width = height = 0;\n      if (!isNullOrUndef(label) && !isArray(label)) {\n        width = _measureText(ctx, cache.data, cache.gc, width, label);\n        height = lineHeight;\n      } else if (isArray(label)) {\n        for (j = 0, jlen = label.length; j < jlen; ++j) {\n          nestedLabel = label[j];\n          if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n            width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n            height += lineHeight;\n          }\n        }\n      }\n      widths.push(width);\n      heights.push(height);\n      widestLabelSize = Math.max(width, widestLabelSize);\n      highestLabelSize = Math.max(height, highestLabelSize);\n    }\n    garbageCollect(caches, length);\n    const widest = widths.indexOf(widestLabelSize);\n    const highest = heights.indexOf(highestLabelSize);\n    const valueAt = (idx) => ({width: widths[idx] || 0, height: heights[idx] || 0});\n    return {\n      first: valueAt(0),\n      last: valueAt(length - 1),\n      widest: valueAt(widest),\n      highest: valueAt(highest),\n      widths,\n      heights,\n    };\n  }\n  getLabelForValue(value) {\n    return value;\n  }\n  getPixelForValue(value, index) {\n    return NaN;\n  }\n  getValueForPixel(pixel) {}\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n  getPixelForDecimal(decimal) {\n    if (this._reversePixels) {\n      decimal = 1 - decimal;\n    }\n    const pixel = this._startPixel + decimal * this._length;\n    return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\n  }\n  getDecimalForPixel(pixel) {\n    const decimal = (pixel - this._startPixel) / this._length;\n    return this._reversePixels ? 1 - decimal : decimal;\n  }\n  getBasePixel() {\n    return this.getPixelForValue(this.getBaseValue());\n  }\n  getBaseValue() {\n    const {min, max} = this;\n    return min < 0 && max < 0 ? max :\n      min > 0 && max > 0 ? min :\n      0;\n  }\n  getContext(index) {\n    const ticks = this.ticks || [];\n    if (index >= 0 && index < ticks.length) {\n      const tick = ticks[index];\n      return tick.$context ||\n\t\t\t\t(tick.$context = createTickContext(this.getContext(), index, tick));\n    }\n    return this.$context ||\n\t\t\t(this.$context = createScaleContext(this.chart.getContext(), this));\n  }\n  _tickSize() {\n    const optionTicks = this.options.ticks;\n    const rot = toRadians(this.labelRotation);\n    const cos = Math.abs(Math.cos(rot));\n    const sin = Math.abs(Math.sin(rot));\n    const labelSizes = this._getLabelSizes();\n    const padding = optionTicks.autoSkipPadding || 0;\n    const w = labelSizes ? labelSizes.widest.width + padding : 0;\n    const h = labelSizes ? labelSizes.highest.height + padding : 0;\n    return this.isHorizontal()\n      ? h * cos > w * sin ? w / cos : h / sin\n      : h * sin < w * cos ? h / cos : w / sin;\n  }\n  _isVisible() {\n    const display = this.options.display;\n    if (display !== 'auto') {\n      return !!display;\n    }\n    return this.getMatchingVisibleMetas().length > 0;\n  }\n  _computeGridLineItems(chartArea) {\n    const axis = this.axis;\n    const chart = this.chart;\n    const options = this.options;\n    const {grid, position} = options;\n    const offset = grid.offset;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const ticksLength = ticks.length + (offset ? 1 : 0);\n    const tl = getTickMarkLength(grid);\n    const items = [];\n    const borderOpts = grid.setContext(this.getContext());\n    const axisWidth = borderOpts.drawBorder ? borderOpts.borderWidth : 0;\n    const axisHalfWidth = axisWidth / 2;\n    const alignBorderValue = function(pixel) {\n      return _alignPixel(chart, pixel, axisWidth);\n    };\n    let borderValue, i, lineValue, alignedLineValue;\n    let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n    if (position === 'top') {\n      borderValue = alignBorderValue(this.bottom);\n      ty1 = this.bottom - tl;\n      ty2 = borderValue - axisHalfWidth;\n      y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n      y2 = chartArea.bottom;\n    } else if (position === 'bottom') {\n      borderValue = alignBorderValue(this.top);\n      y1 = chartArea.top;\n      y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = this.top + tl;\n    } else if (position === 'left') {\n      borderValue = alignBorderValue(this.right);\n      tx1 = this.right - tl;\n      tx2 = borderValue - axisHalfWidth;\n      x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n      x2 = chartArea.right;\n    } else if (position === 'right') {\n      borderValue = alignBorderValue(this.left);\n      x1 = chartArea.left;\n      x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n      tx1 = borderValue + axisHalfWidth;\n      tx2 = this.left + tl;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n      y1 = chartArea.top;\n      y2 = chartArea.bottom;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = ty1 + tl;\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n      tx1 = borderValue - axisHalfWidth;\n      tx2 = tx1 - tl;\n      x1 = chartArea.left;\n      x2 = chartArea.right;\n    }\n    const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n    const step = Math.max(1, Math.ceil(ticksLength / limit));\n    for (i = 0; i < ticksLength; i += step) {\n      const optsAtIndex = grid.setContext(this.getContext(i));\n      const lineWidth = optsAtIndex.lineWidth;\n      const lineColor = optsAtIndex.color;\n      const borderDash = grid.borderDash || [];\n      const borderDashOffset = optsAtIndex.borderDashOffset;\n      const tickWidth = optsAtIndex.tickWidth;\n      const tickColor = optsAtIndex.tickColor;\n      const tickBorderDash = optsAtIndex.tickBorderDash || [];\n      const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n      lineValue = getPixelForGridLine(this, i, offset);\n      if (lineValue === undefined) {\n        continue;\n      }\n      alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n      if (isHorizontal) {\n        tx1 = tx2 = x1 = x2 = alignedLineValue;\n      } else {\n        ty1 = ty2 = y1 = y2 = alignedLineValue;\n      }\n      items.push({\n        tx1,\n        ty1,\n        tx2,\n        ty2,\n        x1,\n        y1,\n        x2,\n        y2,\n        width: lineWidth,\n        color: lineColor,\n        borderDash,\n        borderDashOffset,\n        tickWidth,\n        tickColor,\n        tickBorderDash,\n        tickBorderDashOffset,\n      });\n    }\n    this._ticksLength = ticksLength;\n    this._borderValue = borderValue;\n    return items;\n  }\n  _computeLabelItems(chartArea) {\n    const axis = this.axis;\n    const options = this.options;\n    const {position, ticks: optionTicks} = options;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const {align, crossAlign, padding, mirror} = optionTicks;\n    const tl = getTickMarkLength(options.grid);\n    const tickAndPadding = tl + padding;\n    const hTickAndPadding = mirror ? -padding : tickAndPadding;\n    const rotation = -toRadians(this.labelRotation);\n    const items = [];\n    let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n    let textBaseline = 'middle';\n    if (position === 'top') {\n      y = this.bottom - hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'bottom') {\n      y = this.top + hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'left') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (position === 'right') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        y = ((chartArea.top + chartArea.bottom) / 2) + tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n      }\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        x = ((chartArea.left + chartArea.right) / 2) - tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        x = this.chart.scales[positionAxisID].getPixelForValue(value);\n      }\n      textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n    }\n    if (axis === 'y') {\n      if (align === 'start') {\n        textBaseline = 'top';\n      } else if (align === 'end') {\n        textBaseline = 'bottom';\n      }\n    }\n    const labelSizes = this._getLabelSizes();\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      label = tick.label;\n      const optsAtIndex = optionTicks.setContext(this.getContext(i));\n      pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n      font = this._resolveTickFontOptions(i);\n      lineHeight = font.lineHeight;\n      lineCount = isArray(label) ? label.length : 1;\n      const halfCount = lineCount / 2;\n      const color = optsAtIndex.color;\n      const strokeColor = optsAtIndex.textStrokeColor;\n      const strokeWidth = optsAtIndex.textStrokeWidth;\n      if (isHorizontal) {\n        x = pixel;\n        if (position === 'top') {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = -lineCount * lineHeight + lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n          } else {\n            textOffset = -labelSizes.highest.height + lineHeight / 2;\n          }\n        } else {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n          } else {\n            textOffset = labelSizes.highest.height - lineCount * lineHeight;\n          }\n        }\n        if (mirror) {\n          textOffset *= -1;\n        }\n      } else {\n        y = pixel;\n        textOffset = (1 - lineCount) * lineHeight / 2;\n      }\n      let backdrop;\n      if (optsAtIndex.showLabelBackdrop) {\n        const labelPadding = toPadding(optsAtIndex.backdropPadding);\n        const height = labelSizes.heights[i];\n        const width = labelSizes.widths[i];\n        let top = y + textOffset - labelPadding.top;\n        let left = x - labelPadding.left;\n        switch (textBaseline) {\n        case 'middle':\n          top -= height / 2;\n          break;\n        case 'bottom':\n          top -= height;\n          break;\n        }\n        switch (textAlign) {\n        case 'center':\n          left -= width / 2;\n          break;\n        case 'right':\n          left -= width;\n          break;\n        }\n        backdrop = {\n          left,\n          top,\n          width: width + labelPadding.width,\n          height: height + labelPadding.height,\n          color: optsAtIndex.backdropColor,\n        };\n      }\n      items.push({\n        rotation,\n        label,\n        font,\n        color,\n        strokeColor,\n        strokeWidth,\n        textOffset,\n        textAlign,\n        textBaseline,\n        translation: [x, y],\n        backdrop,\n      });\n    }\n    return items;\n  }\n  _getXAxisLabelAlignment() {\n    const {position, ticks} = this.options;\n    const rotation = -toRadians(this.labelRotation);\n    if (rotation) {\n      return position === 'top' ? 'left' : 'right';\n    }\n    let align = 'center';\n    if (ticks.align === 'start') {\n      align = 'left';\n    } else if (ticks.align === 'end') {\n      align = 'right';\n    }\n    return align;\n  }\n  _getYAxisLabelAlignment(tl) {\n    const {position, ticks: {crossAlign, mirror, padding}} = this.options;\n    const labelSizes = this._getLabelSizes();\n    const tickAndPadding = tl + padding;\n    const widest = labelSizes.widest.width;\n    let textAlign;\n    let x;\n    if (position === 'left') {\n      if (mirror) {\n        x = this.right + padding;\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += (widest / 2);\n        } else {\n          textAlign = 'right';\n          x += widest;\n        }\n      } else {\n        x = this.right - tickAndPadding;\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x = this.left;\n        }\n      }\n    } else if (position === 'right') {\n      if (mirror) {\n        x = this.left + padding;\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x -= widest;\n        }\n      } else {\n        x = this.left + tickAndPadding;\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += widest / 2;\n        } else {\n          textAlign = 'right';\n          x = this.right;\n        }\n      }\n    } else {\n      textAlign = 'right';\n    }\n    return {textAlign, x};\n  }\n  _computeLabelArea() {\n    if (this.options.ticks.mirror) {\n      return;\n    }\n    const chart = this.chart;\n    const position = this.options.position;\n    if (position === 'left' || position === 'right') {\n      return {top: 0, left: this.left, bottom: chart.height, right: this.right};\n    } if (position === 'top' || position === 'bottom') {\n      return {top: this.top, left: 0, bottom: this.bottom, right: chart.width};\n    }\n  }\n  drawBackground() {\n    const {ctx, options: {backgroundColor}, left, top, width, height} = this;\n    if (backgroundColor) {\n      ctx.save();\n      ctx.fillStyle = backgroundColor;\n      ctx.fillRect(left, top, width, height);\n      ctx.restore();\n    }\n  }\n  getLineWidthForValue(value) {\n    const grid = this.options.grid;\n    if (!this._isVisible() || !grid.display) {\n      return 0;\n    }\n    const ticks = this.ticks;\n    const index = ticks.findIndex(t => t.value === value);\n    if (index >= 0) {\n      const opts = grid.setContext(this.getContext(index));\n      return opts.lineWidth;\n    }\n    return 0;\n  }\n  drawGrid(chartArea) {\n    const grid = this.options.grid;\n    const ctx = this.ctx;\n    const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n    let i, ilen;\n    const drawLine = (p1, p2, style) => {\n      if (!style.width || !style.color) {\n        return;\n      }\n      ctx.save();\n      ctx.lineWidth = style.width;\n      ctx.strokeStyle = style.color;\n      ctx.setLineDash(style.borderDash || []);\n      ctx.lineDashOffset = style.borderDashOffset;\n      ctx.beginPath();\n      ctx.moveTo(p1.x, p1.y);\n      ctx.lineTo(p2.x, p2.y);\n      ctx.stroke();\n      ctx.restore();\n    };\n    if (grid.display) {\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        const item = items[i];\n        if (grid.drawOnChartArea) {\n          drawLine(\n            {x: item.x1, y: item.y1},\n            {x: item.x2, y: item.y2},\n            item\n          );\n        }\n        if (grid.drawTicks) {\n          drawLine(\n            {x: item.tx1, y: item.ty1},\n            {x: item.tx2, y: item.ty2},\n            {\n              color: item.tickColor,\n              width: item.tickWidth,\n              borderDash: item.tickBorderDash,\n              borderDashOffset: item.tickBorderDashOffset\n            }\n          );\n        }\n      }\n    }\n  }\n  drawBorder() {\n    const {chart, ctx, options: {grid}} = this;\n    const borderOpts = grid.setContext(this.getContext());\n    const axisWidth = grid.drawBorder ? borderOpts.borderWidth : 0;\n    if (!axisWidth) {\n      return;\n    }\n    const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n    const borderValue = this._borderValue;\n    let x1, x2, y1, y2;\n    if (this.isHorizontal()) {\n      x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n      x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n      y1 = y2 = borderValue;\n    } else {\n      y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n      y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n      x1 = x2 = borderValue;\n    }\n    ctx.save();\n    ctx.lineWidth = borderOpts.borderWidth;\n    ctx.strokeStyle = borderOpts.borderColor;\n    ctx.beginPath();\n    ctx.moveTo(x1, y1);\n    ctx.lineTo(x2, y2);\n    ctx.stroke();\n    ctx.restore();\n  }\n  drawLabels(chartArea) {\n    const optionTicks = this.options.ticks;\n    if (!optionTicks.display) {\n      return;\n    }\n    const ctx = this.ctx;\n    const area = this._computeLabelArea();\n    if (area) {\n      clipArea(ctx, area);\n    }\n    const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n    let i, ilen;\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      const item = items[i];\n      const tickFont = item.font;\n      const label = item.label;\n      if (item.backdrop) {\n        ctx.fillStyle = item.backdrop.color;\n        ctx.fillRect(item.backdrop.left, item.backdrop.top, item.backdrop.width, item.backdrop.height);\n      }\n      let y = item.textOffset;\n      renderText(ctx, label, 0, y, tickFont, item);\n    }\n    if (area) {\n      unclipArea(ctx);\n    }\n  }\n  drawTitle() {\n    const {ctx, options: {position, title, reverse}} = this;\n    if (!title.display) {\n      return;\n    }\n    const font = toFont(title.font);\n    const padding = toPadding(title.padding);\n    const align = title.align;\n    let offset = font.lineHeight / 2;\n    if (position === 'bottom' || position === 'center' || isObject(position)) {\n      offset += padding.bottom;\n      if (isArray(title.text)) {\n        offset += font.lineHeight * (title.text.length - 1);\n      }\n    } else {\n      offset += padding.top;\n    }\n    const {titleX, titleY, maxWidth, rotation} = titleArgs(this, offset, position, align);\n    renderText(ctx, title.text, 0, 0, font, {\n      color: title.color,\n      maxWidth,\n      rotation,\n      textAlign: titleAlign(align, position, reverse),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n  draw(chartArea) {\n    if (!this._isVisible()) {\n      return;\n    }\n    this.drawBackground();\n    this.drawGrid(chartArea);\n    this.drawBorder();\n    this.drawTitle();\n    this.drawLabels(chartArea);\n  }\n  _layers() {\n    const opts = this.options;\n    const tz = opts.ticks && opts.ticks.z || 0;\n    const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n    if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n      return [{\n        z: tz,\n        draw: (chartArea) => {\n          this.draw(chartArea);\n        }\n      }];\n    }\n    return [{\n      z: gz,\n      draw: (chartArea) => {\n        this.drawBackground();\n        this.drawGrid(chartArea);\n        this.drawTitle();\n      }\n    }, {\n      z: gz + 1,\n      draw: () => {\n        this.drawBorder();\n      }\n    }, {\n      z: tz,\n      draw: (chartArea) => {\n        this.drawLabels(chartArea);\n      }\n    }];\n  }\n  getMatchingVisibleMetas(type) {\n    const metas = this.chart.getSortedVisibleDatasetMetas();\n    const axisID = this.axis + 'AxisID';\n    const result = [];\n    let i, ilen;\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      const meta = metas[i];\n      if (meta[axisID] === this.id && (!type || meta.type === type)) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n  _resolveTickFontOptions(index) {\n    const opts = this.options.ticks.setContext(this.getContext(index));\n    return toFont(opts.font);\n  }\n  _maxDigits() {\n    const fontSize = this._resolveTickFontOptions(0).lineHeight;\n    return (this.isHorizontal() ? this.width : this.height) / fontSize;\n  }\n}\n\nclass TypedRegistry {\n  constructor(type, scope, override) {\n    this.type = type;\n    this.scope = scope;\n    this.override = override;\n    this.items = Object.create(null);\n  }\n  isForType(type) {\n    return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n  }\n  register(item) {\n    const proto = Object.getPrototypeOf(item);\n    let parentScope;\n    if (isIChartComponent(proto)) {\n      parentScope = this.register(proto);\n    }\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope + '.' + id;\n    if (!id) {\n      throw new Error('class does not have id: ' + item);\n    }\n    if (id in items) {\n      return scope;\n    }\n    items[id] = item;\n    registerDefaults(item, scope, parentScope);\n    if (this.override) {\n      defaults.override(item.id, item.overrides);\n    }\n    return scope;\n  }\n  get(id) {\n    return this.items[id];\n  }\n  unregister(item) {\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope;\n    if (id in items) {\n      delete items[id];\n    }\n    if (scope && id in defaults[scope]) {\n      delete defaults[scope][id];\n      if (this.override) {\n        delete overrides[id];\n      }\n    }\n  }\n}\nfunction registerDefaults(item, scope, parentScope) {\n  const itemDefaults = merge(Object.create(null), [\n    parentScope ? defaults.get(parentScope) : {},\n    defaults.get(scope),\n    item.defaults\n  ]);\n  defaults.set(scope, itemDefaults);\n  if (item.defaultRoutes) {\n    routeDefaults(scope, item.defaultRoutes);\n  }\n  if (item.descriptors) {\n    defaults.describe(scope, item.descriptors);\n  }\n}\nfunction routeDefaults(scope, routes) {\n  Object.keys(routes).forEach(property => {\n    const propertyParts = property.split('.');\n    const sourceName = propertyParts.pop();\n    const sourceScope = [scope].concat(propertyParts).join('.');\n    const parts = routes[property].split('.');\n    const targetName = parts.pop();\n    const targetScope = parts.join('.');\n    defaults.route(sourceScope, sourceName, targetScope, targetName);\n  });\n}\nfunction isIChartComponent(proto) {\n  return 'id' in proto && 'defaults' in proto;\n}\n\nclass Registry {\n  constructor() {\n    this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n    this.elements = new TypedRegistry(Element, 'elements');\n    this.plugins = new TypedRegistry(Object, 'plugins');\n    this.scales = new TypedRegistry(Scale, 'scales');\n    this._typedRegistries = [this.controllers, this.scales, this.elements];\n  }\n  add(...args) {\n    this._each('register', args);\n  }\n  remove(...args) {\n    this._each('unregister', args);\n  }\n  addControllers(...args) {\n    this._each('register', args, this.controllers);\n  }\n  addElements(...args) {\n    this._each('register', args, this.elements);\n  }\n  addPlugins(...args) {\n    this._each('register', args, this.plugins);\n  }\n  addScales(...args) {\n    this._each('register', args, this.scales);\n  }\n  getController(id) {\n    return this._get(id, this.controllers, 'controller');\n  }\n  getElement(id) {\n    return this._get(id, this.elements, 'element');\n  }\n  getPlugin(id) {\n    return this._get(id, this.plugins, 'plugin');\n  }\n  getScale(id) {\n    return this._get(id, this.scales, 'scale');\n  }\n  removeControllers(...args) {\n    this._each('unregister', args, this.controllers);\n  }\n  removeElements(...args) {\n    this._each('unregister', args, this.elements);\n  }\n  removePlugins(...args) {\n    this._each('unregister', args, this.plugins);\n  }\n  removeScales(...args) {\n    this._each('unregister', args, this.scales);\n  }\n  _each(method, args, typedRegistry) {\n    [...args].forEach(arg => {\n      const reg = typedRegistry || this._getRegistryForType(arg);\n      if (typedRegistry || reg.isForType(arg) || (reg === this.plugins && arg.id)) {\n        this._exec(method, reg, arg);\n      } else {\n        each(arg, item => {\n          const itemReg = typedRegistry || this._getRegistryForType(item);\n          this._exec(method, itemReg, item);\n        });\n      }\n    });\n  }\n  _exec(method, registry, component) {\n    const camelMethod = _capitalize(method);\n    callback(component['before' + camelMethod], [], component);\n    registry[method](component);\n    callback(component['after' + camelMethod], [], component);\n  }\n  _getRegistryForType(type) {\n    for (let i = 0; i < this._typedRegistries.length; i++) {\n      const reg = this._typedRegistries[i];\n      if (reg.isForType(type)) {\n        return reg;\n      }\n    }\n    return this.plugins;\n  }\n  _get(id, typedRegistry, type) {\n    const item = typedRegistry.get(id);\n    if (item === undefined) {\n      throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n    }\n    return item;\n  }\n}\nvar registry = new Registry();\n\nclass PluginService {\n  constructor() {\n    this._init = [];\n  }\n  notify(chart, hook, args, filter) {\n    if (hook === 'beforeInit') {\n      this._init = this._createDescriptors(chart, true);\n      this._notify(this._init, chart, 'install');\n    }\n    const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n    const result = this._notify(descriptors, chart, hook, args);\n    if (hook === 'afterDestroy') {\n      this._notify(descriptors, chart, 'stop');\n      this._notify(this._init, chart, 'uninstall');\n    }\n    return result;\n  }\n  _notify(descriptors, chart, hook, args) {\n    args = args || {};\n    for (const descriptor of descriptors) {\n      const plugin = descriptor.plugin;\n      const method = plugin[hook];\n      const params = [chart, args, descriptor.options];\n      if (callback(method, params, plugin) === false && args.cancelable) {\n        return false;\n      }\n    }\n    return true;\n  }\n  invalidate() {\n    if (!isNullOrUndef(this._cache)) {\n      this._oldCache = this._cache;\n      this._cache = undefined;\n    }\n  }\n  _descriptors(chart) {\n    if (this._cache) {\n      return this._cache;\n    }\n    const descriptors = this._cache = this._createDescriptors(chart);\n    this._notifyStateChanges(chart);\n    return descriptors;\n  }\n  _createDescriptors(chart, all) {\n    const config = chart && chart.config;\n    const options = valueOrDefault(config.options && config.options.plugins, {});\n    const plugins = allPlugins(config);\n    return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n  }\n  _notifyStateChanges(chart) {\n    const previousDescriptors = this._oldCache || [];\n    const descriptors = this._cache;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.plugin.id === y.plugin.id));\n    this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n    this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n  }\n}\nfunction allPlugins(config) {\n  const plugins = [];\n  const keys = Object.keys(registry.plugins.items);\n  for (let i = 0; i < keys.length; i++) {\n    plugins.push(registry.getPlugin(keys[i]));\n  }\n  const local = config.plugins || [];\n  for (let i = 0; i < local.length; i++) {\n    const plugin = local[i];\n    if (plugins.indexOf(plugin) === -1) {\n      plugins.push(plugin);\n    }\n  }\n  return plugins;\n}\nfunction getOpts(options, all) {\n  if (!all && options === false) {\n    return null;\n  }\n  if (options === true) {\n    return {};\n  }\n  return options;\n}\nfunction createDescriptors(chart, plugins, options, all) {\n  const result = [];\n  const context = chart.getContext();\n  for (let i = 0; i < plugins.length; i++) {\n    const plugin = plugins[i];\n    const id = plugin.id;\n    const opts = getOpts(options[id], all);\n    if (opts === null) {\n      continue;\n    }\n    result.push({\n      plugin,\n      options: pluginOpts(chart.config, plugin, opts, context)\n    });\n  }\n  return result;\n}\nfunction pluginOpts(config, plugin, opts, context) {\n  const keys = config.pluginScopeKeys(plugin);\n  const scopes = config.getOptionScopes(opts, keys);\n  return config.createResolver(scopes, context, [''], {scriptable: false, indexable: false, allKeys: true});\n}\n\nfunction getIndexAxis(type, options) {\n  const datasetDefaults = defaults.datasets[type] || {};\n  const datasetOptions = (options.datasets || {})[type] || {};\n  return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n  let axis = id;\n  if (id === '_index_') {\n    axis = indexAxis;\n  } else if (id === '_value_') {\n    axis = indexAxis === 'x' ? 'y' : 'x';\n  }\n  return axis;\n}\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n  return axis === indexAxis ? '_index_' : '_value_';\n}\nfunction axisFromPosition(position) {\n  if (position === 'top' || position === 'bottom') {\n    return 'x';\n  }\n  if (position === 'left' || position === 'right') {\n    return 'y';\n  }\n}\nfunction determineAxis(id, scaleOptions) {\n  if (id === 'x' || id === 'y') {\n    return id;\n  }\n  return scaleOptions.axis || axisFromPosition(scaleOptions.position) || id.charAt(0).toLowerCase();\n}\nfunction mergeScaleConfig(config, options) {\n  const chartDefaults = overrides[config.type] || {scales: {}};\n  const configScales = options.scales || {};\n  const chartIndexAxis = getIndexAxis(config.type, options);\n  const firstIDs = Object.create(null);\n  const scales = Object.create(null);\n  Object.keys(configScales).forEach(id => {\n    const scaleConf = configScales[id];\n    if (!isObject(scaleConf)) {\n      return console.error(`Invalid scale configuration for scale: ${id}`);\n    }\n    if (scaleConf._proxy) {\n      return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\n    }\n    const axis = determineAxis(id, scaleConf);\n    const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n    const defaultScaleOptions = chartDefaults.scales || {};\n    firstIDs[axis] = firstIDs[axis] || id;\n    scales[id] = mergeIf(Object.create(null), [{axis}, scaleConf, defaultScaleOptions[axis], defaultScaleOptions[defaultId]]);\n  });\n  config.data.datasets.forEach(dataset => {\n    const type = dataset.type || config.type;\n    const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n    const datasetDefaults = overrides[type] || {};\n    const defaultScaleOptions = datasetDefaults.scales || {};\n    Object.keys(defaultScaleOptions).forEach(defaultID => {\n      const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n      const id = dataset[axis + 'AxisID'] || firstIDs[axis] || axis;\n      scales[id] = scales[id] || Object.create(null);\n      mergeIf(scales[id], [{axis}, configScales[id], defaultScaleOptions[defaultID]]);\n    });\n  });\n  Object.keys(scales).forEach(key => {\n    const scale = scales[key];\n    mergeIf(scale, [defaults.scales[scale.type], defaults.scale]);\n  });\n  return scales;\n}\nfunction initOptions(config) {\n  const options = config.options || (config.options = {});\n  options.plugins = valueOrDefault(options.plugins, {});\n  options.scales = mergeScaleConfig(config, options);\n}\nfunction initData(data) {\n  data = data || {};\n  data.datasets = data.datasets || [];\n  data.labels = data.labels || [];\n  return data;\n}\nfunction initConfig(config) {\n  config = config || {};\n  config.data = initData(config.data);\n  initOptions(config);\n  return config;\n}\nconst keyCache = new Map();\nconst keysCached = new Set();\nfunction cachedKeys(cacheKey, generate) {\n  let keys = keyCache.get(cacheKey);\n  if (!keys) {\n    keys = generate();\n    keyCache.set(cacheKey, keys);\n    keysCached.add(keys);\n  }\n  return keys;\n}\nconst addIfFound = (set, obj, key) => {\n  const opts = resolveObjectKey(obj, key);\n  if (opts !== undefined) {\n    set.add(opts);\n  }\n};\nclass Config {\n  constructor(config) {\n    this._config = initConfig(config);\n    this._scopeCache = new Map();\n    this._resolverCache = new Map();\n  }\n  get platform() {\n    return this._config.platform;\n  }\n  get type() {\n    return this._config.type;\n  }\n  set type(type) {\n    this._config.type = type;\n  }\n  get data() {\n    return this._config.data;\n  }\n  set data(data) {\n    this._config.data = initData(data);\n  }\n  get options() {\n    return this._config.options;\n  }\n  set options(options) {\n    this._config.options = options;\n  }\n  get plugins() {\n    return this._config.plugins;\n  }\n  update() {\n    const config = this._config;\n    this.clearCache();\n    initOptions(config);\n  }\n  clearCache() {\n    this._scopeCache.clear();\n    this._resolverCache.clear();\n  }\n  datasetScopeKeys(datasetType) {\n    return cachedKeys(datasetType,\n      () => [[\n        `datasets.${datasetType}`,\n        ''\n      ]]);\n  }\n  datasetAnimationScopeKeys(datasetType, transition) {\n    return cachedKeys(`${datasetType}.transition.${transition}`,\n      () => [\n        [\n          `datasets.${datasetType}.transitions.${transition}`,\n          `transitions.${transition}`,\n        ],\n        [\n          `datasets.${datasetType}`,\n          ''\n        ]\n      ]);\n  }\n  datasetElementScopeKeys(datasetType, elementType) {\n    return cachedKeys(`${datasetType}-${elementType}`,\n      () => [[\n        `datasets.${datasetType}.elements.${elementType}`,\n        `datasets.${datasetType}`,\n        `elements.${elementType}`,\n        ''\n      ]]);\n  }\n  pluginScopeKeys(plugin) {\n    const id = plugin.id;\n    const type = this.type;\n    return cachedKeys(`${type}-plugin-${id}`,\n      () => [[\n        `plugins.${id}`,\n        ...plugin.additionalOptionScopes || [],\n      ]]);\n  }\n  _cachedScopes(mainScope, resetCache) {\n    const _scopeCache = this._scopeCache;\n    let cache = _scopeCache.get(mainScope);\n    if (!cache || resetCache) {\n      cache = new Map();\n      _scopeCache.set(mainScope, cache);\n    }\n    return cache;\n  }\n  getOptionScopes(mainScope, keyLists, resetCache) {\n    const {options, type} = this;\n    const cache = this._cachedScopes(mainScope, resetCache);\n    const cached = cache.get(keyLists);\n    if (cached) {\n      return cached;\n    }\n    const scopes = new Set();\n    keyLists.forEach(keys => {\n      if (mainScope) {\n        scopes.add(mainScope);\n        keys.forEach(key => addIfFound(scopes, mainScope, key));\n      }\n      keys.forEach(key => addIfFound(scopes, options, key));\n      keys.forEach(key => addIfFound(scopes, overrides[type] || {}, key));\n      keys.forEach(key => addIfFound(scopes, defaults, key));\n      keys.forEach(key => addIfFound(scopes, descriptors, key));\n    });\n    const array = Array.from(scopes);\n    if (array.length === 0) {\n      array.push(Object.create(null));\n    }\n    if (keysCached.has(keyLists)) {\n      cache.set(keyLists, array);\n    }\n    return array;\n  }\n  chartOptionScopes() {\n    const {options, type} = this;\n    return [\n      options,\n      overrides[type] || {},\n      defaults.datasets[type] || {},\n      {type},\n      defaults,\n      descriptors\n    ];\n  }\n  resolveNamedOptions(scopes, names, context, prefixes = ['']) {\n    const result = {$shared: true};\n    const {resolver, subPrefixes} = getResolver(this._resolverCache, scopes, prefixes);\n    let options = resolver;\n    if (needContext(resolver, names)) {\n      result.$shared = false;\n      context = isFunction(context) ? context() : context;\n      const subResolver = this.createResolver(scopes, context, subPrefixes);\n      options = _attachContext(resolver, context, subResolver);\n    }\n    for (const prop of names) {\n      result[prop] = options[prop];\n    }\n    return result;\n  }\n  createResolver(scopes, context, prefixes = [''], descriptorDefaults) {\n    const {resolver} = getResolver(this._resolverCache, scopes, prefixes);\n    return isObject(context)\n      ? _attachContext(resolver, context, undefined, descriptorDefaults)\n      : resolver;\n  }\n}\nfunction getResolver(resolverCache, scopes, prefixes) {\n  let cache = resolverCache.get(scopes);\n  if (!cache) {\n    cache = new Map();\n    resolverCache.set(scopes, cache);\n  }\n  const cacheKey = prefixes.join();\n  let cached = cache.get(cacheKey);\n  if (!cached) {\n    const resolver = _createResolver(scopes, prefixes);\n    cached = {\n      resolver,\n      subPrefixes: prefixes.filter(p => !p.toLowerCase().includes('hover'))\n    };\n    cache.set(cacheKey, cached);\n  }\n  return cached;\n}\nconst hasFunction = value => isObject(value)\n  && Object.getOwnPropertyNames(value).reduce((acc, key) => acc || isFunction(value[key]), false);\nfunction needContext(proxy, names) {\n  const {isScriptable, isIndexable} = _descriptors(proxy);\n  for (const prop of names) {\n    const scriptable = isScriptable(prop);\n    const indexable = isIndexable(prop);\n    const value = (indexable || scriptable) && proxy[prop];\n    if ((scriptable && (isFunction(value) || hasFunction(value)))\n      || (indexable && isArray(value))) {\n      return true;\n    }\n  }\n  return false;\n}\n\nvar version = \"3.7.0\";\n\nconst KNOWN_POSITIONS = ['top', 'bottom', 'left', 'right', 'chartArea'];\nfunction positionIsHorizontal(position, axis) {\n  return position === 'top' || position === 'bottom' || (KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x');\n}\nfunction compare2Level(l1, l2) {\n  return function(a, b) {\n    return a[l1] === b[l1]\n      ? a[l2] - b[l2]\n      : a[l1] - b[l1];\n  };\n}\nfunction onAnimationsComplete(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  chart.notifyPlugins('afterRender');\n  callback(animationOptions && animationOptions.onComplete, [context], chart);\n}\nfunction onAnimationProgress(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  callback(animationOptions && animationOptions.onProgress, [context], chart);\n}\nfunction getCanvas(item) {\n  if (_isDomSupported() && typeof item === 'string') {\n    item = document.getElementById(item);\n  } else if (item && item.length) {\n    item = item[0];\n  }\n  if (item && item.canvas) {\n    item = item.canvas;\n  }\n  return item;\n}\nconst instances = {};\nconst getChart = (key) => {\n  const canvas = getCanvas(key);\n  return Object.values(instances).filter((c) => c.canvas === canvas).pop();\n};\nfunction moveNumericKeys(obj, start, move) {\n  const keys = Object.keys(obj);\n  for (const key of keys) {\n    const intKey = +key;\n    if (intKey >= start) {\n      const value = obj[key];\n      delete obj[key];\n      if (move > 0 || intKey > start) {\n        obj[intKey + move] = value;\n      }\n    }\n  }\n}\nfunction determineLastEvent(e, lastEvent, inChartArea, isClick) {\n  if (!inChartArea || e.type === 'mouseout') {\n    return null;\n  }\n  if (isClick) {\n    return lastEvent;\n  }\n  return e;\n}\nclass Chart {\n  constructor(item, userConfig) {\n    const config = this.config = new Config(userConfig);\n    const initialCanvas = getCanvas(item);\n    const existingChart = getChart(initialCanvas);\n    if (existingChart) {\n      throw new Error(\n        'Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' +\n\t\t\t\t' must be destroyed before the canvas can be reused.'\n      );\n    }\n    const options = config.createResolver(config.chartOptionScopes(), this.getContext());\n    this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n    this.platform.updateConfig(config);\n    const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n    const canvas = context && context.canvas;\n    const height = canvas && canvas.height;\n    const width = canvas && canvas.width;\n    this.id = uid();\n    this.ctx = context;\n    this.canvas = canvas;\n    this.width = width;\n    this.height = height;\n    this._options = options;\n    this._aspectRatio = this.aspectRatio;\n    this._layers = [];\n    this._metasets = [];\n    this._stacks = undefined;\n    this.boxes = [];\n    this.currentDevicePixelRatio = undefined;\n    this.chartArea = undefined;\n    this._active = [];\n    this._lastEvent = undefined;\n    this._listeners = {};\n    this._responsiveListeners = undefined;\n    this._sortedMetasets = [];\n    this.scales = {};\n    this._plugins = new PluginService();\n    this.$proxies = {};\n    this._hiddenIndices = {};\n    this.attached = false;\n    this._animationsDisabled = undefined;\n    this.$context = undefined;\n    this._doResize = debounce(mode => this.update(mode), options.resizeDelay || 0);\n    this._dataChanges = [];\n    instances[this.id] = this;\n    if (!context || !canvas) {\n      console.error(\"Failed to create chart: can't acquire context from the given item\");\n      return;\n    }\n    animator.listen(this, 'complete', onAnimationsComplete);\n    animator.listen(this, 'progress', onAnimationProgress);\n    this._initialize();\n    if (this.attached) {\n      this.update();\n    }\n  }\n  get aspectRatio() {\n    const {options: {aspectRatio, maintainAspectRatio}, width, height, _aspectRatio} = this;\n    if (!isNullOrUndef(aspectRatio)) {\n      return aspectRatio;\n    }\n    if (maintainAspectRatio && _aspectRatio) {\n      return _aspectRatio;\n    }\n    return height ? width / height : null;\n  }\n  get data() {\n    return this.config.data;\n  }\n  set data(data) {\n    this.config.data = data;\n  }\n  get options() {\n    return this._options;\n  }\n  set options(options) {\n    this.config.options = options;\n  }\n  _initialize() {\n    this.notifyPlugins('beforeInit');\n    if (this.options.responsive) {\n      this.resize();\n    } else {\n      retinaScale(this, this.options.devicePixelRatio);\n    }\n    this.bindEvents();\n    this.notifyPlugins('afterInit');\n    return this;\n  }\n  clear() {\n    clearCanvas(this.canvas, this.ctx);\n    return this;\n  }\n  stop() {\n    animator.stop(this);\n    return this;\n  }\n  resize(width, height) {\n    if (!animator.running(this)) {\n      this._resize(width, height);\n    } else {\n      this._resizeBeforeDraw = {width, height};\n    }\n  }\n  _resize(width, height) {\n    const options = this.options;\n    const canvas = this.canvas;\n    const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n    const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n    const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n    const mode = this.width ? 'resize' : 'attach';\n    this.width = newSize.width;\n    this.height = newSize.height;\n    this._aspectRatio = this.aspectRatio;\n    if (!retinaScale(this, newRatio, true)) {\n      return;\n    }\n    this.notifyPlugins('resize', {size: newSize});\n    callback(options.onResize, [this, newSize], this);\n    if (this.attached) {\n      if (this._doResize(mode)) {\n        this.render();\n      }\n    }\n  }\n  ensureScalesHaveIDs() {\n    const options = this.options;\n    const scalesOptions = options.scales || {};\n    each(scalesOptions, (axisOptions, axisID) => {\n      axisOptions.id = axisID;\n    });\n  }\n  buildOrUpdateScales() {\n    const options = this.options;\n    const scaleOpts = options.scales;\n    const scales = this.scales;\n    const updated = Object.keys(scales).reduce((obj, id) => {\n      obj[id] = false;\n      return obj;\n    }, {});\n    let items = [];\n    if (scaleOpts) {\n      items = items.concat(\n        Object.keys(scaleOpts).map((id) => {\n          const scaleOptions = scaleOpts[id];\n          const axis = determineAxis(id, scaleOptions);\n          const isRadial = axis === 'r';\n          const isHorizontal = axis === 'x';\n          return {\n            options: scaleOptions,\n            dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n            dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n          };\n        })\n      );\n    }\n    each(items, (item) => {\n      const scaleOptions = item.options;\n      const id = scaleOptions.id;\n      const axis = determineAxis(id, scaleOptions);\n      const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n      if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n        scaleOptions.position = item.dposition;\n      }\n      updated[id] = true;\n      let scale = null;\n      if (id in scales && scales[id].type === scaleType) {\n        scale = scales[id];\n      } else {\n        const scaleClass = registry.getScale(scaleType);\n        scale = new scaleClass({\n          id,\n          type: scaleType,\n          ctx: this.ctx,\n          chart: this\n        });\n        scales[scale.id] = scale;\n      }\n      scale.init(scaleOptions, options);\n    });\n    each(updated, (hasUpdated, id) => {\n      if (!hasUpdated) {\n        delete scales[id];\n      }\n    });\n    each(scales, (scale) => {\n      layouts.configure(this, scale, scale.options);\n      layouts.addBox(this, scale);\n    });\n  }\n  _updateMetasets() {\n    const metasets = this._metasets;\n    const numData = this.data.datasets.length;\n    const numMeta = metasets.length;\n    metasets.sort((a, b) => a.index - b.index);\n    if (numMeta > numData) {\n      for (let i = numData; i < numMeta; ++i) {\n        this._destroyDatasetMeta(i);\n      }\n      metasets.splice(numData, numMeta - numData);\n    }\n    this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n  }\n  _removeUnreferencedMetasets() {\n    const {_metasets: metasets, data: {datasets}} = this;\n    if (metasets.length > datasets.length) {\n      delete this._stacks;\n    }\n    metasets.forEach((meta, index) => {\n      if (datasets.filter(x => x === meta._dataset).length === 0) {\n        this._destroyDatasetMeta(index);\n      }\n    });\n  }\n  buildOrUpdateControllers() {\n    const newControllers = [];\n    const datasets = this.data.datasets;\n    let i, ilen;\n    this._removeUnreferencedMetasets();\n    for (i = 0, ilen = datasets.length; i < ilen; i++) {\n      const dataset = datasets[i];\n      let meta = this.getDatasetMeta(i);\n      const type = dataset.type || this.config.type;\n      if (meta.type && meta.type !== type) {\n        this._destroyDatasetMeta(i);\n        meta = this.getDatasetMeta(i);\n      }\n      meta.type = type;\n      meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n      meta.order = dataset.order || 0;\n      meta.index = i;\n      meta.label = '' + dataset.label;\n      meta.visible = this.isDatasetVisible(i);\n      if (meta.controller) {\n        meta.controller.updateIndex(i);\n        meta.controller.linkScales();\n      } else {\n        const ControllerClass = registry.getController(type);\n        const {datasetElementType, dataElementType} = defaults.datasets[type];\n        Object.assign(ControllerClass.prototype, {\n          dataElementType: registry.getElement(dataElementType),\n          datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n        });\n        meta.controller = new ControllerClass(this, i);\n        newControllers.push(meta.controller);\n      }\n    }\n    this._updateMetasets();\n    return newControllers;\n  }\n  _resetElements() {\n    each(this.data.datasets, (dataset, datasetIndex) => {\n      this.getDatasetMeta(datasetIndex).controller.reset();\n    }, this);\n  }\n  reset() {\n    this._resetElements();\n    this.notifyPlugins('reset');\n  }\n  update(mode) {\n    const config = this.config;\n    config.update();\n    const options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n    const animsDisabled = this._animationsDisabled = !options.animation;\n    this._updateScales();\n    this._checkEventBindings();\n    this._updateHiddenIndices();\n    this._plugins.invalidate();\n    if (this.notifyPlugins('beforeUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n    const newControllers = this.buildOrUpdateControllers();\n    this.notifyPlugins('beforeElementsUpdate');\n    let minPadding = 0;\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; i++) {\n      const {controller} = this.getDatasetMeta(i);\n      const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n      controller.buildOrUpdateElements(reset);\n      minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n    }\n    minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n    this._updateLayout(minPadding);\n    if (!animsDisabled) {\n      each(newControllers, (controller) => {\n        controller.reset();\n      });\n    }\n    this._updateDatasets(mode);\n    this.notifyPlugins('afterUpdate', {mode});\n    this._layers.sort(compare2Level('z', '_idx'));\n    const {_active, _lastEvent} = this;\n    if (_lastEvent) {\n      this._eventHandler(_lastEvent, true);\n    } else if (_active.length) {\n      this._updateHoverStyles(_active, _active, true);\n    }\n    this.render();\n  }\n  _updateScales() {\n    each(this.scales, (scale) => {\n      layouts.removeBox(this, scale);\n    });\n    this.ensureScalesHaveIDs();\n    this.buildOrUpdateScales();\n  }\n  _checkEventBindings() {\n    const options = this.options;\n    const existingEvents = new Set(Object.keys(this._listeners));\n    const newEvents = new Set(options.events);\n    if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n      this.unbindEvents();\n      this.bindEvents();\n    }\n  }\n  _updateHiddenIndices() {\n    const {_hiddenIndices} = this;\n    const changes = this._getUniformDataChanges() || [];\n    for (const {method, start, count} of changes) {\n      const move = method === '_removeElements' ? -count : count;\n      moveNumericKeys(_hiddenIndices, start, move);\n    }\n  }\n  _getUniformDataChanges() {\n    const _dataChanges = this._dataChanges;\n    if (!_dataChanges || !_dataChanges.length) {\n      return;\n    }\n    this._dataChanges = [];\n    const datasetCount = this.data.datasets.length;\n    const makeSet = (idx) => new Set(\n      _dataChanges\n        .filter(c => c[0] === idx)\n        .map((c, i) => i + ',' + c.splice(1).join(','))\n    );\n    const changeSet = makeSet(0);\n    for (let i = 1; i < datasetCount; i++) {\n      if (!setsEqual(changeSet, makeSet(i))) {\n        return;\n      }\n    }\n    return Array.from(changeSet)\n      .map(c => c.split(','))\n      .map(a => ({method: a[1], start: +a[2], count: +a[3]}));\n  }\n  _updateLayout(minPadding) {\n    if (this.notifyPlugins('beforeLayout', {cancelable: true}) === false) {\n      return;\n    }\n    layouts.update(this, this.width, this.height, minPadding);\n    const area = this.chartArea;\n    const noArea = area.width <= 0 || area.height <= 0;\n    this._layers = [];\n    each(this.boxes, (box) => {\n      if (noArea && box.position === 'chartArea') {\n        return;\n      }\n      if (box.configure) {\n        box.configure();\n      }\n      this._layers.push(...box._layers());\n    }, this);\n    this._layers.forEach((item, index) => {\n      item._idx = index;\n    });\n    this.notifyPlugins('afterLayout');\n  }\n  _updateDatasets(mode) {\n    if (this.notifyPlugins('beforeDatasetsUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this.getDatasetMeta(i).controller.configure();\n    }\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._updateDataset(i, isFunction(mode) ? mode({datasetIndex: i}) : mode);\n    }\n    this.notifyPlugins('afterDatasetsUpdate', {mode});\n  }\n  _updateDataset(index, mode) {\n    const meta = this.getDatasetMeta(index);\n    const args = {meta, index, mode, cancelable: true};\n    if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n      return;\n    }\n    meta.controller._update(mode);\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetUpdate', args);\n  }\n  render() {\n    if (this.notifyPlugins('beforeRender', {cancelable: true}) === false) {\n      return;\n    }\n    if (animator.has(this)) {\n      if (this.attached && !animator.running(this)) {\n        animator.start(this);\n      }\n    } else {\n      this.draw();\n      onAnimationsComplete({chart: this});\n    }\n  }\n  draw() {\n    let i;\n    if (this._resizeBeforeDraw) {\n      const {width, height} = this._resizeBeforeDraw;\n      this._resize(width, height);\n      this._resizeBeforeDraw = null;\n    }\n    this.clear();\n    if (this.width <= 0 || this.height <= 0) {\n      return;\n    }\n    if (this.notifyPlugins('beforeDraw', {cancelable: true}) === false) {\n      return;\n    }\n    const layers = this._layers;\n    for (i = 0; i < layers.length && layers[i].z <= 0; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n    this._drawDatasets();\n    for (; i < layers.length; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n    this.notifyPlugins('afterDraw');\n  }\n  _getSortedDatasetMetas(filterVisible) {\n    const metasets = this._sortedMetasets;\n    const result = [];\n    let i, ilen;\n    for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n      const meta = metasets[i];\n      if (!filterVisible || meta.visible) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n  getSortedVisibleDatasetMetas() {\n    return this._getSortedDatasetMetas(true);\n  }\n  _drawDatasets() {\n    if (this.notifyPlugins('beforeDatasetsDraw', {cancelable: true}) === false) {\n      return;\n    }\n    const metasets = this.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      this._drawDataset(metasets[i]);\n    }\n    this.notifyPlugins('afterDatasetsDraw');\n  }\n  _drawDataset(meta) {\n    const ctx = this.ctx;\n    const clip = meta._clip;\n    const useClip = !clip.disabled;\n    const area = this.chartArea;\n    const args = {\n      meta,\n      index: meta.index,\n      cancelable: true\n    };\n    if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n      return;\n    }\n    if (useClip) {\n      clipArea(ctx, {\n        left: clip.left === false ? 0 : area.left - clip.left,\n        right: clip.right === false ? this.width : area.right + clip.right,\n        top: clip.top === false ? 0 : area.top - clip.top,\n        bottom: clip.bottom === false ? this.height : area.bottom + clip.bottom\n      });\n    }\n    meta.controller.draw();\n    if (useClip) {\n      unclipArea(ctx);\n    }\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetDraw', args);\n  }\n  getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n    const method = Interaction.modes[mode];\n    if (typeof method === 'function') {\n      return method(this, e, options, useFinalPosition);\n    }\n    return [];\n  }\n  getDatasetMeta(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    const metasets = this._metasets;\n    let meta = metasets.filter(x => x && x._dataset === dataset).pop();\n    if (!meta) {\n      meta = {\n        type: null,\n        data: [],\n        dataset: null,\n        controller: null,\n        hidden: null,\n        xAxisID: null,\n        yAxisID: null,\n        order: dataset && dataset.order || 0,\n        index: datasetIndex,\n        _dataset: dataset,\n        _parsed: [],\n        _sorted: false\n      };\n      metasets.push(meta);\n    }\n    return meta;\n  }\n  getContext() {\n    return this.$context || (this.$context = createContext(null, {chart: this, type: 'chart'}));\n  }\n  getVisibleDatasetCount() {\n    return this.getSortedVisibleDatasetMetas().length;\n  }\n  isDatasetVisible(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    if (!dataset) {\n      return false;\n    }\n    const meta = this.getDatasetMeta(datasetIndex);\n    return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n  }\n  setDatasetVisibility(datasetIndex, visible) {\n    const meta = this.getDatasetMeta(datasetIndex);\n    meta.hidden = !visible;\n  }\n  toggleDataVisibility(index) {\n    this._hiddenIndices[index] = !this._hiddenIndices[index];\n  }\n  getDataVisibility(index) {\n    return !this._hiddenIndices[index];\n  }\n  _updateVisibility(datasetIndex, dataIndex, visible) {\n    const mode = visible ? 'show' : 'hide';\n    const meta = this.getDatasetMeta(datasetIndex);\n    const anims = meta.controller._resolveAnimations(undefined, mode);\n    if (defined(dataIndex)) {\n      meta.data[dataIndex].hidden = !visible;\n      this.update();\n    } else {\n      this.setDatasetVisibility(datasetIndex, visible);\n      anims.update(meta, {visible});\n      this.update((ctx) => ctx.datasetIndex === datasetIndex ? mode : undefined);\n    }\n  }\n  hide(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, false);\n  }\n  show(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, true);\n  }\n  _destroyDatasetMeta(datasetIndex) {\n    const meta = this._metasets[datasetIndex];\n    if (meta && meta.controller) {\n      meta.controller._destroy();\n    }\n    delete this._metasets[datasetIndex];\n  }\n  _stop() {\n    let i, ilen;\n    this.stop();\n    animator.remove(this);\n    for (i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._destroyDatasetMeta(i);\n    }\n  }\n  destroy() {\n    this.notifyPlugins('beforeDestroy');\n    const {canvas, ctx} = this;\n    this._stop();\n    this.config.clearCache();\n    if (canvas) {\n      this.unbindEvents();\n      clearCanvas(canvas, ctx);\n      this.platform.releaseContext(ctx);\n      this.canvas = null;\n      this.ctx = null;\n    }\n    this.notifyPlugins('destroy');\n    delete instances[this.id];\n    this.notifyPlugins('afterDestroy');\n  }\n  toBase64Image(...args) {\n    return this.canvas.toDataURL(...args);\n  }\n  bindEvents() {\n    this.bindUserEvents();\n    if (this.options.responsive) {\n      this.bindResponsiveEvents();\n    } else {\n      this.attached = true;\n    }\n  }\n  bindUserEvents() {\n    const listeners = this._listeners;\n    const platform = this.platform;\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n    const listener = (e, x, y) => {\n      e.offsetX = x;\n      e.offsetY = y;\n      this._eventHandler(e);\n    };\n    each(this.options.events, (type) => _add(type, listener));\n  }\n  bindResponsiveEvents() {\n    if (!this._responsiveListeners) {\n      this._responsiveListeners = {};\n    }\n    const listeners = this._responsiveListeners;\n    const platform = this.platform;\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n    const _remove = (type, listener) => {\n      if (listeners[type]) {\n        platform.removeEventListener(this, type, listener);\n        delete listeners[type];\n      }\n    };\n    const listener = (width, height) => {\n      if (this.canvas) {\n        this.resize(width, height);\n      }\n    };\n    let detached;\n    const attached = () => {\n      _remove('attach', attached);\n      this.attached = true;\n      this.resize();\n      _add('resize', listener);\n      _add('detach', detached);\n    };\n    detached = () => {\n      this.attached = false;\n      _remove('resize', listener);\n      this._stop();\n      this._resize(0, 0);\n      _add('attach', attached);\n    };\n    if (platform.isAttached(this.canvas)) {\n      attached();\n    } else {\n      detached();\n    }\n  }\n  unbindEvents() {\n    each(this._listeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._listeners = {};\n    each(this._responsiveListeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._responsiveListeners = undefined;\n  }\n  updateHoverStyle(items, mode, enabled) {\n    const prefix = enabled ? 'set' : 'remove';\n    let meta, item, i, ilen;\n    if (mode === 'dataset') {\n      meta = this.getDatasetMeta(items[0].datasetIndex);\n      meta.controller['_' + prefix + 'DatasetHoverStyle']();\n    }\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      item = items[i];\n      const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n      if (controller) {\n        controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n      }\n    }\n  }\n  getActiveElements() {\n    return this._active || [];\n  }\n  setActiveElements(activeElements) {\n    const lastActive = this._active || [];\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('No dataset found at index ' + datasetIndex);\n      }\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(active, lastActive);\n    if (changed) {\n      this._active = active;\n      this._lastEvent = null;\n      this._updateHoverStyles(active, lastActive);\n    }\n  }\n  notifyPlugins(hook, args, filter) {\n    return this._plugins.notify(this, hook, args, filter);\n  }\n  _updateHoverStyles(active, lastActive, replay) {\n    const hoverOptions = this.options.hover;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.datasetIndex === y.datasetIndex && x.index === y.index));\n    const deactivated = diff(lastActive, active);\n    const activated = replay ? active : diff(active, lastActive);\n    if (deactivated.length) {\n      this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n    }\n    if (activated.length && hoverOptions.mode) {\n      this.updateHoverStyle(activated, hoverOptions.mode, true);\n    }\n  }\n  _eventHandler(e, replay) {\n    const args = {\n      event: e,\n      replay,\n      cancelable: true,\n      inChartArea: _isPointInArea(e, this.chartArea, this._minPadding)\n    };\n    const eventFilter = (plugin) => (plugin.options.events || this.options.events).includes(e.native.type);\n    if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n      return;\n    }\n    const changed = this._handleEvent(e, replay, args.inChartArea);\n    args.cancelable = false;\n    this.notifyPlugins('afterEvent', args, eventFilter);\n    if (changed || args.changed) {\n      this.render();\n    }\n    return this;\n  }\n  _handleEvent(e, replay, inChartArea) {\n    const {_active: lastActive = [], options} = this;\n    const useFinalPosition = replay;\n    const active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\n    const isClick = _isClickEvent(e);\n    const lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\n    if (inChartArea) {\n      this._lastEvent = null;\n      callback(options.onHover, [e, active, this], this);\n      if (isClick) {\n        callback(options.onClick, [e, active, this], this);\n      }\n    }\n    const changed = !_elementsEqual(active, lastActive);\n    if (changed || replay) {\n      this._active = active;\n      this._updateHoverStyles(active, lastActive, replay);\n    }\n    this._lastEvent = lastEvent;\n    return changed;\n  }\n  _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\n    if (e.type === 'mouseout') {\n      return [];\n    }\n    if (!inChartArea) {\n      return lastActive;\n    }\n    const hoverOptions = this.options.hover;\n    return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n  }\n}\nconst invalidatePlugins = () => each(Chart.instances, (chart) => chart._plugins.invalidate());\nconst enumerable = true;\nObject.defineProperties(Chart, {\n  defaults: {\n    enumerable,\n    value: defaults\n  },\n  instances: {\n    enumerable,\n    value: instances\n  },\n  overrides: {\n    enumerable,\n    value: overrides\n  },\n  registry: {\n    enumerable,\n    value: registry\n  },\n  version: {\n    enumerable,\n    value: version\n  },\n  getChart: {\n    enumerable,\n    value: getChart\n  },\n  register: {\n    enumerable,\n    value: (...items) => {\n      registry.add(...items);\n      invalidatePlugins();\n    }\n  },\n  unregister: {\n    enumerable,\n    value: (...items) => {\n      registry.remove(...items);\n      invalidatePlugins();\n    }\n  }\n});\n\nfunction clipArc(ctx, element, endAngle) {\n  const {startAngle, pixelMargin, x, y, outerRadius, innerRadius} = element;\n  let angleMargin = pixelMargin / outerRadius;\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n  if (innerRadius > pixelMargin) {\n    angleMargin = pixelMargin / innerRadius;\n    ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n  } else {\n    ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n  }\n  ctx.closePath();\n  ctx.clip();\n}\nfunction toRadiusCorners(value) {\n  return _readValueToProps(value, ['outerStart', 'outerEnd', 'innerStart', 'innerEnd']);\n}\nfunction parseBorderRadius$1(arc, innerRadius, outerRadius, angleDelta) {\n  const o = toRadiusCorners(arc.options.borderRadius);\n  const halfThickness = (outerRadius - innerRadius) / 2;\n  const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n  const computeOuterLimit = (val) => {\n    const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n    return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n  };\n  return {\n    outerStart: computeOuterLimit(o.outerStart),\n    outerEnd: computeOuterLimit(o.outerEnd),\n    innerStart: _limitValue(o.innerStart, 0, innerLimit),\n    innerEnd: _limitValue(o.innerEnd, 0, innerLimit),\n  };\n}\nfunction rThetaToXY(r, theta, x, y) {\n  return {\n    x: x + r * Math.cos(theta),\n    y: y + r * Math.sin(theta),\n  };\n}\nfunction pathArc(ctx, element, offset, spacing, end) {\n  const {x, y, startAngle: start, pixelMargin, innerRadius: innerR} = element;\n  const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n  const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n  let spacingOffset = 0;\n  const alpha = end - start;\n  if (spacing) {\n    const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n    const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n    const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n    const adjustedAngle = avNogSpacingRadius !== 0 ? (alpha * avNogSpacingRadius) / (avNogSpacingRadius + spacing) : alpha;\n    spacingOffset = (alpha - adjustedAngle) / 2;\n  }\n  const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n  const angleOffset = (alpha - beta) / 2;\n  const startAngle = start + angleOffset + spacingOffset;\n  const endAngle = end - angleOffset - spacingOffset;\n  const {outerStart, outerEnd, innerStart, innerEnd} = parseBorderRadius$1(element, innerRadius, outerRadius, endAngle - startAngle);\n  const outerStartAdjustedRadius = outerRadius - outerStart;\n  const outerEndAdjustedRadius = outerRadius - outerEnd;\n  const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n  const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n  const innerStartAdjustedRadius = innerRadius + innerStart;\n  const innerEndAdjustedRadius = innerRadius + innerEnd;\n  const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n  const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerEndAdjustedAngle);\n  if (outerEnd > 0) {\n    const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n  }\n  const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n  ctx.lineTo(p4.x, p4.y);\n  if (innerEnd > 0) {\n    const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n  }\n  ctx.arc(x, y, innerRadius, endAngle - (innerEnd / innerRadius), startAngle + (innerStart / innerRadius), true);\n  if (innerStart > 0) {\n    const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n  }\n  const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n  ctx.lineTo(p8.x, p8.y);\n  if (outerStart > 0) {\n    const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n  }\n  ctx.closePath();\n}\nfunction drawArc(ctx, element, offset, spacing) {\n  const {fullCircles, startAngle, circumference} = element;\n  let endAngle = element.endAngle;\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, startAngle + TAU);\n    for (let i = 0; i < fullCircles; ++i) {\n      ctx.fill();\n    }\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + circumference % TAU;\n      if (circumference % TAU === 0) {\n        endAngle += TAU;\n      }\n    }\n  }\n  pathArc(ctx, element, offset, spacing, endAngle);\n  ctx.fill();\n  return endAngle;\n}\nfunction drawFullCircleBorders(ctx, element, inner) {\n  const {x, y, startAngle, pixelMargin, fullCircles} = element;\n  const outerRadius = Math.max(element.outerRadius - pixelMargin, 0);\n  const innerRadius = element.innerRadius + pixelMargin;\n  let i;\n  if (inner) {\n    clipArc(ctx, element, startAngle + TAU);\n  }\n  ctx.beginPath();\n  ctx.arc(x, y, innerRadius, startAngle + TAU, startAngle, true);\n  for (i = 0; i < fullCircles; ++i) {\n    ctx.stroke();\n  }\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle, startAngle + TAU);\n  for (i = 0; i < fullCircles; ++i) {\n    ctx.stroke();\n  }\n}\nfunction drawBorder(ctx, element, offset, spacing, endAngle) {\n  const {options} = element;\n  const {borderWidth, borderJoinStyle} = options;\n  const inner = options.borderAlign === 'inner';\n  if (!borderWidth) {\n    return;\n  }\n  if (inner) {\n    ctx.lineWidth = borderWidth * 2;\n    ctx.lineJoin = borderJoinStyle || 'round';\n  } else {\n    ctx.lineWidth = borderWidth;\n    ctx.lineJoin = borderJoinStyle || 'bevel';\n  }\n  if (element.fullCircles) {\n    drawFullCircleBorders(ctx, element, inner);\n  }\n  if (inner) {\n    clipArc(ctx, element, endAngle);\n  }\n  pathArc(ctx, element, offset, spacing, endAngle);\n  ctx.stroke();\n}\nclass ArcElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.circumference = undefined;\n    this.startAngle = undefined;\n    this.endAngle = undefined;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.pixelMargin = 0;\n    this.fullCircles = 0;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  inRange(chartX, chartY, useFinalPosition) {\n    const point = this.getProps(['x', 'y'], useFinalPosition);\n    const {angle, distance} = getAngleFromPoint(point, {x: chartX, y: chartY});\n    const {startAngle, endAngle, innerRadius, outerRadius, circumference} = this.getProps([\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference'\n    ], useFinalPosition);\n    const rAdjust = this.options.spacing / 2;\n    const _circumference = valueOrDefault(circumference, endAngle - startAngle);\n    const betweenAngles = _circumference >= TAU || _angleBetween(angle, startAngle, endAngle);\n    const withinRadius = _isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n    return (betweenAngles && withinRadius);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y, startAngle, endAngle, innerRadius, outerRadius} = this.getProps([\n      'x',\n      'y',\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference',\n    ], useFinalPosition);\n    const {offset, spacing} = this.options;\n    const halfAngle = (startAngle + endAngle) / 2;\n    const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n    return {\n      x: x + Math.cos(halfAngle) * halfRadius,\n      y: y + Math.sin(halfAngle) * halfRadius\n    };\n  }\n  tooltipPosition(useFinalPosition) {\n    return this.getCenterPoint(useFinalPosition);\n  }\n  draw(ctx) {\n    const {options, circumference} = this;\n    const offset = (options.offset || 0) / 2;\n    const spacing = (options.spacing || 0) / 2;\n    this.pixelMargin = (options.borderAlign === 'inner') ? 0.33 : 0;\n    this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n    if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n      return;\n    }\n    ctx.save();\n    let radiusOffset = 0;\n    if (offset) {\n      radiusOffset = offset / 2;\n      const halfAngle = (this.startAngle + this.endAngle) / 2;\n      ctx.translate(Math.cos(halfAngle) * radiusOffset, Math.sin(halfAngle) * radiusOffset);\n      if (this.circumference >= PI) {\n        radiusOffset = offset;\n      }\n    }\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    const endAngle = drawArc(ctx, this, radiusOffset, spacing);\n    drawBorder(ctx, this, radiusOffset, spacing, endAngle);\n    ctx.restore();\n  }\n}\nArcElement.id = 'arc';\nArcElement.defaults = {\n  borderAlign: 'center',\n  borderColor: '#fff',\n  borderJoinStyle: undefined,\n  borderRadius: 0,\n  borderWidth: 2,\n  offset: 0,\n  spacing: 0,\n  angle: undefined,\n};\nArcElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor'\n};\n\nfunction setStyle(ctx, options, style = options) {\n  ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n  ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n  ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n  ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n  ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n  ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\nfunction lineTo(ctx, previous, target) {\n  ctx.lineTo(target.x, target.y);\n}\nfunction getLineMethod(options) {\n  if (options.stepped) {\n    return _steppedLineTo;\n  }\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierCurveTo;\n  }\n  return lineTo;\n}\nfunction pathVars(points, segment, params = {}) {\n  const count = points.length;\n  const {start: paramsStart = 0, end: paramsEnd = count - 1} = params;\n  const {start: segmentStart, end: segmentEnd} = segment;\n  const start = Math.max(paramsStart, segmentStart);\n  const end = Math.min(paramsEnd, segmentEnd);\n  const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n  return {\n    count,\n    start,\n    loop: segment.loop,\n    ilen: end < start && !outside ? count + end - start : end - start\n  };\n}\nfunction pathSegment(ctx, line, segment, params) {\n  const {points, options} = line;\n  const {count, start, loop, ilen} = pathVars(points, segment, params);\n  const lineMethod = getLineMethod(options);\n  let {move = true, reverse} = params || {};\n  let i, point, prev;\n  for (i = 0; i <= ilen; ++i) {\n    point = points[(start + (reverse ? ilen - i : i)) % count];\n    if (point.skip) {\n      continue;\n    } else if (move) {\n      ctx.moveTo(point.x, point.y);\n      move = false;\n    } else {\n      lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n    prev = point;\n  }\n  if (loop) {\n    point = points[(start + (reverse ? ilen : 0)) % count];\n    lineMethod(ctx, prev, point, reverse, options.stepped);\n  }\n  return !!loop;\n}\nfunction fastPathSegment(ctx, line, segment, params) {\n  const points = line.points;\n  const {count, start, ilen} = pathVars(points, segment, params);\n  const {move = true, reverse} = params || {};\n  let avgX = 0;\n  let countX = 0;\n  let i, point, prevX, minY, maxY, lastY;\n  const pointIndex = (index) => (start + (reverse ? ilen - index : index)) % count;\n  const drawX = () => {\n    if (minY !== maxY) {\n      ctx.lineTo(avgX, maxY);\n      ctx.lineTo(avgX, minY);\n      ctx.lineTo(avgX, lastY);\n    }\n  };\n  if (move) {\n    point = points[pointIndex(0)];\n    ctx.moveTo(point.x, point.y);\n  }\n  for (i = 0; i <= ilen; ++i) {\n    point = points[pointIndex(i)];\n    if (point.skip) {\n      continue;\n    }\n    const x = point.x;\n    const y = point.y;\n    const truncX = x | 0;\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n      } else if (y > maxY) {\n        maxY = y;\n      }\n      avgX = (countX * avgX + x) / ++countX;\n    } else {\n      drawX();\n      ctx.lineTo(x, y);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n    }\n    lastY = y;\n  }\n  drawX();\n}\nfunction _getSegmentMethod(line) {\n  const opts = line.options;\n  const borderDash = opts.borderDash && opts.borderDash.length;\n  const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n  return useFastPath ? fastPathSegment : pathSegment;\n}\nfunction _getInterpolationMethod(options) {\n  if (options.stepped) {\n    return _steppedInterpolation;\n  }\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierInterpolation;\n  }\n  return _pointInLine;\n}\nfunction strokePathWithCache(ctx, line, start, count) {\n  let path = line._path;\n  if (!path) {\n    path = line._path = new Path2D();\n    if (line.path(path, start, count)) {\n      path.closePath();\n    }\n  }\n  setStyle(ctx, line.options);\n  ctx.stroke(path);\n}\nfunction strokePathDirect(ctx, line, start, count) {\n  const {segments, options} = line;\n  const segmentMethod = _getSegmentMethod(line);\n  for (const segment of segments) {\n    setStyle(ctx, options, segment.style);\n    ctx.beginPath();\n    if (segmentMethod(ctx, line, segment, {start, end: start + count - 1})) {\n      ctx.closePath();\n    }\n    ctx.stroke();\n  }\n}\nconst usePath2D = typeof Path2D === 'function';\nfunction draw(ctx, line, start, count) {\n  if (usePath2D && !line.options.segment) {\n    strokePathWithCache(ctx, line, start, count);\n  } else {\n    strokePathDirect(ctx, line, start, count);\n  }\n}\nclass LineElement extends Element {\n  constructor(cfg) {\n    super();\n    this.animated = true;\n    this.options = undefined;\n    this._chart = undefined;\n    this._loop = undefined;\n    this._fullLoop = undefined;\n    this._path = undefined;\n    this._points = undefined;\n    this._segments = undefined;\n    this._decimated = false;\n    this._pointsUpdated = false;\n    this._datasetIndex = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  updateControlPoints(chartArea, indexAxis) {\n    const options = this.options;\n    if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n      const loop = options.spanGaps ? this._loop : this._fullLoop;\n      _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\n      this._pointsUpdated = true;\n    }\n  }\n  set points(points) {\n    this._points = points;\n    delete this._segments;\n    delete this._path;\n    this._pointsUpdated = false;\n  }\n  get points() {\n    return this._points;\n  }\n  get segments() {\n    return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n  }\n  first() {\n    const segments = this.segments;\n    const points = this.points;\n    return segments.length && points[segments[0].start];\n  }\n  last() {\n    const segments = this.segments;\n    const points = this.points;\n    const count = segments.length;\n    return count && points[segments[count - 1].end];\n  }\n  interpolate(point, property) {\n    const options = this.options;\n    const value = point[property];\n    const points = this.points;\n    const segments = _boundSegments(this, {property, start: value, end: value});\n    if (!segments.length) {\n      return;\n    }\n    const result = [];\n    const _interpolate = _getInterpolationMethod(options);\n    let i, ilen;\n    for (i = 0, ilen = segments.length; i < ilen; ++i) {\n      const {start, end} = segments[i];\n      const p1 = points[start];\n      const p2 = points[end];\n      if (p1 === p2) {\n        result.push(p1);\n        continue;\n      }\n      const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n      const interpolated = _interpolate(p1, p2, t, options.stepped);\n      interpolated[property] = point[property];\n      result.push(interpolated);\n    }\n    return result.length === 1 ? result[0] : result;\n  }\n  pathSegment(ctx, segment, params) {\n    const segmentMethod = _getSegmentMethod(this);\n    return segmentMethod(ctx, this, segment, params);\n  }\n  path(ctx, start, count) {\n    const segments = this.segments;\n    const segmentMethod = _getSegmentMethod(this);\n    let loop = this._loop;\n    start = start || 0;\n    count = count || (this.points.length - start);\n    for (const segment of segments) {\n      loop &= segmentMethod(ctx, this, segment, {start, end: start + count - 1});\n    }\n    return !!loop;\n  }\n  draw(ctx, chartArea, start, count) {\n    const options = this.options || {};\n    const points = this.points || [];\n    if (points.length && options.borderWidth) {\n      ctx.save();\n      draw(ctx, this, start, count);\n      ctx.restore();\n    }\n    if (this.animated) {\n      this._pointsUpdated = false;\n      this._path = undefined;\n    }\n  }\n}\nLineElement.id = 'line';\nLineElement.defaults = {\n  borderCapStyle: 'butt',\n  borderDash: [],\n  borderDashOffset: 0,\n  borderJoinStyle: 'miter',\n  borderWidth: 3,\n  capBezierPoints: true,\n  cubicInterpolationMode: 'default',\n  fill: false,\n  spanGaps: false,\n  stepped: false,\n  tension: 0,\n};\nLineElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\nLineElement.descriptors = {\n  _scriptable: true,\n  _indexable: (name) => name !== 'borderDash' && name !== 'fill',\n};\n\nfunction inRange$1(el, pos, axis, useFinalPosition) {\n  const options = el.options;\n  const {[axis]: value} = el.getProps([axis], useFinalPosition);\n  return (Math.abs(pos - value) < options.radius + options.hitRadius);\n}\nclass PointElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.parsed = undefined;\n    this.skip = undefined;\n    this.stop = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  inRange(mouseX, mouseY, useFinalPosition) {\n    const options = this.options;\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return ((Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2)) < Math.pow(options.hitRadius + options.radius, 2));\n  }\n  inXRange(mouseX, useFinalPosition) {\n    return inRange$1(this, mouseX, 'x', useFinalPosition);\n  }\n  inYRange(mouseY, useFinalPosition) {\n    return inRange$1(this, mouseY, 'y', useFinalPosition);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y};\n  }\n  size(options) {\n    options = options || this.options || {};\n    let radius = options.radius || 0;\n    radius = Math.max(radius, radius && options.hoverRadius || 0);\n    const borderWidth = radius && options.borderWidth || 0;\n    return (radius + borderWidth) * 2;\n  }\n  draw(ctx, area) {\n    const options = this.options;\n    if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\n      return;\n    }\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.fillStyle = options.backgroundColor;\n    drawPoint(ctx, options, this.x, this.y);\n  }\n  getRange() {\n    const options = this.options || {};\n    return options.radius + options.hitRadius;\n  }\n}\nPointElement.id = 'point';\nPointElement.defaults = {\n  borderWidth: 1,\n  hitRadius: 1,\n  hoverBorderWidth: 1,\n  hoverRadius: 4,\n  pointStyle: 'circle',\n  radius: 3,\n  rotation: 0\n};\nPointElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\n\nfunction getBarBounds(bar, useFinalPosition) {\n  const {x, y, base, width, height} = bar.getProps(['x', 'y', 'base', 'width', 'height'], useFinalPosition);\n  let left, right, top, bottom, half;\n  if (bar.horizontal) {\n    half = height / 2;\n    left = Math.min(x, base);\n    right = Math.max(x, base);\n    top = y - half;\n    bottom = y + half;\n  } else {\n    half = width / 2;\n    left = x - half;\n    right = x + half;\n    top = Math.min(y, base);\n    bottom = Math.max(y, base);\n  }\n  return {left, top, right, bottom};\n}\nfunction skipOrLimit(skip, value, min, max) {\n  return skip ? 0 : _limitValue(value, min, max);\n}\nfunction parseBorderWidth(bar, maxW, maxH) {\n  const value = bar.options.borderWidth;\n  const skip = bar.borderSkipped;\n  const o = toTRBL(value);\n  return {\n    t: skipOrLimit(skip.top, o.top, 0, maxH),\n    r: skipOrLimit(skip.right, o.right, 0, maxW),\n    b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n    l: skipOrLimit(skip.left, o.left, 0, maxW)\n  };\n}\nfunction parseBorderRadius(bar, maxW, maxH) {\n  const {enableBorderRadius} = bar.getProps(['enableBorderRadius']);\n  const value = bar.options.borderRadius;\n  const o = toTRBLCorners(value);\n  const maxR = Math.min(maxW, maxH);\n  const skip = bar.borderSkipped;\n  const enableBorder = enableBorderRadius || isObject(value);\n  return {\n    topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n    topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n    bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n    bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n  };\n}\nfunction boundingRects(bar) {\n  const bounds = getBarBounds(bar);\n  const width = bounds.right - bounds.left;\n  const height = bounds.bottom - bounds.top;\n  const border = parseBorderWidth(bar, width / 2, height / 2);\n  const radius = parseBorderRadius(bar, width / 2, height / 2);\n  return {\n    outer: {\n      x: bounds.left,\n      y: bounds.top,\n      w: width,\n      h: height,\n      radius\n    },\n    inner: {\n      x: bounds.left + border.l,\n      y: bounds.top + border.t,\n      w: width - border.l - border.r,\n      h: height - border.t - border.b,\n      radius: {\n        topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n        topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n        bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n        bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r)),\n      }\n    }\n  };\n}\nfunction inRange(bar, x, y, useFinalPosition) {\n  const skipX = x === null;\n  const skipY = y === null;\n  const skipBoth = skipX && skipY;\n  const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n  return bounds\n\t\t&& (skipX || _isBetween(x, bounds.left, bounds.right))\n\t\t&& (skipY || _isBetween(y, bounds.top, bounds.bottom));\n}\nfunction hasRadius(radius) {\n  return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\nfunction addNormalRectPath(ctx, rect) {\n  ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\nfunction inflateRect(rect, amount, refRect = {}) {\n  const x = rect.x !== refRect.x ? -amount : 0;\n  const y = rect.y !== refRect.y ? -amount : 0;\n  const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n  const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n  return {\n    x: rect.x + x,\n    y: rect.y + y,\n    w: rect.w + w,\n    h: rect.h + h,\n    radius: rect.radius\n  };\n}\nclass BarElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.horizontal = undefined;\n    this.base = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.inflateAmount = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  draw(ctx) {\n    const {inflateAmount, options: {borderColor, backgroundColor}} = this;\n    const {inner, outer} = boundingRects(this);\n    const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n    ctx.save();\n    if (outer.w !== inner.w || outer.h !== inner.h) {\n      ctx.beginPath();\n      addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n      ctx.clip();\n      addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n      ctx.fillStyle = borderColor;\n      ctx.fill('evenodd');\n    }\n    ctx.beginPath();\n    addRectPath(ctx, inflateRect(inner, inflateAmount));\n    ctx.fillStyle = backgroundColor;\n    ctx.fill();\n    ctx.restore();\n  }\n  inRange(mouseX, mouseY, useFinalPosition) {\n    return inRange(this, mouseX, mouseY, useFinalPosition);\n  }\n  inXRange(mouseX, useFinalPosition) {\n    return inRange(this, mouseX, null, useFinalPosition);\n  }\n  inYRange(mouseY, useFinalPosition) {\n    return inRange(this, null, mouseY, useFinalPosition);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y, base, horizontal} = this.getProps(['x', 'y', 'base', 'horizontal'], useFinalPosition);\n    return {\n      x: horizontal ? (x + base) / 2 : x,\n      y: horizontal ? y : (y + base) / 2\n    };\n  }\n  getRange(axis) {\n    return axis === 'x' ? this.width / 2 : this.height / 2;\n  }\n}\nBarElement.id = 'bar';\nBarElement.defaults = {\n  borderSkipped: 'start',\n  borderWidth: 0,\n  borderRadius: 0,\n  inflateAmount: 'auto',\n  pointStyle: undefined\n};\nBarElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\n\nvar elements = /*#__PURE__*/Object.freeze({\n__proto__: null,\nArcElement: ArcElement,\nLineElement: LineElement,\nPointElement: PointElement,\nBarElement: BarElement\n});\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n  const samples = options.samples || availableWidth;\n  if (samples >= count) {\n    return data.slice(start, start + count);\n  }\n  const decimated = [];\n  const bucketWidth = (count - 2) / (samples - 2);\n  let sampledIndex = 0;\n  const endIndex = start + count - 1;\n  let a = start;\n  let i, maxAreaPoint, maxArea, area, nextA;\n  decimated[sampledIndex++] = data[a];\n  for (i = 0; i < samples - 2; i++) {\n    let avgX = 0;\n    let avgY = 0;\n    let j;\n    const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n    const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n    const avgRangeLength = avgRangeEnd - avgRangeStart;\n    for (j = avgRangeStart; j < avgRangeEnd; j++) {\n      avgX += data[j].x;\n      avgY += data[j].y;\n    }\n    avgX /= avgRangeLength;\n    avgY /= avgRangeLength;\n    const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n    const rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n    const {x: pointAx, y: pointAy} = data[a];\n    maxArea = area = -1;\n    for (j = rangeOffs; j < rangeTo; j++) {\n      area = 0.5 * Math.abs(\n        (pointAx - avgX) * (data[j].y - pointAy) -\n        (pointAx - data[j].x) * (avgY - pointAy)\n      );\n      if (area > maxArea) {\n        maxArea = area;\n        maxAreaPoint = data[j];\n        nextA = j;\n      }\n    }\n    decimated[sampledIndex++] = maxAreaPoint;\n    a = nextA;\n  }\n  decimated[sampledIndex++] = data[endIndex];\n  return decimated;\n}\nfunction minMaxDecimation(data, start, count, availableWidth) {\n  let avgX = 0;\n  let countX = 0;\n  let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n  const decimated = [];\n  const endIndex = start + count - 1;\n  const xMin = data[start].x;\n  const xMax = data[endIndex].x;\n  const dx = xMax - xMin;\n  for (i = start; i < start + count; ++i) {\n    point = data[i];\n    x = (point.x - xMin) / dx * availableWidth;\n    y = point.y;\n    const truncX = x | 0;\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n        minIndex = i;\n      } else if (y > maxY) {\n        maxY = y;\n        maxIndex = i;\n      }\n      avgX = (countX * avgX + point.x) / ++countX;\n    } else {\n      const lastIndex = i - 1;\n      if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n        const intermediateIndex1 = Math.min(minIndex, maxIndex);\n        const intermediateIndex2 = Math.max(minIndex, maxIndex);\n        if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex1],\n            x: avgX,\n          });\n        }\n        if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex2],\n            x: avgX\n          });\n        }\n      }\n      if (i > 0 && lastIndex !== startIndex) {\n        decimated.push(data[lastIndex]);\n      }\n      decimated.push(point);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n      minIndex = maxIndex = startIndex = i;\n    }\n  }\n  return decimated;\n}\nfunction cleanDecimatedDataset(dataset) {\n  if (dataset._decimated) {\n    const data = dataset._data;\n    delete dataset._decimated;\n    delete dataset._data;\n    Object.defineProperty(dataset, 'data', {value: data});\n  }\n}\nfunction cleanDecimatedData(chart) {\n  chart.data.datasets.forEach((dataset) => {\n    cleanDecimatedDataset(dataset);\n  });\n}\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n  const pointCount = points.length;\n  let start = 0;\n  let count;\n  const {iScale} = meta;\n  const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n  if (minDefined) {\n    start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n  }\n  if (maxDefined) {\n    count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n  } else {\n    count = pointCount - start;\n  }\n  return {start, count};\n}\nvar plugin_decimation = {\n  id: 'decimation',\n  defaults: {\n    algorithm: 'min-max',\n    enabled: false,\n  },\n  beforeElementsUpdate: (chart, args, options) => {\n    if (!options.enabled) {\n      cleanDecimatedData(chart);\n      return;\n    }\n    const availableWidth = chart.width;\n    chart.data.datasets.forEach((dataset, datasetIndex) => {\n      const {_data, indexAxis} = dataset;\n      const meta = chart.getDatasetMeta(datasetIndex);\n      const data = _data || dataset.data;\n      if (resolve([indexAxis, chart.options.indexAxis]) === 'y') {\n        return;\n      }\n      if (meta.type !== 'line') {\n        return;\n      }\n      const xAxis = chart.scales[meta.xAxisID];\n      if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n        return;\n      }\n      if (chart.options.parsing) {\n        return;\n      }\n      let {start, count} = getStartAndCountOfVisiblePointsSimplified(meta, data);\n      const threshold = options.threshold || 4 * availableWidth;\n      if (count <= threshold) {\n        cleanDecimatedDataset(dataset);\n        return;\n      }\n      if (isNullOrUndef(_data)) {\n        dataset._data = data;\n        delete dataset.data;\n        Object.defineProperty(dataset, 'data', {\n          configurable: true,\n          enumerable: true,\n          get: function() {\n            return this._decimated;\n          },\n          set: function(d) {\n            this._data = d;\n          }\n        });\n      }\n      let decimated;\n      switch (options.algorithm) {\n      case 'lttb':\n        decimated = lttbDecimation(data, start, count, availableWidth, options);\n        break;\n      case 'min-max':\n        decimated = minMaxDecimation(data, start, count, availableWidth);\n        break;\n      default:\n        throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n      }\n      dataset._decimated = decimated;\n    });\n  },\n  destroy(chart) {\n    cleanDecimatedData(chart);\n  }\n};\n\nfunction getLineByIndex(chart, index) {\n  const meta = chart.getDatasetMeta(index);\n  const visible = meta && chart.isDatasetVisible(index);\n  return visible ? meta.dataset : null;\n}\nfunction parseFillOption(line) {\n  const options = line.options;\n  const fillOption = options.fill;\n  let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n  if (fill === undefined) {\n    fill = !!options.backgroundColor;\n  }\n  if (fill === false || fill === null) {\n    return false;\n  }\n  if (fill === true) {\n    return 'origin';\n  }\n  return fill;\n}\nfunction decodeFill(line, index, count) {\n  const fill = parseFillOption(line);\n  if (isObject(fill)) {\n    return isNaN(fill.value) ? false : fill;\n  }\n  let target = parseFloat(fill);\n  if (isNumberFinite(target) && Math.floor(target) === target) {\n    if (fill[0] === '-' || fill[0] === '+') {\n      target = index + target;\n    }\n    if (target === index || target < 0 || target >= count) {\n      return false;\n    }\n    return target;\n  }\n  return ['origin', 'start', 'end', 'stack', 'shape'].indexOf(fill) >= 0 && fill;\n}\nfunction computeLinearBoundary(source) {\n  const {scale = {}, fill} = source;\n  let target = null;\n  let horizontal;\n  if (fill === 'start') {\n    target = scale.bottom;\n  } else if (fill === 'end') {\n    target = scale.top;\n  } else if (isObject(fill)) {\n    target = scale.getPixelForValue(fill.value);\n  } else if (scale.getBasePixel) {\n    target = scale.getBasePixel();\n  }\n  if (isNumberFinite(target)) {\n    horizontal = scale.isHorizontal();\n    return {\n      x: horizontal ? target : null,\n      y: horizontal ? null : target\n    };\n  }\n  return null;\n}\nclass simpleArc {\n  constructor(opts) {\n    this.x = opts.x;\n    this.y = opts.y;\n    this.radius = opts.radius;\n  }\n  pathSegment(ctx, bounds, opts) {\n    const {x, y, radius} = this;\n    bounds = bounds || {start: 0, end: TAU};\n    ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n    return !opts.bounds;\n  }\n  interpolate(point) {\n    const {x, y, radius} = this;\n    const angle = point.angle;\n    return {\n      x: x + Math.cos(angle) * radius,\n      y: y + Math.sin(angle) * radius,\n      angle\n    };\n  }\n}\nfunction computeCircularBoundary(source) {\n  const {scale, fill} = source;\n  const options = scale.options;\n  const length = scale.getLabels().length;\n  const target = [];\n  const start = options.reverse ? scale.max : scale.min;\n  const end = options.reverse ? scale.min : scale.max;\n  let i, center, value;\n  if (fill === 'start') {\n    value = start;\n  } else if (fill === 'end') {\n    value = end;\n  } else if (isObject(fill)) {\n    value = fill.value;\n  } else {\n    value = scale.getBaseValue();\n  }\n  if (options.grid.circular) {\n    center = scale.getPointPositionForValue(0, start);\n    return new simpleArc({\n      x: center.x,\n      y: center.y,\n      radius: scale.getDistanceFromCenterForValue(value)\n    });\n  }\n  for (i = 0; i < length; ++i) {\n    target.push(scale.getPointPositionForValue(i, value));\n  }\n  return target;\n}\nfunction computeBoundary(source) {\n  const scale = source.scale || {};\n  if (scale.getPointPositionForValue) {\n    return computeCircularBoundary(source);\n  }\n  return computeLinearBoundary(source);\n}\nfunction findSegmentEnd(start, end, points) {\n  for (;end > start; end--) {\n    const point = points[end];\n    if (!isNaN(point.x) && !isNaN(point.y)) {\n      break;\n    }\n  }\n  return end;\n}\nfunction pointsFromSegments(boundary, line) {\n  const {x = null, y = null} = boundary || {};\n  const linePoints = line.points;\n  const points = [];\n  line.segments.forEach(({start, end}) => {\n    end = findSegmentEnd(start, end, linePoints);\n    const first = linePoints[start];\n    const last = linePoints[end];\n    if (y !== null) {\n      points.push({x: first.x, y});\n      points.push({x: last.x, y});\n    } else if (x !== null) {\n      points.push({x, y: first.y});\n      points.push({x, y: last.y});\n    }\n  });\n  return points;\n}\nfunction buildStackLine(source) {\n  const {scale, index, line} = source;\n  const points = [];\n  const segments = line.segments;\n  const sourcePoints = line.points;\n  const linesBelow = getLinesBelow(scale, index);\n  linesBelow.push(createBoundaryLine({x: null, y: scale.bottom}, line));\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    for (let j = segment.start; j <= segment.end; j++) {\n      addPointsBelow(points, sourcePoints[j], linesBelow);\n    }\n  }\n  return new LineElement({points, options: {}});\n}\nfunction getLinesBelow(scale, index) {\n  const below = [];\n  const metas = scale.getMatchingVisibleMetas('line');\n  for (let i = 0; i < metas.length; i++) {\n    const meta = metas[i];\n    if (meta.index === index) {\n      break;\n    }\n    if (!meta.hidden) {\n      below.unshift(meta.dataset);\n    }\n  }\n  return below;\n}\nfunction addPointsBelow(points, sourcePoint, linesBelow) {\n  const postponed = [];\n  for (let j = 0; j < linesBelow.length; j++) {\n    const line = linesBelow[j];\n    const {first, last, point} = findPoint(line, sourcePoint, 'x');\n    if (!point || (first && last)) {\n      continue;\n    }\n    if (first) {\n      postponed.unshift(point);\n    } else {\n      points.push(point);\n      if (!last) {\n        break;\n      }\n    }\n  }\n  points.push(...postponed);\n}\nfunction findPoint(line, sourcePoint, property) {\n  const point = line.interpolate(sourcePoint, property);\n  if (!point) {\n    return {};\n  }\n  const pointValue = point[property];\n  const segments = line.segments;\n  const linePoints = line.points;\n  let first = false;\n  let last = false;\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    const firstValue = linePoints[segment.start][property];\n    const lastValue = linePoints[segment.end][property];\n    if (_isBetween(pointValue, firstValue, lastValue)) {\n      first = pointValue === firstValue;\n      last = pointValue === lastValue;\n      break;\n    }\n  }\n  return {first, last, point};\n}\nfunction getTarget(source) {\n  const {chart, fill, line} = source;\n  if (isNumberFinite(fill)) {\n    return getLineByIndex(chart, fill);\n  }\n  if (fill === 'stack') {\n    return buildStackLine(source);\n  }\n  if (fill === 'shape') {\n    return true;\n  }\n  const boundary = computeBoundary(source);\n  if (boundary instanceof simpleArc) {\n    return boundary;\n  }\n  return createBoundaryLine(boundary, line);\n}\nfunction createBoundaryLine(boundary, line) {\n  let points = [];\n  let _loop = false;\n  if (isArray(boundary)) {\n    _loop = true;\n    points = boundary;\n  } else {\n    points = pointsFromSegments(boundary, line);\n  }\n  return points.length ? new LineElement({\n    points,\n    options: {tension: 0},\n    _loop,\n    _fullLoop: _loop\n  }) : null;\n}\nfunction resolveTarget(sources, index, propagate) {\n  const source = sources[index];\n  let fill = source.fill;\n  const visited = [index];\n  let target;\n  if (!propagate) {\n    return fill;\n  }\n  while (fill !== false && visited.indexOf(fill) === -1) {\n    if (!isNumberFinite(fill)) {\n      return fill;\n    }\n    target = sources[fill];\n    if (!target) {\n      return false;\n    }\n    if (target.visible) {\n      return fill;\n    }\n    visited.push(fill);\n    fill = target.fill;\n  }\n  return false;\n}\nfunction _clip(ctx, target, clipY) {\n  ctx.beginPath();\n  target.path(ctx);\n  ctx.lineTo(target.last().x, clipY);\n  ctx.lineTo(target.first().x, clipY);\n  ctx.closePath();\n  ctx.clip();\n}\nfunction getBounds(property, first, last, loop) {\n  if (loop) {\n    return;\n  }\n  let start = first[property];\n  let end = last[property];\n  if (property === 'angle') {\n    start = _normalizeAngle(start);\n    end = _normalizeAngle(end);\n  }\n  return {property, start, end};\n}\nfunction _getEdge(a, b, prop, fn) {\n  if (a && b) {\n    return fn(a[prop], b[prop]);\n  }\n  return a ? a[prop] : b ? b[prop] : 0;\n}\nfunction _segments(line, target, property) {\n  const segments = line.segments;\n  const points = line.points;\n  const tpoints = target.points;\n  const parts = [];\n  for (const segment of segments) {\n    let {start, end} = segment;\n    end = findSegmentEnd(start, end, points);\n    const bounds = getBounds(property, points[start], points[end], segment.loop);\n    if (!target.segments) {\n      parts.push({\n        source: segment,\n        target: bounds,\n        start: points[start],\n        end: points[end]\n      });\n      continue;\n    }\n    const targetSegments = _boundSegments(target, bounds);\n    for (const tgt of targetSegments) {\n      const subBounds = getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n      const fillSources = _boundSegment(segment, points, subBounds);\n      for (const fillSource of fillSources) {\n        parts.push({\n          source: fillSource,\n          target: tgt,\n          start: {\n            [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n          },\n          end: {\n            [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n          }\n        });\n      }\n    }\n  }\n  return parts;\n}\nfunction clipBounds(ctx, scale, bounds) {\n  const {top, bottom} = scale.chart.chartArea;\n  const {property, start, end} = bounds || {};\n  if (property === 'x') {\n    ctx.beginPath();\n    ctx.rect(start, top, end - start, bottom - top);\n    ctx.clip();\n  }\n}\nfunction interpolatedLineTo(ctx, target, point, property) {\n  const interpolatedPoint = target.interpolate(point, property);\n  if (interpolatedPoint) {\n    ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n  }\n}\nfunction _fill(ctx, cfg) {\n  const {line, target, property, color, scale} = cfg;\n  const segments = _segments(line, target, property);\n  for (const {source: src, target: tgt, start, end} of segments) {\n    const {style: {backgroundColor = color} = {}} = src;\n    const notShape = target !== true;\n    ctx.save();\n    ctx.fillStyle = backgroundColor;\n    clipBounds(ctx, scale, notShape && getBounds(property, start, end));\n    ctx.beginPath();\n    const lineLoop = !!line.pathSegment(ctx, src);\n    let loop;\n    if (notShape) {\n      if (lineLoop) {\n        ctx.closePath();\n      } else {\n        interpolatedLineTo(ctx, target, end, property);\n      }\n      const targetLoop = !!target.pathSegment(ctx, tgt, {move: lineLoop, reverse: true});\n      loop = lineLoop && targetLoop;\n      if (!loop) {\n        interpolatedLineTo(ctx, target, start, property);\n      }\n    }\n    ctx.closePath();\n    ctx.fill(loop ? 'evenodd' : 'nonzero');\n    ctx.restore();\n  }\n}\nfunction doFill(ctx, cfg) {\n  const {line, target, above, below, area, scale} = cfg;\n  const property = line._loop ? 'angle' : cfg.axis;\n  ctx.save();\n  if (property === 'x' && below !== above) {\n    _clip(ctx, target, area.top);\n    _fill(ctx, {line, target, color: above, scale, property});\n    ctx.restore();\n    ctx.save();\n    _clip(ctx, target, area.bottom);\n  }\n  _fill(ctx, {line, target, color: below, scale, property});\n  ctx.restore();\n}\nfunction drawfill(ctx, source, area) {\n  const target = getTarget(source);\n  const {line, scale, axis} = source;\n  const lineOpts = line.options;\n  const fillOption = lineOpts.fill;\n  const color = lineOpts.backgroundColor;\n  const {above = color, below = color} = fillOption || {};\n  if (target && line.points.length) {\n    clipArea(ctx, area);\n    doFill(ctx, {line, target, above, below, area, scale, axis});\n    unclipArea(ctx);\n  }\n}\nvar plugin_filler = {\n  id: 'filler',\n  afterDatasetsUpdate(chart, _args, options) {\n    const count = (chart.data.datasets || []).length;\n    const sources = [];\n    let meta, i, line, source;\n    for (i = 0; i < count; ++i) {\n      meta = chart.getDatasetMeta(i);\n      line = meta.dataset;\n      source = null;\n      if (line && line.options && line instanceof LineElement) {\n        source = {\n          visible: chart.isDatasetVisible(i),\n          index: i,\n          fill: decodeFill(line, i, count),\n          chart,\n          axis: meta.controller.options.indexAxis,\n          scale: meta.vScale,\n          line,\n        };\n      }\n      meta.$filler = source;\n      sources.push(source);\n    }\n    for (i = 0; i < count; ++i) {\n      source = sources[i];\n      if (!source || source.fill === false) {\n        continue;\n      }\n      source.fill = resolveTarget(sources, i, options.propagate);\n    }\n  },\n  beforeDraw(chart, _args, options) {\n    const draw = options.drawTime === 'beforeDraw';\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const area = chart.chartArea;\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n      if (!source) {\n        continue;\n      }\n      source.line.updateControlPoints(area, source.axis);\n      if (draw) {\n        drawfill(chart.ctx, source, area);\n      }\n    }\n  },\n  beforeDatasetsDraw(chart, _args, options) {\n    if (options.drawTime !== 'beforeDatasetsDraw') {\n      return;\n    }\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n      if (source) {\n        drawfill(chart.ctx, source, chart.chartArea);\n      }\n    }\n  },\n  beforeDatasetDraw(chart, args, options) {\n    const source = args.meta.$filler;\n    if (!source || source.fill === false || options.drawTime !== 'beforeDatasetDraw') {\n      return;\n    }\n    drawfill(chart.ctx, source, chart.chartArea);\n  },\n  defaults: {\n    propagate: true,\n    drawTime: 'beforeDatasetDraw'\n  }\n};\n\nconst getBoxSize = (labelOpts, fontSize) => {\n  let {boxHeight = fontSize, boxWidth = fontSize} = labelOpts;\n  if (labelOpts.usePointStyle) {\n    boxHeight = Math.min(boxHeight, fontSize);\n    boxWidth = Math.min(boxWidth, fontSize);\n  }\n  return {\n    boxWidth,\n    boxHeight,\n    itemHeight: Math.max(fontSize, boxHeight)\n  };\n};\nconst itemsEqual = (a, b) => a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\nclass Legend extends Element {\n  constructor(config) {\n    super();\n    this._added = false;\n    this.legendHitBoxes = [];\n    this._hoveredItem = null;\n    this.doughnutMode = false;\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this.legendItems = undefined;\n    this.columnSizes = undefined;\n    this.lineWidths = undefined;\n    this.maxHeight = undefined;\n    this.maxWidth = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this._margins = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n  update(maxWidth, maxHeight, margins) {\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins;\n    this.setDimensions();\n    this.buildLabels();\n    this.fit();\n  }\n  setDimensions() {\n    if (this.isHorizontal()) {\n      this.width = this.maxWidth;\n      this.left = this._margins.left;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n      this.top = this._margins.top;\n      this.bottom = this.height;\n    }\n  }\n  buildLabels() {\n    const labelOpts = this.options.labels || {};\n    let legendItems = callback(labelOpts.generateLabels, [this.chart], this) || [];\n    if (labelOpts.filter) {\n      legendItems = legendItems.filter((item) => labelOpts.filter(item, this.chart.data));\n    }\n    if (labelOpts.sort) {\n      legendItems = legendItems.sort((a, b) => labelOpts.sort(a, b, this.chart.data));\n    }\n    if (this.options.reverse) {\n      legendItems.reverse();\n    }\n    this.legendItems = legendItems;\n  }\n  fit() {\n    const {options, ctx} = this;\n    if (!options.display) {\n      this.width = this.height = 0;\n      return;\n    }\n    const labelOpts = options.labels;\n    const labelFont = toFont(labelOpts.font);\n    const fontSize = labelFont.size;\n    const titleHeight = this._computeTitleHeight();\n    const {boxWidth, itemHeight} = getBoxSize(labelOpts, fontSize);\n    let width, height;\n    ctx.font = labelFont.string;\n    if (this.isHorizontal()) {\n      width = this.maxWidth;\n      height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    } else {\n      height = this.maxHeight;\n      width = this._fitCols(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    }\n    this.width = Math.min(width, options.maxWidth || this.maxWidth);\n    this.height = Math.min(height, options.maxHeight || this.maxHeight);\n  }\n  _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n    const {ctx, maxWidth, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    const lineWidths = this.lineWidths = [0];\n    const lineHeight = itemHeight + padding;\n    let totalHeight = titleHeight;\n    ctx.textAlign = 'left';\n    ctx.textBaseline = 'middle';\n    let row = -1;\n    let top = -lineHeight;\n    this.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n      if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n        totalHeight += lineHeight;\n        lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n        top += lineHeight;\n        row++;\n      }\n      hitboxes[i] = {left: 0, top, row, width: itemWidth, height: itemHeight};\n      lineWidths[lineWidths.length - 1] += itemWidth + padding;\n    });\n    return totalHeight;\n  }\n  _fitCols(titleHeight, fontSize, boxWidth, itemHeight) {\n    const {ctx, maxHeight, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    const columnSizes = this.columnSizes = [];\n    const heightLimit = maxHeight - titleHeight;\n    let totalWidth = padding;\n    let currentColWidth = 0;\n    let currentColHeight = 0;\n    let left = 0;\n    let col = 0;\n    this.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n      if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n        totalWidth += currentColWidth + padding;\n        columnSizes.push({width: currentColWidth, height: currentColHeight});\n        left += currentColWidth + padding;\n        col++;\n        currentColWidth = currentColHeight = 0;\n      }\n      hitboxes[i] = {left, top: currentColHeight, col, width: itemWidth, height: itemHeight};\n      currentColWidth = Math.max(currentColWidth, itemWidth);\n      currentColHeight += itemHeight + padding;\n    });\n    totalWidth += currentColWidth;\n    columnSizes.push({width: currentColWidth, height: currentColHeight});\n    return totalWidth;\n  }\n  adjustHitBoxes() {\n    if (!this.options.display) {\n      return;\n    }\n    const titleHeight = this._computeTitleHeight();\n    const {legendHitBoxes: hitboxes, options: {align, labels: {padding}, rtl}} = this;\n    const rtlHelper = getRtlAdapter(rtl, this.left, this.width);\n    if (this.isHorizontal()) {\n      let row = 0;\n      let left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n      for (const hitbox of hitboxes) {\n        if (row !== hitbox.row) {\n          row = hitbox.row;\n          left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n        }\n        hitbox.top += this.top + titleHeight + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n        left += hitbox.width + padding;\n      }\n    } else {\n      let col = 0;\n      let top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n      for (const hitbox of hitboxes) {\n        if (hitbox.col !== col) {\n          col = hitbox.col;\n          top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n        }\n        hitbox.top = top;\n        hitbox.left += this.left + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox.left), hitbox.width);\n        top += hitbox.height + padding;\n      }\n    }\n  }\n  isHorizontal() {\n    return this.options.position === 'top' || this.options.position === 'bottom';\n  }\n  draw() {\n    if (this.options.display) {\n      const ctx = this.ctx;\n      clipArea(ctx, this);\n      this._draw();\n      unclipArea(ctx);\n    }\n  }\n  _draw() {\n    const {options: opts, columnSizes, lineWidths, ctx} = this;\n    const {align, labels: labelOpts} = opts;\n    const defaultColor = defaults.color;\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const labelFont = toFont(labelOpts.font);\n    const {color: fontColor, padding} = labelOpts;\n    const fontSize = labelFont.size;\n    const halfFontSize = fontSize / 2;\n    let cursor;\n    this.drawTitle();\n    ctx.textAlign = rtlHelper.textAlign('left');\n    ctx.textBaseline = 'middle';\n    ctx.lineWidth = 0.5;\n    ctx.font = labelFont.string;\n    const {boxWidth, boxHeight, itemHeight} = getBoxSize(labelOpts, fontSize);\n    const drawLegendBox = function(x, y, legendItem) {\n      if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n        return;\n      }\n      ctx.save();\n      const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n      ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n      ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n      ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n      ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n      ctx.lineWidth = lineWidth;\n      ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n      ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n      if (labelOpts.usePointStyle) {\n        const drawOptions = {\n          radius: boxWidth * Math.SQRT2 / 2,\n          pointStyle: legendItem.pointStyle,\n          rotation: legendItem.rotation,\n          borderWidth: lineWidth\n        };\n        const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n        const centerY = y + halfFontSize;\n        drawPoint(ctx, drawOptions, centerX, centerY);\n      } else {\n        const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n        const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n        const borderRadius = toTRBLCorners(legendItem.borderRadius);\n        ctx.beginPath();\n        if (Object.values(borderRadius).some(v => v !== 0)) {\n          addRoundedRectPath(ctx, {\n            x: xBoxLeft,\n            y: yBoxTop,\n            w: boxWidth,\n            h: boxHeight,\n            radius: borderRadius,\n          });\n        } else {\n          ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n        }\n        ctx.fill();\n        if (lineWidth !== 0) {\n          ctx.stroke();\n        }\n      }\n      ctx.restore();\n    };\n    const fillText = function(x, y, legendItem) {\n      renderText(ctx, legendItem.text, x, y + (itemHeight / 2), labelFont, {\n        strikethrough: legendItem.hidden,\n        textAlign: rtlHelper.textAlign(legendItem.textAlign)\n      });\n    };\n    const isHorizontal = this.isHorizontal();\n    const titleHeight = this._computeTitleHeight();\n    if (isHorizontal) {\n      cursor = {\n        x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\n        y: this.top + padding + titleHeight,\n        line: 0\n      };\n    } else {\n      cursor = {\n        x: this.left + padding,\n        y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n        line: 0\n      };\n    }\n    overrideTextDirection(this.ctx, opts.textDirection);\n    const lineHeight = itemHeight + padding;\n    this.legendItems.forEach((legendItem, i) => {\n      ctx.strokeStyle = legendItem.fontColor || fontColor;\n      ctx.fillStyle = legendItem.fontColor || fontColor;\n      const textWidth = ctx.measureText(legendItem.text).width;\n      const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n      const width = boxWidth + halfFontSize + textWidth;\n      let x = cursor.x;\n      let y = cursor.y;\n      rtlHelper.setWidth(this.width);\n      if (isHorizontal) {\n        if (i > 0 && x + width + padding > this.right) {\n          y = cursor.y += lineHeight;\n          cursor.line++;\n          x = cursor.x = _alignStartEnd(align, this.left + padding, this.right - lineWidths[cursor.line]);\n        }\n      } else if (i > 0 && y + lineHeight > this.bottom) {\n        x = cursor.x = x + columnSizes[cursor.line].width + padding;\n        cursor.line++;\n        y = cursor.y = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);\n      }\n      const realX = rtlHelper.x(x);\n      drawLegendBox(realX, y, legendItem);\n      x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);\n      fillText(rtlHelper.x(x), y, legendItem);\n      if (isHorizontal) {\n        cursor.x += width + padding;\n      } else {\n        cursor.y += lineHeight;\n      }\n    });\n    restoreTextDirection(this.ctx, opts.textDirection);\n  }\n  drawTitle() {\n    const opts = this.options;\n    const titleOpts = opts.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    if (!titleOpts.display) {\n      return;\n    }\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const ctx = this.ctx;\n    const position = titleOpts.position;\n    const halfFontSize = titleFont.size / 2;\n    const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n    let y;\n    let left = this.left;\n    let maxWidth = this.width;\n    if (this.isHorizontal()) {\n      maxWidth = Math.max(...this.lineWidths);\n      y = this.top + topPaddingPlusHalfFontSize;\n      left = _alignStartEnd(opts.align, left, this.right - maxWidth);\n    } else {\n      const maxHeight = this.columnSizes.reduce((acc, size) => Math.max(acc, size.height), 0);\n      y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n    }\n    const x = _alignStartEnd(position, left, left + maxWidth);\n    ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n    ctx.textBaseline = 'middle';\n    ctx.strokeStyle = titleOpts.color;\n    ctx.fillStyle = titleOpts.color;\n    ctx.font = titleFont.string;\n    renderText(ctx, titleOpts.text, x, y, titleFont);\n  }\n  _computeTitleHeight() {\n    const titleOpts = this.options.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n  }\n  _getLegendItemAt(x, y) {\n    let i, hitBox, lh;\n    if (_isBetween(x, this.left, this.right)\n      && _isBetween(y, this.top, this.bottom)) {\n      lh = this.legendHitBoxes;\n      for (i = 0; i < lh.length; ++i) {\n        hitBox = lh[i];\n        if (_isBetween(x, hitBox.left, hitBox.left + hitBox.width)\n          && _isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\n          return this.legendItems[i];\n        }\n      }\n    }\n    return null;\n  }\n  handleEvent(e) {\n    const opts = this.options;\n    if (!isListened(e.type, opts)) {\n      return;\n    }\n    const hoveredItem = this._getLegendItemAt(e.x, e.y);\n    if (e.type === 'mousemove') {\n      const previous = this._hoveredItem;\n      const sameItem = itemsEqual(previous, hoveredItem);\n      if (previous && !sameItem) {\n        callback(opts.onLeave, [e, previous, this], this);\n      }\n      this._hoveredItem = hoveredItem;\n      if (hoveredItem && !sameItem) {\n        callback(opts.onHover, [e, hoveredItem, this], this);\n      }\n    } else if (hoveredItem) {\n      callback(opts.onClick, [e, hoveredItem, this], this);\n    }\n  }\n}\nfunction isListened(type, opts) {\n  if (type === 'mousemove' && (opts.onHover || opts.onLeave)) {\n    return true;\n  }\n  if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n    return true;\n  }\n  return false;\n}\nvar plugin_legend = {\n  id: 'legend',\n  _element: Legend,\n  start(chart, _args, options) {\n    const legend = chart.legend = new Legend({ctx: chart.ctx, options, chart});\n    layouts.configure(chart, legend, options);\n    layouts.addBox(chart, legend);\n  },\n  stop(chart) {\n    layouts.removeBox(chart, chart.legend);\n    delete chart.legend;\n  },\n  beforeUpdate(chart, _args, options) {\n    const legend = chart.legend;\n    layouts.configure(chart, legend, options);\n    legend.options = options;\n  },\n  afterUpdate(chart) {\n    const legend = chart.legend;\n    legend.buildLabels();\n    legend.adjustHitBoxes();\n  },\n  afterEvent(chart, args) {\n    if (!args.replay) {\n      chart.legend.handleEvent(args.event);\n    }\n  },\n  defaults: {\n    display: true,\n    position: 'top',\n    align: 'center',\n    fullSize: true,\n    reverse: false,\n    weight: 1000,\n    onClick(e, legendItem, legend) {\n      const index = legendItem.datasetIndex;\n      const ci = legend.chart;\n      if (ci.isDatasetVisible(index)) {\n        ci.hide(index);\n        legendItem.hidden = true;\n      } else {\n        ci.show(index);\n        legendItem.hidden = false;\n      }\n    },\n    onHover: null,\n    onLeave: null,\n    labels: {\n      color: (ctx) => ctx.chart.options.color,\n      boxWidth: 40,\n      padding: 10,\n      generateLabels(chart) {\n        const datasets = chart.data.datasets;\n        const {labels: {usePointStyle, pointStyle, textAlign, color}} = chart.legend.options;\n        return chart._getSortedDatasetMetas().map((meta) => {\n          const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n          const borderWidth = toPadding(style.borderWidth);\n          return {\n            text: datasets[meta.index].label,\n            fillStyle: style.backgroundColor,\n            fontColor: color,\n            hidden: !meta.visible,\n            lineCap: style.borderCapStyle,\n            lineDash: style.borderDash,\n            lineDashOffset: style.borderDashOffset,\n            lineJoin: style.borderJoinStyle,\n            lineWidth: (borderWidth.width + borderWidth.height) / 4,\n            strokeStyle: style.borderColor,\n            pointStyle: pointStyle || style.pointStyle,\n            rotation: style.rotation,\n            textAlign: textAlign || style.textAlign,\n            borderRadius: 0,\n            datasetIndex: meta.index\n          };\n        }, this);\n      }\n    },\n    title: {\n      color: (ctx) => ctx.chart.options.color,\n      display: false,\n      position: 'center',\n      text: '',\n    }\n  },\n  descriptors: {\n    _scriptable: (name) => !name.startsWith('on'),\n    labels: {\n      _scriptable: (name) => !['generateLabels', 'filter', 'sort'].includes(name),\n    }\n  },\n};\n\nclass Title extends Element {\n  constructor(config) {\n    super();\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this._padding = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n  update(maxWidth, maxHeight) {\n    const opts = this.options;\n    this.left = 0;\n    this.top = 0;\n    if (!opts.display) {\n      this.width = this.height = this.right = this.bottom = 0;\n      return;\n    }\n    this.width = this.right = maxWidth;\n    this.height = this.bottom = maxHeight;\n    const lineCount = isArray(opts.text) ? opts.text.length : 1;\n    this._padding = toPadding(opts.padding);\n    const textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\n    if (this.isHorizontal()) {\n      this.height = textSize;\n    } else {\n      this.width = textSize;\n    }\n  }\n  isHorizontal() {\n    const pos = this.options.position;\n    return pos === 'top' || pos === 'bottom';\n  }\n  _drawArgs(offset) {\n    const {top, left, bottom, right, options} = this;\n    const align = options.align;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n    if (this.isHorizontal()) {\n      titleX = _alignStartEnd(align, left, right);\n      titleY = top + offset;\n      maxWidth = right - left;\n    } else {\n      if (options.position === 'left') {\n        titleX = left + offset;\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = PI * -0.5;\n      } else {\n        titleX = right - offset;\n        titleY = _alignStartEnd(align, top, bottom);\n        rotation = PI * 0.5;\n      }\n      maxWidth = bottom - top;\n    }\n    return {titleX, titleY, maxWidth, rotation};\n  }\n  draw() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    if (!opts.display) {\n      return;\n    }\n    const fontOpts = toFont(opts.font);\n    const lineHeight = fontOpts.lineHeight;\n    const offset = lineHeight / 2 + this._padding.top;\n    const {titleX, titleY, maxWidth, rotation} = this._drawArgs(offset);\n    renderText(ctx, opts.text, 0, 0, fontOpts, {\n      color: opts.color,\n      maxWidth,\n      rotation,\n      textAlign: _toLeftRightCenter(opts.align),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n}\nfunction createTitle(chart, titleOpts) {\n  const title = new Title({\n    ctx: chart.ctx,\n    options: titleOpts,\n    chart\n  });\n  layouts.configure(chart, title, titleOpts);\n  layouts.addBox(chart, title);\n  chart.titleBlock = title;\n}\nvar plugin_title = {\n  id: 'title',\n  _element: Title,\n  start(chart, _args, options) {\n    createTitle(chart, options);\n  },\n  stop(chart) {\n    const titleBlock = chart.titleBlock;\n    layouts.removeBox(chart, titleBlock);\n    delete chart.titleBlock;\n  },\n  beforeUpdate(chart, _args, options) {\n    const title = chart.titleBlock;\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'bold',\n    },\n    fullSize: true,\n    padding: 10,\n    position: 'top',\n    text: '',\n    weight: 2000\n  },\n  defaultRoutes: {\n    color: 'color'\n  },\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n\nconst map = new WeakMap();\nvar plugin_subtitle = {\n  id: 'subtitle',\n  start(chart, _args, options) {\n    const title = new Title({\n      ctx: chart.ctx,\n      options,\n      chart\n    });\n    layouts.configure(chart, title, options);\n    layouts.addBox(chart, title);\n    map.set(chart, title);\n  },\n  stop(chart) {\n    layouts.removeBox(chart, map.get(chart));\n    map.delete(chart);\n  },\n  beforeUpdate(chart, _args, options) {\n    const title = map.get(chart);\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'normal',\n    },\n    fullSize: true,\n    padding: 0,\n    position: 'top',\n    text: '',\n    weight: 1500\n  },\n  defaultRoutes: {\n    color: 'color'\n  },\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n\nconst positioners = {\n  average(items) {\n    if (!items.length) {\n      return false;\n    }\n    let i, len;\n    let x = 0;\n    let y = 0;\n    let count = 0;\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const pos = el.tooltipPosition();\n        x += pos.x;\n        y += pos.y;\n        ++count;\n      }\n    }\n    return {\n      x: x / count,\n      y: y / count\n    };\n  },\n  nearest(items, eventPosition) {\n    if (!items.length) {\n      return false;\n    }\n    let x = eventPosition.x;\n    let y = eventPosition.y;\n    let minDistance = Number.POSITIVE_INFINITY;\n    let i, len, nearestElement;\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const center = el.getCenterPoint();\n        const d = distanceBetweenPoints(eventPosition, center);\n        if (d < minDistance) {\n          minDistance = d;\n          nearestElement = el;\n        }\n      }\n    }\n    if (nearestElement) {\n      const tp = nearestElement.tooltipPosition();\n      x = tp.x;\n      y = tp.y;\n    }\n    return {\n      x,\n      y\n    };\n  }\n};\nfunction pushOrConcat(base, toPush) {\n  if (toPush) {\n    if (isArray(toPush)) {\n      Array.prototype.push.apply(base, toPush);\n    } else {\n      base.push(toPush);\n    }\n  }\n  return base;\n}\nfunction splitNewlines(str) {\n  if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n    return str.split('\\n');\n  }\n  return str;\n}\nfunction createTooltipItem(chart, item) {\n  const {element, datasetIndex, index} = item;\n  const controller = chart.getDatasetMeta(datasetIndex).controller;\n  const {label, value} = controller.getLabelAndValue(index);\n  return {\n    chart,\n    label,\n    parsed: controller.getParsed(index),\n    raw: chart.data.datasets[datasetIndex].data[index],\n    formattedValue: value,\n    dataset: controller.getDataset(),\n    dataIndex: index,\n    datasetIndex,\n    element\n  };\n}\nfunction getTooltipSize(tooltip, options) {\n  const ctx = tooltip.chart.ctx;\n  const {body, footer, title} = tooltip;\n  const {boxWidth, boxHeight} = options;\n  const bodyFont = toFont(options.bodyFont);\n  const titleFont = toFont(options.titleFont);\n  const footerFont = toFont(options.footerFont);\n  const titleLineCount = title.length;\n  const footerLineCount = footer.length;\n  const bodyLineItemCount = body.length;\n  const padding = toPadding(options.padding);\n  let height = padding.height;\n  let width = 0;\n  let combinedBodyLength = body.reduce((count, bodyItem) => count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n  combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n  if (titleLineCount) {\n    height += titleLineCount * titleFont.lineHeight\n\t\t\t+ (titleLineCount - 1) * options.titleSpacing\n\t\t\t+ options.titleMarginBottom;\n  }\n  if (combinedBodyLength) {\n    const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n    height += bodyLineItemCount * bodyLineHeight\n\t\t\t+ (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight\n\t\t\t+ (combinedBodyLength - 1) * options.bodySpacing;\n  }\n  if (footerLineCount) {\n    height += options.footerMarginTop\n\t\t\t+ footerLineCount * footerFont.lineHeight\n\t\t\t+ (footerLineCount - 1) * options.footerSpacing;\n  }\n  let widthPadding = 0;\n  const maxLineWidth = function(line) {\n    width = Math.max(width, ctx.measureText(line).width + widthPadding);\n  };\n  ctx.save();\n  ctx.font = titleFont.string;\n  each(tooltip.title, maxLineWidth);\n  ctx.font = bodyFont.string;\n  each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n  widthPadding = options.displayColors ? (boxWidth + 2 + options.boxPadding) : 0;\n  each(body, (bodyItem) => {\n    each(bodyItem.before, maxLineWidth);\n    each(bodyItem.lines, maxLineWidth);\n    each(bodyItem.after, maxLineWidth);\n  });\n  widthPadding = 0;\n  ctx.font = footerFont.string;\n  each(tooltip.footer, maxLineWidth);\n  ctx.restore();\n  width += padding.width;\n  return {width, height};\n}\nfunction determineYAlign(chart, size) {\n  const {y, height} = size;\n  if (y < height / 2) {\n    return 'top';\n  } else if (y > (chart.height - height / 2)) {\n    return 'bottom';\n  }\n  return 'center';\n}\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n  const {x, width} = size;\n  const caret = options.caretSize + options.caretPadding;\n  if (xAlign === 'left' && x + width + caret > chart.width) {\n    return true;\n  }\n  if (xAlign === 'right' && x - width - caret < 0) {\n    return true;\n  }\n}\nfunction determineXAlign(chart, options, size, yAlign) {\n  const {x, width} = size;\n  const {width: chartWidth, chartArea: {left, right}} = chart;\n  let xAlign = 'center';\n  if (yAlign === 'center') {\n    xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n  } else if (x <= width / 2) {\n    xAlign = 'left';\n  } else if (x >= chartWidth - width / 2) {\n    xAlign = 'right';\n  }\n  if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n    xAlign = 'center';\n  }\n  return xAlign;\n}\nfunction determineAlignment(chart, options, size) {\n  const yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\n  return {\n    xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\n    yAlign\n  };\n}\nfunction alignX(size, xAlign) {\n  let {x, width} = size;\n  if (xAlign === 'right') {\n    x -= width;\n  } else if (xAlign === 'center') {\n    x -= (width / 2);\n  }\n  return x;\n}\nfunction alignY(size, yAlign, paddingAndSize) {\n  let {y, height} = size;\n  if (yAlign === 'top') {\n    y += paddingAndSize;\n  } else if (yAlign === 'bottom') {\n    y -= height + paddingAndSize;\n  } else {\n    y -= (height / 2);\n  }\n  return y;\n}\nfunction getBackgroundPoint(options, size, alignment, chart) {\n  const {caretSize, caretPadding, cornerRadius} = options;\n  const {xAlign, yAlign} = alignment;\n  const paddingAndSize = caretSize + caretPadding;\n  const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n  let x = alignX(size, xAlign);\n  const y = alignY(size, yAlign, paddingAndSize);\n  if (yAlign === 'center') {\n    if (xAlign === 'left') {\n      x += paddingAndSize;\n    } else if (xAlign === 'right') {\n      x -= paddingAndSize;\n    }\n  } else if (xAlign === 'left') {\n    x -= Math.max(topLeft, bottomLeft) + caretSize;\n  } else if (xAlign === 'right') {\n    x += Math.max(topRight, bottomRight) + caretSize;\n  }\n  return {\n    x: _limitValue(x, 0, chart.width - size.width),\n    y: _limitValue(y, 0, chart.height - size.height)\n  };\n}\nfunction getAlignedX(tooltip, align, options) {\n  const padding = toPadding(options.padding);\n  return align === 'center'\n    ? tooltip.x + tooltip.width / 2\n    : align === 'right'\n      ? tooltip.x + tooltip.width - padding.right\n      : tooltip.x + padding.left;\n}\nfunction getBeforeAfterBodyLines(callback) {\n  return pushOrConcat([], splitNewlines(callback));\n}\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n  return createContext(parent, {\n    tooltip,\n    tooltipItems,\n    type: 'tooltip'\n  });\n}\nfunction overrideCallbacks(callbacks, context) {\n  const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n  return override ? callbacks.override(override) : callbacks;\n}\nclass Tooltip extends Element {\n  constructor(config) {\n    super();\n    this.opacity = 0;\n    this._active = [];\n    this._eventPosition = undefined;\n    this._size = undefined;\n    this._cachedAnimations = undefined;\n    this._tooltipItems = [];\n    this.$animations = undefined;\n    this.$context = undefined;\n    this.chart = config.chart || config._chart;\n    this._chart = this.chart;\n    this.options = config.options;\n    this.dataPoints = undefined;\n    this.title = undefined;\n    this.beforeBody = undefined;\n    this.body = undefined;\n    this.afterBody = undefined;\n    this.footer = undefined;\n    this.xAlign = undefined;\n    this.yAlign = undefined;\n    this.x = undefined;\n    this.y = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this.caretX = undefined;\n    this.caretY = undefined;\n    this.labelColors = undefined;\n    this.labelPointStyles = undefined;\n    this.labelTextColors = undefined;\n  }\n  initialize(options) {\n    this.options = options;\n    this._cachedAnimations = undefined;\n    this.$context = undefined;\n  }\n  _resolveAnimations() {\n    const cached = this._cachedAnimations;\n    if (cached) {\n      return cached;\n    }\n    const chart = this.chart;\n    const options = this.options.setContext(this.getContext());\n    const opts = options.enabled && chart.options.animation && options.animations;\n    const animations = new Animations(this.chart, opts);\n    if (opts._cacheable) {\n      this._cachedAnimations = Object.freeze(animations);\n    }\n    return animations;\n  }\n  getContext() {\n    return this.$context ||\n\t\t\t(this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\n  }\n  getTitle(context, options) {\n    const {callbacks} = options;\n    const beforeTitle = callbacks.beforeTitle.apply(this, [context]);\n    const title = callbacks.title.apply(this, [context]);\n    const afterTitle = callbacks.afterTitle.apply(this, [context]);\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n    lines = pushOrConcat(lines, splitNewlines(title));\n    lines = pushOrConcat(lines, splitNewlines(afterTitle));\n    return lines;\n  }\n  getBeforeBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(options.callbacks.beforeBody.apply(this, [tooltipItems]));\n  }\n  getBody(tooltipItems, options) {\n    const {callbacks} = options;\n    const bodyItems = [];\n    each(tooltipItems, (context) => {\n      const bodyItem = {\n        before: [],\n        lines: [],\n        after: []\n      };\n      const scoped = overrideCallbacks(callbacks, context);\n      pushOrConcat(bodyItem.before, splitNewlines(scoped.beforeLabel.call(this, context)));\n      pushOrConcat(bodyItem.lines, scoped.label.call(this, context));\n      pushOrConcat(bodyItem.after, splitNewlines(scoped.afterLabel.call(this, context)));\n      bodyItems.push(bodyItem);\n    });\n    return bodyItems;\n  }\n  getAfterBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(options.callbacks.afterBody.apply(this, [tooltipItems]));\n  }\n  getFooter(tooltipItems, options) {\n    const {callbacks} = options;\n    const beforeFooter = callbacks.beforeFooter.apply(this, [tooltipItems]);\n    const footer = callbacks.footer.apply(this, [tooltipItems]);\n    const afterFooter = callbacks.afterFooter.apply(this, [tooltipItems]);\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n    lines = pushOrConcat(lines, splitNewlines(footer));\n    lines = pushOrConcat(lines, splitNewlines(afterFooter));\n    return lines;\n  }\n  _createItems(options) {\n    const active = this._active;\n    const data = this.chart.data;\n    const labelColors = [];\n    const labelPointStyles = [];\n    const labelTextColors = [];\n    let tooltipItems = [];\n    let i, len;\n    for (i = 0, len = active.length; i < len; ++i) {\n      tooltipItems.push(createTooltipItem(this.chart, active[i]));\n    }\n    if (options.filter) {\n      tooltipItems = tooltipItems.filter((element, index, array) => options.filter(element, index, array, data));\n    }\n    if (options.itemSort) {\n      tooltipItems = tooltipItems.sort((a, b) => options.itemSort(a, b, data));\n    }\n    each(tooltipItems, (context) => {\n      const scoped = overrideCallbacks(options.callbacks, context);\n      labelColors.push(scoped.labelColor.call(this, context));\n      labelPointStyles.push(scoped.labelPointStyle.call(this, context));\n      labelTextColors.push(scoped.labelTextColor.call(this, context));\n    });\n    this.labelColors = labelColors;\n    this.labelPointStyles = labelPointStyles;\n    this.labelTextColors = labelTextColors;\n    this.dataPoints = tooltipItems;\n    return tooltipItems;\n  }\n  update(changed, replay) {\n    const options = this.options.setContext(this.getContext());\n    const active = this._active;\n    let properties;\n    let tooltipItems = [];\n    if (!active.length) {\n      if (this.opacity !== 0) {\n        properties = {\n          opacity: 0\n        };\n      }\n    } else {\n      const position = positioners[options.position].call(this, active, this._eventPosition);\n      tooltipItems = this._createItems(options);\n      this.title = this.getTitle(tooltipItems, options);\n      this.beforeBody = this.getBeforeBody(tooltipItems, options);\n      this.body = this.getBody(tooltipItems, options);\n      this.afterBody = this.getAfterBody(tooltipItems, options);\n      this.footer = this.getFooter(tooltipItems, options);\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, size);\n      const alignment = determineAlignment(this.chart, options, positionAndSize);\n      const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\n      this.xAlign = alignment.xAlign;\n      this.yAlign = alignment.yAlign;\n      properties = {\n        opacity: 1,\n        x: backgroundPoint.x,\n        y: backgroundPoint.y,\n        width: size.width,\n        height: size.height,\n        caretX: position.x,\n        caretY: position.y\n      };\n    }\n    this._tooltipItems = tooltipItems;\n    this.$context = undefined;\n    if (properties) {\n      this._resolveAnimations().update(this, properties);\n    }\n    if (changed && options.external) {\n      options.external.call(this, {chart: this.chart, tooltip: this, replay});\n    }\n  }\n  drawCaret(tooltipPoint, ctx, size, options) {\n    const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n    ctx.lineTo(caretPosition.x1, caretPosition.y1);\n    ctx.lineTo(caretPosition.x2, caretPosition.y2);\n    ctx.lineTo(caretPosition.x3, caretPosition.y3);\n  }\n  getCaretPosition(tooltipPoint, size, options) {\n    const {xAlign, yAlign} = this;\n    const {caretSize, cornerRadius} = options;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n    const {x: ptX, y: ptY} = tooltipPoint;\n    const {width, height} = size;\n    let x1, x2, x3, y1, y2, y3;\n    if (yAlign === 'center') {\n      y2 = ptY + (height / 2);\n      if (xAlign === 'left') {\n        x1 = ptX;\n        x2 = x1 - caretSize;\n        y1 = y2 + caretSize;\n        y3 = y2 - caretSize;\n      } else {\n        x1 = ptX + width;\n        x2 = x1 + caretSize;\n        y1 = y2 - caretSize;\n        y3 = y2 + caretSize;\n      }\n      x3 = x1;\n    } else {\n      if (xAlign === 'left') {\n        x2 = ptX + Math.max(topLeft, bottomLeft) + (caretSize);\n      } else if (xAlign === 'right') {\n        x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n      } else {\n        x2 = this.caretX;\n      }\n      if (yAlign === 'top') {\n        y1 = ptY;\n        y2 = y1 - caretSize;\n        x1 = x2 - caretSize;\n        x3 = x2 + caretSize;\n      } else {\n        y1 = ptY + height;\n        y2 = y1 + caretSize;\n        x1 = x2 + caretSize;\n        x3 = x2 - caretSize;\n      }\n      y3 = y1;\n    }\n    return {x1, x2, x3, y1, y2, y3};\n  }\n  drawTitle(pt, ctx, options) {\n    const title = this.title;\n    const length = title.length;\n    let titleFont, titleSpacing, i;\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n      pt.x = getAlignedX(this, options.titleAlign, options);\n      ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n      ctx.textBaseline = 'middle';\n      titleFont = toFont(options.titleFont);\n      titleSpacing = options.titleSpacing;\n      ctx.fillStyle = options.titleColor;\n      ctx.font = titleFont.string;\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n        pt.y += titleFont.lineHeight + titleSpacing;\n        if (i + 1 === length) {\n          pt.y += options.titleMarginBottom - titleSpacing;\n        }\n      }\n    }\n  }\n  _drawColorBox(ctx, pt, i, rtlHelper, options) {\n    const labelColors = this.labelColors[i];\n    const labelPointStyle = this.labelPointStyles[i];\n    const {boxHeight, boxWidth, boxPadding} = options;\n    const bodyFont = toFont(options.bodyFont);\n    const colorX = getAlignedX(this, 'left', options);\n    const rtlColorX = rtlHelper.x(colorX);\n    const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n    const colorY = pt.y + yOffSet;\n    if (options.usePointStyle) {\n      const drawOptions = {\n        radius: Math.min(boxWidth, boxHeight) / 2,\n        pointStyle: labelPointStyle.pointStyle,\n        rotation: labelPointStyle.rotation,\n        borderWidth: 1\n      };\n      const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n      const centerY = colorY + boxHeight / 2;\n      ctx.strokeStyle = options.multiKeyBackground;\n      ctx.fillStyle = options.multiKeyBackground;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.fillStyle = labelColors.backgroundColor;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n    } else {\n      ctx.lineWidth = labelColors.borderWidth || 1;\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.setLineDash(labelColors.borderDash || []);\n      ctx.lineDashOffset = labelColors.borderDashOffset || 0;\n      const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth - boxPadding);\n      const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - boxPadding - 2);\n      const borderRadius = toTRBLCorners(labelColors.borderRadius);\n      if (Object.values(borderRadius).some(v => v !== 0)) {\n        ctx.beginPath();\n        ctx.fillStyle = options.multiKeyBackground;\n        addRoundedRectPath(ctx, {\n          x: outerX,\n          y: colorY,\n          w: boxWidth,\n          h: boxHeight,\n          radius: borderRadius,\n        });\n        ctx.fill();\n        ctx.stroke();\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.beginPath();\n        addRoundedRectPath(ctx, {\n          x: innerX,\n          y: colorY + 1,\n          w: boxWidth - 2,\n          h: boxHeight - 2,\n          radius: borderRadius,\n        });\n        ctx.fill();\n      } else {\n        ctx.fillStyle = options.multiKeyBackground;\n        ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n      }\n    }\n    ctx.fillStyle = this.labelTextColors[i];\n  }\n  drawBody(pt, ctx, options) {\n    const {body} = this;\n    const {bodySpacing, bodyAlign, displayColors, boxHeight, boxWidth, boxPadding} = options;\n    const bodyFont = toFont(options.bodyFont);\n    let bodyLineHeight = bodyFont.lineHeight;\n    let xLinePadding = 0;\n    const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n    const fillLineOfText = function(line) {\n      ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n      pt.y += bodyLineHeight + bodySpacing;\n    };\n    const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n    let bodyItem, textColor, lines, i, j, ilen, jlen;\n    ctx.textAlign = bodyAlign;\n    ctx.textBaseline = 'middle';\n    ctx.font = bodyFont.string;\n    pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n    ctx.fillStyle = options.bodyColor;\n    each(this.beforeBody, fillLineOfText);\n    xLinePadding = displayColors && bodyAlignForCalculation !== 'right'\n      ? bodyAlign === 'center' ? (boxWidth / 2 + boxPadding) : (boxWidth + 2 + boxPadding)\n      : 0;\n    for (i = 0, ilen = body.length; i < ilen; ++i) {\n      bodyItem = body[i];\n      textColor = this.labelTextColors[i];\n      ctx.fillStyle = textColor;\n      each(bodyItem.before, fillLineOfText);\n      lines = bodyItem.lines;\n      if (displayColors && lines.length) {\n        this._drawColorBox(ctx, pt, i, rtlHelper, options);\n        bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n      }\n      for (j = 0, jlen = lines.length; j < jlen; ++j) {\n        fillLineOfText(lines[j]);\n        bodyLineHeight = bodyFont.lineHeight;\n      }\n      each(bodyItem.after, fillLineOfText);\n    }\n    xLinePadding = 0;\n    bodyLineHeight = bodyFont.lineHeight;\n    each(this.afterBody, fillLineOfText);\n    pt.y -= bodySpacing;\n  }\n  drawFooter(pt, ctx, options) {\n    const footer = this.footer;\n    const length = footer.length;\n    let footerFont, i;\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n      pt.x = getAlignedX(this, options.footerAlign, options);\n      pt.y += options.footerMarginTop;\n      ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n      ctx.textBaseline = 'middle';\n      footerFont = toFont(options.footerFont);\n      ctx.fillStyle = options.footerColor;\n      ctx.font = footerFont.string;\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n        pt.y += footerFont.lineHeight + options.footerSpacing;\n      }\n    }\n  }\n  drawBackground(pt, ctx, tooltipSize, options) {\n    const {xAlign, yAlign} = this;\n    const {x, y} = pt;\n    const {width, height} = tooltipSize;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(options.cornerRadius);\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.beginPath();\n    ctx.moveTo(x + topLeft, y);\n    if (yAlign === 'top') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width - topRight, y);\n    ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n    if (yAlign === 'center' && xAlign === 'right') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width, y + height - bottomRight);\n    ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n    if (yAlign === 'bottom') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + bottomLeft, y + height);\n    ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n    if (yAlign === 'center' && xAlign === 'left') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x, y + topLeft);\n    ctx.quadraticCurveTo(x, y, x + topLeft, y);\n    ctx.closePath();\n    ctx.fill();\n    if (options.borderWidth > 0) {\n      ctx.stroke();\n    }\n  }\n  _updateAnimationTarget(options) {\n    const chart = this.chart;\n    const anims = this.$animations;\n    const animX = anims && anims.x;\n    const animY = anims && anims.y;\n    if (animX || animY) {\n      const position = positioners[options.position].call(this, this._active, this._eventPosition);\n      if (!position) {\n        return;\n      }\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, this._size);\n      const alignment = determineAlignment(chart, options, positionAndSize);\n      const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n      if (animX._to !== point.x || animY._to !== point.y) {\n        this.xAlign = alignment.xAlign;\n        this.yAlign = alignment.yAlign;\n        this.width = size.width;\n        this.height = size.height;\n        this.caretX = position.x;\n        this.caretY = position.y;\n        this._resolveAnimations().update(this, point);\n      }\n    }\n  }\n  draw(ctx) {\n    const options = this.options.setContext(this.getContext());\n    let opacity = this.opacity;\n    if (!opacity) {\n      return;\n    }\n    this._updateAnimationTarget(options);\n    const tooltipSize = {\n      width: this.width,\n      height: this.height\n    };\n    const pt = {\n      x: this.x,\n      y: this.y\n    };\n    opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n    const padding = toPadding(options.padding);\n    const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n    if (options.enabled && hasTooltipContent) {\n      ctx.save();\n      ctx.globalAlpha = opacity;\n      this.drawBackground(pt, ctx, tooltipSize, options);\n      overrideTextDirection(ctx, options.textDirection);\n      pt.y += padding.top;\n      this.drawTitle(pt, ctx, options);\n      this.drawBody(pt, ctx, options);\n      this.drawFooter(pt, ctx, options);\n      restoreTextDirection(ctx, options.textDirection);\n      ctx.restore();\n    }\n  }\n  getActiveElements() {\n    return this._active || [];\n  }\n  setActiveElements(activeElements, eventPosition) {\n    const lastActive = this._active;\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.chart.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('Cannot find a dataset at index ' + datasetIndex);\n      }\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(lastActive, active);\n    const positionChanged = this._positionChanged(active, eventPosition);\n    if (changed || positionChanged) {\n      this._active = active;\n      this._eventPosition = eventPosition;\n      this._ignoreReplayEvents = true;\n      this.update(true);\n    }\n  }\n  handleEvent(e, replay, inChartArea = true) {\n    if (replay && this._ignoreReplayEvents) {\n      return false;\n    }\n    this._ignoreReplayEvents = false;\n    const options = this.options;\n    const lastActive = this._active || [];\n    const active = this._getActiveElements(e, lastActive, replay, inChartArea);\n    const positionChanged = this._positionChanged(active, e);\n    const changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n    if (changed) {\n      this._active = active;\n      if (options.enabled || options.external) {\n        this._eventPosition = {\n          x: e.x,\n          y: e.y\n        };\n        this.update(true, replay);\n      }\n    }\n    return changed;\n  }\n  _getActiveElements(e, lastActive, replay, inChartArea) {\n    const options = this.options;\n    if (e.type === 'mouseout') {\n      return [];\n    }\n    if (!inChartArea) {\n      return lastActive;\n    }\n    const active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\n    if (options.reverse) {\n      active.reverse();\n    }\n    return active;\n  }\n  _positionChanged(active, e) {\n    const {caretX, caretY, options} = this;\n    const position = positioners[options.position].call(this, active, e);\n    return position !== false && (caretX !== position.x || caretY !== position.y);\n  }\n}\nTooltip.positioners = positioners;\nvar plugin_tooltip = {\n  id: 'tooltip',\n  _element: Tooltip,\n  positioners,\n  afterInit(chart, _args, options) {\n    if (options) {\n      chart.tooltip = new Tooltip({chart, options});\n    }\n  },\n  beforeUpdate(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n  reset(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n  afterDraw(chart) {\n    const tooltip = chart.tooltip;\n    const args = {\n      tooltip\n    };\n    if (chart.notifyPlugins('beforeTooltipDraw', args) === false) {\n      return;\n    }\n    if (tooltip) {\n      tooltip.draw(chart.ctx);\n    }\n    chart.notifyPlugins('afterTooltipDraw', args);\n  },\n  afterEvent(chart, args) {\n    if (chart.tooltip) {\n      const useFinalPosition = args.replay;\n      if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\n        args.changed = true;\n      }\n    }\n  },\n  defaults: {\n    enabled: true,\n    external: null,\n    position: 'average',\n    backgroundColor: 'rgba(0,0,0,0.8)',\n    titleColor: '#fff',\n    titleFont: {\n      weight: 'bold',\n    },\n    titleSpacing: 2,\n    titleMarginBottom: 6,\n    titleAlign: 'left',\n    bodyColor: '#fff',\n    bodySpacing: 2,\n    bodyFont: {\n    },\n    bodyAlign: 'left',\n    footerColor: '#fff',\n    footerSpacing: 2,\n    footerMarginTop: 6,\n    footerFont: {\n      weight: 'bold',\n    },\n    footerAlign: 'left',\n    padding: 6,\n    caretPadding: 2,\n    caretSize: 5,\n    cornerRadius: 6,\n    boxHeight: (ctx, opts) => opts.bodyFont.size,\n    boxWidth: (ctx, opts) => opts.bodyFont.size,\n    multiKeyBackground: '#fff',\n    displayColors: true,\n    boxPadding: 0,\n    borderColor: 'rgba(0,0,0,0)',\n    borderWidth: 0,\n    animation: {\n      duration: 400,\n      easing: 'easeOutQuart',\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'width', 'height', 'caretX', 'caretY'],\n      },\n      opacity: {\n        easing: 'linear',\n        duration: 200\n      }\n    },\n    callbacks: {\n      beforeTitle: noop,\n      title(tooltipItems) {\n        if (tooltipItems.length > 0) {\n          const item = tooltipItems[0];\n          const labels = item.chart.data.labels;\n          const labelCount = labels ? labels.length : 0;\n          if (this && this.options && this.options.mode === 'dataset') {\n            return item.dataset.label || '';\n          } else if (item.label) {\n            return item.label;\n          } else if (labelCount > 0 && item.dataIndex < labelCount) {\n            return labels[item.dataIndex];\n          }\n        }\n        return '';\n      },\n      afterTitle: noop,\n      beforeBody: noop,\n      beforeLabel: noop,\n      label(tooltipItem) {\n        if (this && this.options && this.options.mode === 'dataset') {\n          return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n        }\n        let label = tooltipItem.dataset.label || '';\n        if (label) {\n          label += ': ';\n        }\n        const value = tooltipItem.formattedValue;\n        if (!isNullOrUndef(value)) {\n          label += value;\n        }\n        return label;\n      },\n      labelColor(tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n          borderColor: options.borderColor,\n          backgroundColor: options.backgroundColor,\n          borderWidth: options.borderWidth,\n          borderDash: options.borderDash,\n          borderDashOffset: options.borderDashOffset,\n          borderRadius: 0,\n        };\n      },\n      labelTextColor() {\n        return this.options.bodyColor;\n      },\n      labelPointStyle(tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n          pointStyle: options.pointStyle,\n          rotation: options.rotation,\n        };\n      },\n      afterLabel: noop,\n      afterBody: noop,\n      beforeFooter: noop,\n      footer: noop,\n      afterFooter: noop\n    }\n  },\n  defaultRoutes: {\n    bodyFont: 'font',\n    footerFont: 'font',\n    titleFont: 'font'\n  },\n  descriptors: {\n    _scriptable: (name) => name !== 'filter' && name !== 'itemSort' && name !== 'external',\n    _indexable: false,\n    callbacks: {\n      _scriptable: false,\n      _indexable: false,\n    },\n    animation: {\n      _fallback: false\n    },\n    animations: {\n      _fallback: 'animation'\n    }\n  },\n  additionalOptionScopes: ['interaction']\n};\n\nvar plugins = /*#__PURE__*/Object.freeze({\n__proto__: null,\nDecimation: plugin_decimation,\nFiller: plugin_filler,\nLegend: plugin_legend,\nSubTitle: plugin_subtitle,\nTitle: plugin_title,\nTooltip: plugin_tooltip\n});\n\nconst addIfString = (labels, raw, index, addedLabels) => {\n  if (typeof raw === 'string') {\n    index = labels.push(raw) - 1;\n    addedLabels.unshift({index, label: raw});\n  } else if (isNaN(raw)) {\n    index = null;\n  }\n  return index;\n};\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\n  const first = labels.indexOf(raw);\n  if (first === -1) {\n    return addIfString(labels, raw, index, addedLabels);\n  }\n  const last = labels.lastIndexOf(raw);\n  return first !== last ? index : first;\n}\nconst validIndex = (index, max) => index === null ? null : _limitValue(Math.round(index), 0, max);\nclass CategoryScale extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this._startValue = undefined;\n    this._valueRange = 0;\n    this._addedLabels = [];\n  }\n  init(scaleOptions) {\n    const added = this._addedLabels;\n    if (added.length) {\n      const labels = this.getLabels();\n      for (const {index, label} of added) {\n        if (labels[index] === label) {\n          labels.splice(index, 1);\n        }\n      }\n      this._addedLabels = [];\n    }\n    super.init(scaleOptions);\n  }\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    const labels = this.getLabels();\n    index = isFinite(index) && labels[index] === raw ? index\n      : findOrAddLabel(labels, raw, valueOrDefault(index, raw), this._addedLabels);\n    return validIndex(index, labels.length - 1);\n  }\n  determineDataLimits() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this.getMinMax(true);\n    if (this.options.bounds === 'ticks') {\n      if (!minDefined) {\n        min = 0;\n      }\n      if (!maxDefined) {\n        max = this.getLabels().length - 1;\n      }\n    }\n    this.min = min;\n    this.max = max;\n  }\n  buildTicks() {\n    const min = this.min;\n    const max = this.max;\n    const offset = this.options.offset;\n    const ticks = [];\n    let labels = this.getLabels();\n    labels = (min === 0 && max === labels.length - 1) ? labels : labels.slice(min, max + 1);\n    this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n    this._startValue = this.min - (offset ? 0.5 : 0);\n    for (let value = min; value <= max; value++) {\n      ticks.push({value});\n    }\n    return ticks;\n  }\n  getLabelForValue(value) {\n    const labels = this.getLabels();\n    if (value >= 0 && value < labels.length) {\n      return labels[value];\n    }\n    return value;\n  }\n  configure() {\n    super.configure();\n    if (!this.isHorizontal()) {\n      this._reversePixels = !this._reversePixels;\n    }\n  }\n  getPixelForValue(value) {\n    if (typeof value !== 'number') {\n      value = this.parse(value);\n    }\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n  getValueForPixel(pixel) {\n    return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n  }\n  getBasePixel() {\n    return this.bottom;\n  }\n}\nCategoryScale.id = 'category';\nCategoryScale.defaults = {\n  ticks: {\n    callback: CategoryScale.prototype.getLabelForValue\n  }\n};\n\nfunction generateTicks$1(generationOptions, dataRange) {\n  const ticks = [];\n  const MIN_SPACING = 1e-14;\n  const {bounds, step, min, max, precision, count, maxTicks, maxDigits, includeBounds} = generationOptions;\n  const unit = step || 1;\n  const maxSpaces = maxTicks - 1;\n  const {min: rmin, max: rmax} = dataRange;\n  const minDefined = !isNullOrUndef(min);\n  const maxDefined = !isNullOrUndef(max);\n  const countDefined = !isNullOrUndef(count);\n  const minSpacing = (rmax - rmin) / (maxDigits + 1);\n  let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n  let factor, niceMin, niceMax, numSpaces;\n  if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n    return [{value: rmin}, {value: rmax}];\n  }\n  numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n  if (numSpaces > maxSpaces) {\n    spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n  }\n  if (!isNullOrUndef(precision)) {\n    factor = Math.pow(10, precision);\n    spacing = Math.ceil(spacing * factor) / factor;\n  }\n  if (bounds === 'ticks') {\n    niceMin = Math.floor(rmin / spacing) * spacing;\n    niceMax = Math.ceil(rmax / spacing) * spacing;\n  } else {\n    niceMin = rmin;\n    niceMax = rmax;\n  }\n  if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n    numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n    spacing = (max - min) / numSpaces;\n    niceMin = min;\n    niceMax = max;\n  } else if (countDefined) {\n    niceMin = minDefined ? min : niceMin;\n    niceMax = maxDefined ? max : niceMax;\n    numSpaces = count - 1;\n    spacing = (niceMax - niceMin) / numSpaces;\n  } else {\n    numSpaces = (niceMax - niceMin) / spacing;\n    if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n      numSpaces = Math.round(numSpaces);\n    } else {\n      numSpaces = Math.ceil(numSpaces);\n    }\n  }\n  const decimalPlaces = Math.max(\n    _decimalPlaces(spacing),\n    _decimalPlaces(niceMin)\n  );\n  factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n  niceMin = Math.round(niceMin * factor) / factor;\n  niceMax = Math.round(niceMax * factor) / factor;\n  let j = 0;\n  if (minDefined) {\n    if (includeBounds && niceMin !== min) {\n      ticks.push({value: min});\n      if (niceMin < min) {\n        j++;\n      }\n      if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n        j++;\n      }\n    } else if (niceMin < min) {\n      j++;\n    }\n  }\n  for (; j < numSpaces; ++j) {\n    ticks.push({value: Math.round((niceMin + j * spacing) * factor) / factor});\n  }\n  if (maxDefined && includeBounds && niceMax !== max) {\n    if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n      ticks[ticks.length - 1].value = max;\n    } else {\n      ticks.push({value: max});\n    }\n  } else if (!maxDefined || niceMax === max) {\n    ticks.push({value: niceMax});\n  }\n  return ticks;\n}\nfunction relativeLabelSize(value, minSpacing, {horizontal, minRotation}) {\n  const rad = toRadians(minRotation);\n  const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n  const length = 0.75 * minSpacing * ('' + value).length;\n  return Math.min(minSpacing / ratio, length);\n}\nclass LinearScaleBase extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this.start = undefined;\n    this.end = undefined;\n    this._startValue = undefined;\n    this._endValue = undefined;\n    this._valueRange = 0;\n  }\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n      return null;\n    }\n    return +raw;\n  }\n  handleTickRangeOptions() {\n    const {beginAtZero} = this.options;\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this;\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n    if (beginAtZero) {\n      const minSign = sign(min);\n      const maxSign = sign(max);\n      if (minSign < 0 && maxSign < 0) {\n        setMax(0);\n      } else if (minSign > 0 && maxSign > 0) {\n        setMin(0);\n      }\n    }\n    if (min === max) {\n      let offset = 1;\n      if (max >= Number.MAX_SAFE_INTEGER || min <= Number.MIN_SAFE_INTEGER) {\n        offset = Math.abs(max * 0.05);\n      }\n      setMax(max + offset);\n      if (!beginAtZero) {\n        setMin(min - offset);\n      }\n    }\n    this.min = min;\n    this.max = max;\n  }\n  getTickLimit() {\n    const tickOpts = this.options.ticks;\n    let {maxTicksLimit, stepSize} = tickOpts;\n    let maxTicks;\n    if (stepSize) {\n      maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n      if (maxTicks > 1000) {\n        console.warn(`scales.${this.id}.ticks.stepSize: ${stepSize} would result generating up to ${maxTicks} ticks. Limiting to 1000.`);\n        maxTicks = 1000;\n      }\n    } else {\n      maxTicks = this.computeTickLimit();\n      maxTicksLimit = maxTicksLimit || 11;\n    }\n    if (maxTicksLimit) {\n      maxTicks = Math.min(maxTicksLimit, maxTicks);\n    }\n    return maxTicks;\n  }\n  computeTickLimit() {\n    return Number.POSITIVE_INFINITY;\n  }\n  buildTicks() {\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n    let maxTicks = this.getTickLimit();\n    maxTicks = Math.max(2, maxTicks);\n    const numericGeneratorOptions = {\n      maxTicks,\n      bounds: opts.bounds,\n      min: opts.min,\n      max: opts.max,\n      precision: tickOpts.precision,\n      step: tickOpts.stepSize,\n      count: tickOpts.count,\n      maxDigits: this._maxDigits(),\n      horizontal: this.isHorizontal(),\n      minRotation: tickOpts.minRotation || 0,\n      includeBounds: tickOpts.includeBounds !== false\n    };\n    const dataRange = this._range || this;\n    const ticks = generateTicks$1(numericGeneratorOptions, dataRange);\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n    if (opts.reverse) {\n      ticks.reverse();\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n    return ticks;\n  }\n  configure() {\n    const ticks = this.ticks;\n    let start = this.min;\n    let end = this.max;\n    super.configure();\n    if (this.options.offset && ticks.length) {\n      const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n      start -= offset;\n      end += offset;\n    }\n    this._startValue = start;\n    this._endValue = end;\n    this._valueRange = end - start;\n  }\n  getLabelForValue(value) {\n    return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n}\n\nclass LinearScale extends LinearScaleBase {\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n    this.min = isNumberFinite(min) ? min : 0;\n    this.max = isNumberFinite(max) ? max : 1;\n    this.handleTickRangeOptions();\n  }\n  computeTickLimit() {\n    const horizontal = this.isHorizontal();\n    const length = horizontal ? this.width : this.height;\n    const minRotation = toRadians(this.options.ticks.minRotation);\n    const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n    const tickFont = this._resolveTickFontOptions(0);\n    return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n  }\n  getPixelForValue(value) {\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n  getValueForPixel(pixel) {\n    return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n  }\n}\nLinearScale.id = 'linear';\nLinearScale.defaults = {\n  ticks: {\n    callback: Ticks.formatters.numeric\n  }\n};\n\nfunction isMajor(tickVal) {\n  const remain = tickVal / (Math.pow(10, Math.floor(log10(tickVal))));\n  return remain === 1;\n}\nfunction generateTicks(generationOptions, dataRange) {\n  const endExp = Math.floor(log10(dataRange.max));\n  const endSignificand = Math.ceil(dataRange.max / Math.pow(10, endExp));\n  const ticks = [];\n  let tickVal = finiteOrDefault(generationOptions.min, Math.pow(10, Math.floor(log10(dataRange.min))));\n  let exp = Math.floor(log10(tickVal));\n  let significand = Math.floor(tickVal / Math.pow(10, exp));\n  let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n  do {\n    ticks.push({value: tickVal, major: isMajor(tickVal)});\n    ++significand;\n    if (significand === 10) {\n      significand = 1;\n      ++exp;\n      precision = exp >= 0 ? 1 : precision;\n    }\n    tickVal = Math.round(significand * Math.pow(10, exp) * precision) / precision;\n  } while (exp < endExp || (exp === endExp && significand < endSignificand));\n  const lastTick = finiteOrDefault(generationOptions.max, tickVal);\n  ticks.push({value: lastTick, major: isMajor(tickVal)});\n  return ticks;\n}\nclass LogarithmicScale extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this.start = undefined;\n    this.end = undefined;\n    this._startValue = undefined;\n    this._valueRange = 0;\n  }\n  parse(raw, index) {\n    const value = LinearScaleBase.prototype.parse.apply(this, [raw, index]);\n    if (value === 0) {\n      this._zero = true;\n      return undefined;\n    }\n    return isNumberFinite(value) && value > 0 ? value : null;\n  }\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n    this.min = isNumberFinite(min) ? Math.max(0, min) : null;\n    this.max = isNumberFinite(max) ? Math.max(0, max) : null;\n    if (this.options.beginAtZero) {\n      this._zero = true;\n    }\n    this.handleTickRangeOptions();\n  }\n  handleTickRangeOptions() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let min = this.min;\n    let max = this.max;\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n    const exp = (v, m) => Math.pow(10, Math.floor(log10(v)) + m);\n    if (min === max) {\n      if (min <= 0) {\n        setMin(1);\n        setMax(10);\n      } else {\n        setMin(exp(min, -1));\n        setMax(exp(max, +1));\n      }\n    }\n    if (min <= 0) {\n      setMin(exp(max, -1));\n    }\n    if (max <= 0) {\n      setMax(exp(min, +1));\n    }\n    if (this._zero && this.min !== this._suggestedMin && min === exp(this.min, 0)) {\n      setMin(exp(min, -1));\n    }\n    this.min = min;\n    this.max = max;\n  }\n  buildTicks() {\n    const opts = this.options;\n    const generationOptions = {\n      min: this._userMin,\n      max: this._userMax\n    };\n    const ticks = generateTicks(generationOptions, this);\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n    if (opts.reverse) {\n      ticks.reverse();\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n    return ticks;\n  }\n  getLabelForValue(value) {\n    return value === undefined\n      ? '0'\n      : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n  configure() {\n    const start = this.min;\n    super.configure();\n    this._startValue = log10(start);\n    this._valueRange = log10(this.max) - log10(start);\n  }\n  getPixelForValue(value) {\n    if (value === undefined || value === 0) {\n      value = this.min;\n    }\n    if (value === null || isNaN(value)) {\n      return NaN;\n    }\n    return this.getPixelForDecimal(value === this.min\n      ? 0\n      : (log10(value) - this._startValue) / this._valueRange);\n  }\n  getValueForPixel(pixel) {\n    const decimal = this.getDecimalForPixel(pixel);\n    return Math.pow(10, this._startValue + decimal * this._valueRange);\n  }\n}\nLogarithmicScale.id = 'logarithmic';\nLogarithmicScale.defaults = {\n  ticks: {\n    callback: Ticks.formatters.logarithmic,\n    major: {\n      enabled: true\n    }\n  }\n};\n\nfunction getTickBackdropHeight(opts) {\n  const tickOpts = opts.ticks;\n  if (tickOpts.display && opts.display) {\n    const padding = toPadding(tickOpts.backdropPadding);\n    return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n  }\n  return 0;\n}\nfunction measureLabelSize(ctx, font, label) {\n  label = isArray(label) ? label : [label];\n  return {\n    w: _longestText(ctx, font.string, label),\n    h: label.length * font.lineHeight\n  };\n}\nfunction determineLimits(angle, pos, size, min, max) {\n  if (angle === min || angle === max) {\n    return {\n      start: pos - (size / 2),\n      end: pos + (size / 2)\n    };\n  } else if (angle < min || angle > max) {\n    return {\n      start: pos - size,\n      end: pos\n    };\n  }\n  return {\n    start: pos,\n    end: pos + size\n  };\n}\nfunction fitWithPointLabels(scale) {\n  const orig = {\n    l: scale.left + scale._padding.left,\n    r: scale.right - scale._padding.right,\n    t: scale.top + scale._padding.top,\n    b: scale.bottom - scale._padding.bottom\n  };\n  const limits = Object.assign({}, orig);\n  const labelSizes = [];\n  const padding = [];\n  const valueCount = scale._pointLabels.length;\n  const pointLabelOpts = scale.options.pointLabels;\n  const additionalAngle = pointLabelOpts.centerPointLabels ? PI / valueCount : 0;\n  for (let i = 0; i < valueCount; i++) {\n    const opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\n    padding[i] = opts.padding;\n    const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\n    const plFont = toFont(opts.font);\n    const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n    labelSizes[i] = textSize;\n    const angleRadians = _normalizeAngle(scale.getIndexAngle(i) + additionalAngle);\n    const angle = Math.round(toDegrees(angleRadians));\n    const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n    const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n    updateLimits(limits, orig, angleRadians, hLimits, vLimits);\n  }\n  scale.setCenterPoint(\n    orig.l - limits.l,\n    limits.r - orig.r,\n    orig.t - limits.t,\n    limits.b - orig.b\n  );\n  scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\nfunction updateLimits(limits, orig, angle, hLimits, vLimits) {\n  const sin = Math.abs(Math.sin(angle));\n  const cos = Math.abs(Math.cos(angle));\n  let x = 0;\n  let y = 0;\n  if (hLimits.start < orig.l) {\n    x = (orig.l - hLimits.start) / sin;\n    limits.l = Math.min(limits.l, orig.l - x);\n  } else if (hLimits.end > orig.r) {\n    x = (hLimits.end - orig.r) / sin;\n    limits.r = Math.max(limits.r, orig.r + x);\n  }\n  if (vLimits.start < orig.t) {\n    y = (orig.t - vLimits.start) / cos;\n    limits.t = Math.min(limits.t, orig.t - y);\n  } else if (vLimits.end > orig.b) {\n    y = (vLimits.end - orig.b) / cos;\n    limits.b = Math.max(limits.b, orig.b + y);\n  }\n}\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n  const items = [];\n  const valueCount = scale._pointLabels.length;\n  const opts = scale.options;\n  const extra = getTickBackdropHeight(opts) / 2;\n  const outerDistance = scale.drawingArea;\n  const additionalAngle = opts.pointLabels.centerPointLabels ? PI / valueCount : 0;\n  for (let i = 0; i < valueCount; i++) {\n    const pointLabelPosition = scale.getPointPosition(i, outerDistance + extra + padding[i], additionalAngle);\n    const angle = Math.round(toDegrees(_normalizeAngle(pointLabelPosition.angle + HALF_PI)));\n    const size = labelSizes[i];\n    const y = yForAngle(pointLabelPosition.y, size.h, angle);\n    const textAlign = getTextAlignForAngle(angle);\n    const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n    items.push({\n      x: pointLabelPosition.x,\n      y,\n      textAlign,\n      left,\n      top: y,\n      right: left + size.w,\n      bottom: y + size.h\n    });\n  }\n  return items;\n}\nfunction getTextAlignForAngle(angle) {\n  if (angle === 0 || angle === 180) {\n    return 'center';\n  } else if (angle < 180) {\n    return 'left';\n  }\n  return 'right';\n}\nfunction leftForTextAlign(x, w, align) {\n  if (align === 'right') {\n    x -= w;\n  } else if (align === 'center') {\n    x -= (w / 2);\n  }\n  return x;\n}\nfunction yForAngle(y, h, angle) {\n  if (angle === 90 || angle === 270) {\n    y -= (h / 2);\n  } else if (angle > 270 || angle < 90) {\n    y -= h;\n  }\n  return y;\n}\nfunction drawPointLabels(scale, labelCount) {\n  const {ctx, options: {pointLabels}} = scale;\n  for (let i = labelCount - 1; i >= 0; i--) {\n    const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n    const plFont = toFont(optsAtIndex.font);\n    const {x, y, textAlign, left, top, right, bottom} = scale._pointLabelItems[i];\n    const {backdropColor} = optsAtIndex;\n    if (!isNullOrUndef(backdropColor)) {\n      const padding = toPadding(optsAtIndex.backdropPadding);\n      ctx.fillStyle = backdropColor;\n      ctx.fillRect(left - padding.left, top - padding.top, right - left + padding.width, bottom - top + padding.height);\n    }\n    renderText(\n      ctx,\n      scale._pointLabels[i],\n      x,\n      y + (plFont.lineHeight / 2),\n      plFont,\n      {\n        color: optsAtIndex.color,\n        textAlign: textAlign,\n        textBaseline: 'middle'\n      }\n    );\n  }\n}\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n  const {ctx} = scale;\n  if (circular) {\n    ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n  } else {\n    let pointPosition = scale.getPointPosition(0, radius);\n    ctx.moveTo(pointPosition.x, pointPosition.y);\n    for (let i = 1; i < labelCount; i++) {\n      pointPosition = scale.getPointPosition(i, radius);\n      ctx.lineTo(pointPosition.x, pointPosition.y);\n    }\n  }\n}\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount) {\n  const ctx = scale.ctx;\n  const circular = gridLineOpts.circular;\n  const {color, lineWidth} = gridLineOpts;\n  if ((!circular && !labelCount) || !color || !lineWidth || radius < 0) {\n    return;\n  }\n  ctx.save();\n  ctx.strokeStyle = color;\n  ctx.lineWidth = lineWidth;\n  ctx.setLineDash(gridLineOpts.borderDash);\n  ctx.lineDashOffset = gridLineOpts.borderDashOffset;\n  ctx.beginPath();\n  pathRadiusLine(scale, radius, circular, labelCount);\n  ctx.closePath();\n  ctx.stroke();\n  ctx.restore();\n}\nfunction createPointLabelContext(parent, index, label) {\n  return createContext(parent, {\n    label,\n    index,\n    type: 'pointLabel'\n  });\n}\nclass RadialLinearScale extends LinearScaleBase {\n  constructor(cfg) {\n    super(cfg);\n    this.xCenter = undefined;\n    this.yCenter = undefined;\n    this.drawingArea = undefined;\n    this._pointLabels = [];\n    this._pointLabelItems = [];\n  }\n  setDimensions() {\n    const padding = this._padding = toPadding(getTickBackdropHeight(this.options) / 2);\n    const w = this.width = this.maxWidth - padding.width;\n    const h = this.height = this.maxHeight - padding.height;\n    this.xCenter = Math.floor(this.left + w / 2 + padding.left);\n    this.yCenter = Math.floor(this.top + h / 2 + padding.top);\n    this.drawingArea = Math.floor(Math.min(w, h) / 2);\n  }\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(false);\n    this.min = isNumberFinite(min) && !isNaN(min) ? min : 0;\n    this.max = isNumberFinite(max) && !isNaN(max) ? max : 0;\n    this.handleTickRangeOptions();\n  }\n  computeTickLimit() {\n    return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n  }\n  generateTickLabels(ticks) {\n    LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n    this._pointLabels = this.getLabels()\n      .map((value, index) => {\n        const label = callback(this.options.pointLabels.callback, [value, index], this);\n        return label || label === 0 ? label : '';\n      })\n      .filter((v, i) => this.chart.getDataVisibility(i));\n  }\n  fit() {\n    const opts = this.options;\n    if (opts.display && opts.pointLabels.display) {\n      fitWithPointLabels(this);\n    } else {\n      this.setCenterPoint(0, 0, 0, 0);\n    }\n  }\n  setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n    this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\n    this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\n    this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\n  }\n  getIndexAngle(index) {\n    const angleMultiplier = TAU / (this._pointLabels.length || 1);\n    const startAngle = this.options.startAngle || 0;\n    return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n  }\n  getDistanceFromCenterForValue(value) {\n    if (isNullOrUndef(value)) {\n      return NaN;\n    }\n    const scalingFactor = this.drawingArea / (this.max - this.min);\n    if (this.options.reverse) {\n      return (this.max - value) * scalingFactor;\n    }\n    return (value - this.min) * scalingFactor;\n  }\n  getValueForDistanceFromCenter(distance) {\n    if (isNullOrUndef(distance)) {\n      return NaN;\n    }\n    const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n    return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n  }\n  getPointLabelContext(index) {\n    const pointLabels = this._pointLabels || [];\n    if (index >= 0 && index < pointLabels.length) {\n      const pointLabel = pointLabels[index];\n      return createPointLabelContext(this.getContext(), index, pointLabel);\n    }\n  }\n  getPointPosition(index, distanceFromCenter, additionalAngle = 0) {\n    const angle = this.getIndexAngle(index) - HALF_PI + additionalAngle;\n    return {\n      x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n      y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n      angle\n    };\n  }\n  getPointPositionForValue(index, value) {\n    return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n  }\n  getBasePosition(index) {\n    return this.getPointPositionForValue(index || 0, this.getBaseValue());\n  }\n  getPointLabelPosition(index) {\n    const {left, top, right, bottom} = this._pointLabelItems[index];\n    return {\n      left,\n      top,\n      right,\n      bottom,\n    };\n  }\n  drawBackground() {\n    const {backgroundColor, grid: {circular}} = this.options;\n    if (backgroundColor) {\n      const ctx = this.ctx;\n      ctx.save();\n      ctx.beginPath();\n      pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\n      ctx.closePath();\n      ctx.fillStyle = backgroundColor;\n      ctx.fill();\n      ctx.restore();\n    }\n  }\n  drawGrid() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const {angleLines, grid} = opts;\n    const labelCount = this._pointLabels.length;\n    let i, offset, position;\n    if (opts.pointLabels.display) {\n      drawPointLabels(this, labelCount);\n    }\n    if (grid.display) {\n      this.ticks.forEach((tick, index) => {\n        if (index !== 0) {\n          offset = this.getDistanceFromCenterForValue(tick.value);\n          const optsAtIndex = grid.setContext(this.getContext(index - 1));\n          drawRadiusLine(this, optsAtIndex, offset, labelCount);\n        }\n      });\n    }\n    if (angleLines.display) {\n      ctx.save();\n      for (i = labelCount - 1; i >= 0; i--) {\n        const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n        const {color, lineWidth} = optsAtIndex;\n        if (!lineWidth || !color) {\n          continue;\n        }\n        ctx.lineWidth = lineWidth;\n        ctx.strokeStyle = color;\n        ctx.setLineDash(optsAtIndex.borderDash);\n        ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n        offset = this.getDistanceFromCenterForValue(opts.ticks.reverse ? this.min : this.max);\n        position = this.getPointPosition(i, offset);\n        ctx.beginPath();\n        ctx.moveTo(this.xCenter, this.yCenter);\n        ctx.lineTo(position.x, position.y);\n        ctx.stroke();\n      }\n      ctx.restore();\n    }\n  }\n  drawBorder() {}\n  drawLabels() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n    if (!tickOpts.display) {\n      return;\n    }\n    const startAngle = this.getIndexAngle(0);\n    let offset, width;\n    ctx.save();\n    ctx.translate(this.xCenter, this.yCenter);\n    ctx.rotate(startAngle);\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n    this.ticks.forEach((tick, index) => {\n      if (index === 0 && !opts.reverse) {\n        return;\n      }\n      const optsAtIndex = tickOpts.setContext(this.getContext(index));\n      const tickFont = toFont(optsAtIndex.font);\n      offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\n      if (optsAtIndex.showLabelBackdrop) {\n        ctx.font = tickFont.string;\n        width = ctx.measureText(tick.label).width;\n        ctx.fillStyle = optsAtIndex.backdropColor;\n        const padding = toPadding(optsAtIndex.backdropPadding);\n        ctx.fillRect(\n          -width / 2 - padding.left,\n          -offset - tickFont.size / 2 - padding.top,\n          width + padding.width,\n          tickFont.size + padding.height\n        );\n      }\n      renderText(ctx, tick.label, 0, -offset, tickFont, {\n        color: optsAtIndex.color,\n      });\n    });\n    ctx.restore();\n  }\n  drawTitle() {}\n}\nRadialLinearScale.id = 'radialLinear';\nRadialLinearScale.defaults = {\n  display: true,\n  animate: true,\n  position: 'chartArea',\n  angleLines: {\n    display: true,\n    lineWidth: 1,\n    borderDash: [],\n    borderDashOffset: 0.0\n  },\n  grid: {\n    circular: false\n  },\n  startAngle: 0,\n  ticks: {\n    showLabelBackdrop: true,\n    callback: Ticks.formatters.numeric\n  },\n  pointLabels: {\n    backdropColor: undefined,\n    backdropPadding: 2,\n    display: true,\n    font: {\n      size: 10\n    },\n    callback(label) {\n      return label;\n    },\n    padding: 5,\n    centerPointLabels: false\n  }\n};\nRadialLinearScale.defaultRoutes = {\n  'angleLines.color': 'borderColor',\n  'pointLabels.color': 'color',\n  'ticks.color': 'color'\n};\nRadialLinearScale.descriptors = {\n  angleLines: {\n    _fallback: 'grid'\n  }\n};\n\nconst INTERVALS = {\n  millisecond: {common: true, size: 1, steps: 1000},\n  second: {common: true, size: 1000, steps: 60},\n  minute: {common: true, size: 60000, steps: 60},\n  hour: {common: true, size: 3600000, steps: 24},\n  day: {common: true, size: 86400000, steps: 30},\n  week: {common: false, size: 604800000, steps: 4},\n  month: {common: true, size: 2.628e9, steps: 12},\n  quarter: {common: false, size: 7.884e9, steps: 4},\n  year: {common: true, size: 3.154e10}\n};\nconst UNITS = (Object.keys(INTERVALS));\nfunction sorter(a, b) {\n  return a - b;\n}\nfunction parse(scale, input) {\n  if (isNullOrUndef(input)) {\n    return null;\n  }\n  const adapter = scale._adapter;\n  const {parser, round, isoWeekday} = scale._parseOpts;\n  let value = input;\n  if (typeof parser === 'function') {\n    value = parser(value);\n  }\n  if (!isNumberFinite(value)) {\n    value = typeof parser === 'string'\n      ? adapter.parse(value, parser)\n      : adapter.parse(value);\n  }\n  if (value === null) {\n    return null;\n  }\n  if (round) {\n    value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true)\n      ? adapter.startOf(value, 'isoWeek', isoWeekday)\n      : adapter.startOf(value, round);\n  }\n  return +value;\n}\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\n  const ilen = UNITS.length;\n  for (let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n    const interval = INTERVALS[UNITS[i]];\n    const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n    if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n      return UNITS[i];\n    }\n  }\n  return UNITS[ilen - 1];\n}\nfunction determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n  for (let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--) {\n    const unit = UNITS[i];\n    if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n      return unit;\n    }\n  }\n  return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\nfunction determineMajorUnit(unit) {\n  for (let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n    if (INTERVALS[UNITS[i]].common) {\n      return UNITS[i];\n    }\n  }\n}\nfunction addTick(ticks, time, timestamps) {\n  if (!timestamps) {\n    ticks[time] = true;\n  } else if (timestamps.length) {\n    const {lo, hi} = _lookup(timestamps, time);\n    const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n    ticks[timestamp] = true;\n  }\n}\nfunction setMajorTicks(scale, ticks, map, majorUnit) {\n  const adapter = scale._adapter;\n  const first = +adapter.startOf(ticks[0].value, majorUnit);\n  const last = ticks[ticks.length - 1].value;\n  let major, index;\n  for (major = first; major <= last; major = +adapter.add(major, 1, majorUnit)) {\n    index = map[major];\n    if (index >= 0) {\n      ticks[index].major = true;\n    }\n  }\n  return ticks;\n}\nfunction ticksFromTimestamps(scale, values, majorUnit) {\n  const ticks = [];\n  const map = {};\n  const ilen = values.length;\n  let i, value;\n  for (i = 0; i < ilen; ++i) {\n    value = values[i];\n    map[value] = i;\n    ticks.push({\n      value,\n      major: false\n    });\n  }\n  return (ilen === 0 || !majorUnit) ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\nclass TimeScale extends Scale {\n  constructor(props) {\n    super(props);\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n    this._unit = 'day';\n    this._majorUnit = undefined;\n    this._offsets = {};\n    this._normalized = false;\n    this._parseOpts = undefined;\n  }\n  init(scaleOpts, opts) {\n    const time = scaleOpts.time || (scaleOpts.time = {});\n    const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n    mergeIf(time.displayFormats, adapter.formats());\n    this._parseOpts = {\n      parser: time.parser,\n      round: time.round,\n      isoWeekday: time.isoWeekday\n    };\n    super.init(scaleOpts);\n    this._normalized = opts.normalized;\n  }\n  parse(raw, index) {\n    if (raw === undefined) {\n      return null;\n    }\n    return parse(this, raw);\n  }\n  beforeLayout() {\n    super.beforeLayout();\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n  }\n  determineDataLimits() {\n    const options = this.options;\n    const adapter = this._adapter;\n    const unit = options.time.unit || 'day';\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n    function _applyBounds(bounds) {\n      if (!minDefined && !isNaN(bounds.min)) {\n        min = Math.min(min, bounds.min);\n      }\n      if (!maxDefined && !isNaN(bounds.max)) {\n        max = Math.max(max, bounds.max);\n      }\n    }\n    if (!minDefined || !maxDefined) {\n      _applyBounds(this._getLabelBounds());\n      if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n        _applyBounds(this.getMinMax(false));\n      }\n    }\n    min = isNumberFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n    max = isNumberFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n    this.min = Math.min(min, max - 1);\n    this.max = Math.max(min + 1, max);\n  }\n  _getLabelBounds() {\n    const arr = this.getLabelTimestamps();\n    let min = Number.POSITIVE_INFINITY;\n    let max = Number.NEGATIVE_INFINITY;\n    if (arr.length) {\n      min = arr[0];\n      max = arr[arr.length - 1];\n    }\n    return {min, max};\n  }\n  buildTicks() {\n    const options = this.options;\n    const timeOpts = options.time;\n    const tickOpts = options.ticks;\n    const timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n    if (options.bounds === 'ticks' && timestamps.length) {\n      this.min = this._userMin || timestamps[0];\n      this.max = this._userMax || timestamps[timestamps.length - 1];\n    }\n    const min = this.min;\n    const max = this.max;\n    const ticks = _filterBetween(timestamps, min, max);\n    this._unit = timeOpts.unit || (tickOpts.autoSkip\n      ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min))\n      : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n    this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined\n      : determineMajorUnit(this._unit);\n    this.initOffsets(timestamps);\n    if (options.reverse) {\n      ticks.reverse();\n    }\n    return ticksFromTimestamps(this, ticks, this._majorUnit);\n  }\n  initOffsets(timestamps) {\n    let start = 0;\n    let end = 0;\n    let first, last;\n    if (this.options.offset && timestamps.length) {\n      first = this.getDecimalForValue(timestamps[0]);\n      if (timestamps.length === 1) {\n        start = 1 - first;\n      } else {\n        start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n      }\n      last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n      if (timestamps.length === 1) {\n        end = last;\n      } else {\n        end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n      }\n    }\n    const limit = timestamps.length < 3 ? 0.5 : 0.25;\n    start = _limitValue(start, 0, limit);\n    end = _limitValue(end, 0, limit);\n    this._offsets = {start, end, factor: 1 / (start + 1 + end)};\n  }\n  _generate() {\n    const adapter = this._adapter;\n    const min = this.min;\n    const max = this.max;\n    const options = this.options;\n    const timeOpts = options.time;\n    const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n    const stepSize = valueOrDefault(timeOpts.stepSize, 1);\n    const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n    const hasWeekday = isNumber(weekday) || weekday === true;\n    const ticks = {};\n    let first = min;\n    let time, count;\n    if (hasWeekday) {\n      first = +adapter.startOf(first, 'isoWeek', weekday);\n    }\n    first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n    if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n      throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n    }\n    const timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n    for (time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++) {\n      addTick(ticks, time, timestamps);\n    }\n    if (time === max || options.bounds === 'ticks' || count === 1) {\n      addTick(ticks, time, timestamps);\n    }\n    return Object.keys(ticks).sort((a, b) => a - b).map(x => +x);\n  }\n  getLabelForValue(value) {\n    const adapter = this._adapter;\n    const timeOpts = this.options.time;\n    if (timeOpts.tooltipFormat) {\n      return adapter.format(value, timeOpts.tooltipFormat);\n    }\n    return adapter.format(value, timeOpts.displayFormats.datetime);\n  }\n  _tickFormatFunction(time, index, ticks, format) {\n    const options = this.options;\n    const formats = options.time.displayFormats;\n    const unit = this._unit;\n    const majorUnit = this._majorUnit;\n    const minorFormat = unit && formats[unit];\n    const majorFormat = majorUnit && formats[majorUnit];\n    const tick = ticks[index];\n    const major = majorUnit && majorFormat && tick && tick.major;\n    const label = this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n    const formatter = options.ticks.callback;\n    return formatter ? callback(formatter, [label, index, ticks], this) : label;\n  }\n  generateTickLabels(ticks) {\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      tick.label = this._tickFormatFunction(tick.value, i, ticks);\n    }\n  }\n  getDecimalForValue(value) {\n    return value === null ? NaN : (value - this.min) / (this.max - this.min);\n  }\n  getPixelForValue(value) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForValue(value);\n    return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n  }\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return this.min + pos * (this.max - this.min);\n  }\n  _getLabelSize(label) {\n    const ticksOpts = this.options.ticks;\n    const tickLabelWidth = this.ctx.measureText(label).width;\n    const angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n    const cosRotation = Math.cos(angle);\n    const sinRotation = Math.sin(angle);\n    const tickFontSize = this._resolveTickFontOptions(0).size;\n    return {\n      w: (tickLabelWidth * cosRotation) + (tickFontSize * sinRotation),\n      h: (tickLabelWidth * sinRotation) + (tickFontSize * cosRotation)\n    };\n  }\n  _getLabelCapacity(exampleTime) {\n    const timeOpts = this.options.time;\n    const displayFormats = timeOpts.displayFormats;\n    const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n    const exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [exampleTime], this._majorUnit), format);\n    const size = this._getLabelSize(exampleLabel);\n    const capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n    return capacity > 0 ? capacity : 1;\n  }\n  getDataTimestamps() {\n    let timestamps = this._cache.data || [];\n    let i, ilen;\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const metas = this.getMatchingVisibleMetas();\n    if (this._normalized && metas.length) {\n      return (this._cache.data = metas[0].controller.getAllParsedValues(this));\n    }\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n    }\n    return (this._cache.data = this.normalize(timestamps));\n  }\n  getLabelTimestamps() {\n    const timestamps = this._cache.labels || [];\n    let i, ilen;\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const labels = this.getLabels();\n    for (i = 0, ilen = labels.length; i < ilen; ++i) {\n      timestamps.push(parse(this, labels[i]));\n    }\n    return (this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps));\n  }\n  normalize(values) {\n    return _arrayUnique(values.sort(sorter));\n  }\n}\nTimeScale.id = 'time';\nTimeScale.defaults = {\n  bounds: 'data',\n  adapters: {},\n  time: {\n    parser: false,\n    unit: false,\n    round: false,\n    isoWeekday: false,\n    minUnit: 'millisecond',\n    displayFormats: {}\n  },\n  ticks: {\n    source: 'auto',\n    major: {\n      enabled: false\n    }\n  }\n};\n\nfunction interpolate(table, val, reverse) {\n  let lo = 0;\n  let hi = table.length - 1;\n  let prevSource, nextSource, prevTarget, nextTarget;\n  if (reverse) {\n    if (val >= table[lo].pos && val <= table[hi].pos) {\n      ({lo, hi} = _lookupByKey(table, 'pos', val));\n    }\n    ({pos: prevSource, time: prevTarget} = table[lo]);\n    ({pos: nextSource, time: nextTarget} = table[hi]);\n  } else {\n    if (val >= table[lo].time && val <= table[hi].time) {\n      ({lo, hi} = _lookupByKey(table, 'time', val));\n    }\n    ({time: prevSource, pos: prevTarget} = table[lo]);\n    ({time: nextSource, pos: nextTarget} = table[hi]);\n  }\n  const span = nextSource - prevSource;\n  return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\nclass TimeSeriesScale extends TimeScale {\n  constructor(props) {\n    super(props);\n    this._table = [];\n    this._minPos = undefined;\n    this._tableRange = undefined;\n  }\n  initOffsets() {\n    const timestamps = this._getTimestampsForTable();\n    const table = this._table = this.buildLookupTable(timestamps);\n    this._minPos = interpolate(table, this.min);\n    this._tableRange = interpolate(table, this.max) - this._minPos;\n    super.initOffsets(timestamps);\n  }\n  buildLookupTable(timestamps) {\n    const {min, max} = this;\n    const items = [];\n    const table = [];\n    let i, ilen, prev, curr, next;\n    for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n      curr = timestamps[i];\n      if (curr >= min && curr <= max) {\n        items.push(curr);\n      }\n    }\n    if (items.length < 2) {\n      return [\n        {time: min, pos: 0},\n        {time: max, pos: 1}\n      ];\n    }\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      next = items[i + 1];\n      prev = items[i - 1];\n      curr = items[i];\n      if (Math.round((next + prev) / 2) !== curr) {\n        table.push({time: curr, pos: i / (ilen - 1)});\n      }\n    }\n    return table;\n  }\n  _getTimestampsForTable() {\n    let timestamps = this._cache.all || [];\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const data = this.getDataTimestamps();\n    const label = this.getLabelTimestamps();\n    if (data.length && label.length) {\n      timestamps = this.normalize(data.concat(label));\n    } else {\n      timestamps = data.length ? data : label;\n    }\n    timestamps = this._cache.all = timestamps;\n    return timestamps;\n  }\n  getDecimalForValue(value) {\n    return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n  }\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return interpolate(this._table, decimal * this._tableRange + this._minPos, true);\n  }\n}\nTimeSeriesScale.id = 'timeseries';\nTimeSeriesScale.defaults = TimeScale.defaults;\n\nvar scales = /*#__PURE__*/Object.freeze({\n__proto__: null,\nCategoryScale: CategoryScale,\nLinearScale: LinearScale,\nLogarithmicScale: LogarithmicScale,\nRadialLinearScale: RadialLinearScale,\nTimeScale: TimeScale,\nTimeSeriesScale: TimeSeriesScale\n});\n\nconst registerables = [\n  controllers,\n  elements,\n  plugins,\n  scales,\n];\n\nexport { Animation, Animations, ArcElement, BarController, BarElement, BasePlatform, BasicPlatform, BubbleController, CategoryScale, Chart, DatasetController, plugin_decimation as Decimation, DomPlatform, DoughnutController, Element, plugin_filler as Filler, Interaction, plugin_legend as Legend, LineController, LineElement, LinearScale, LogarithmicScale, PieController, PointElement, PolarAreaController, RadarController, RadialLinearScale, Scale, ScatterController, plugin_subtitle as SubTitle, Ticks, TimeScale, TimeSeriesScale, plugin_title as Title, plugin_tooltip as Tooltip, adapters as _adapters, _detectPlatform, animator, controllers, elements, layouts, plugins, registerables, registry, scales };\n","/*!\n * Chart.js v3.7.0\n * https://www.chartjs.org\n * (c) 2021 Chart.js Contributors\n * Released under the MIT License\n */\nfunction fontString(pixelSize, fontStyle, fontFamily) {\n  return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n}\nconst requestAnimFrame = (function() {\n  if (typeof window === 'undefined') {\n    return function(callback) {\n      return callback();\n    };\n  }\n  return window.requestAnimationFrame;\n}());\nfunction throttled(fn, thisArg, updateFn) {\n  const updateArgs = updateFn || ((args) => Array.prototype.slice.call(args));\n  let ticking = false;\n  let args = [];\n  return function(...rest) {\n    args = updateArgs(rest);\n    if (!ticking) {\n      ticking = true;\n      requestAnimFrame.call(window, () => {\n        ticking = false;\n        fn.apply(thisArg, args);\n      });\n    }\n  };\n}\nfunction debounce(fn, delay) {\n  let timeout;\n  return function(...args) {\n    if (delay) {\n      clearTimeout(timeout);\n      timeout = setTimeout(fn, delay, args);\n    } else {\n      fn.apply(this, args);\n    }\n    return delay;\n  };\n}\nconst _toLeftRightCenter = (align) => align === 'start' ? 'left' : align === 'end' ? 'right' : 'center';\nconst _alignStartEnd = (align, start, end) => align === 'start' ? start : align === 'end' ? end : (start + end) / 2;\nconst _textX = (align, left, right, rtl) => {\n  const check = rtl ? 'left' : 'right';\n  return align === check ? right : align === 'center' ? (left + right) / 2 : left;\n};\n\nfunction noop() {}\nconst uid = (function() {\n  let id = 0;\n  return function() {\n    return id++;\n  };\n}());\nfunction isNullOrUndef(value) {\n  return value === null || typeof value === 'undefined';\n}\nfunction isArray(value) {\n  if (Array.isArray && Array.isArray(value)) {\n    return true;\n  }\n  const type = Object.prototype.toString.call(value);\n  if (type.substr(0, 7) === '[object' && type.substr(-6) === 'Array]') {\n    return true;\n  }\n  return false;\n}\nfunction isObject(value) {\n  return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n}\nconst isNumberFinite = (value) => (typeof value === 'number' || value instanceof Number) && isFinite(+value);\nfunction finiteOrDefault(value, defaultValue) {\n  return isNumberFinite(value) ? value : defaultValue;\n}\nfunction valueOrDefault(value, defaultValue) {\n  return typeof value === 'undefined' ? defaultValue : value;\n}\nconst toPercentage = (value, dimension) =>\n  typeof value === 'string' && value.endsWith('%') ?\n    parseFloat(value) / 100\n    : value / dimension;\nconst toDimension = (value, dimension) =>\n  typeof value === 'string' && value.endsWith('%') ?\n    parseFloat(value) / 100 * dimension\n    : +value;\nfunction callback(fn, args, thisArg) {\n  if (fn && typeof fn.call === 'function') {\n    return fn.apply(thisArg, args);\n  }\n}\nfunction each(loopable, fn, thisArg, reverse) {\n  let i, len, keys;\n  if (isArray(loopable)) {\n    len = loopable.length;\n    if (reverse) {\n      for (i = len - 1; i >= 0; i--) {\n        fn.call(thisArg, loopable[i], i);\n      }\n    } else {\n      for (i = 0; i < len; i++) {\n        fn.call(thisArg, loopable[i], i);\n      }\n    }\n  } else if (isObject(loopable)) {\n    keys = Object.keys(loopable);\n    len = keys.length;\n    for (i = 0; i < len; i++) {\n      fn.call(thisArg, loopable[keys[i]], keys[i]);\n    }\n  }\n}\nfunction _elementsEqual(a0, a1) {\n  let i, ilen, v0, v1;\n  if (!a0 || !a1 || a0.length !== a1.length) {\n    return false;\n  }\n  for (i = 0, ilen = a0.length; i < ilen; ++i) {\n    v0 = a0[i];\n    v1 = a1[i];\n    if (v0.datasetIndex !== v1.datasetIndex || v0.index !== v1.index) {\n      return false;\n    }\n  }\n  return true;\n}\nfunction clone$1(source) {\n  if (isArray(source)) {\n    return source.map(clone$1);\n  }\n  if (isObject(source)) {\n    const target = Object.create(null);\n    const keys = Object.keys(source);\n    const klen = keys.length;\n    let k = 0;\n    for (; k < klen; ++k) {\n      target[keys[k]] = clone$1(source[keys[k]]);\n    }\n    return target;\n  }\n  return source;\n}\nfunction isValidKey(key) {\n  return ['__proto__', 'prototype', 'constructor'].indexOf(key) === -1;\n}\nfunction _merger(key, target, source, options) {\n  if (!isValidKey(key)) {\n    return;\n  }\n  const tval = target[key];\n  const sval = source[key];\n  if (isObject(tval) && isObject(sval)) {\n    merge(tval, sval, options);\n  } else {\n    target[key] = clone$1(sval);\n  }\n}\nfunction merge(target, source, options) {\n  const sources = isArray(source) ? source : [source];\n  const ilen = sources.length;\n  if (!isObject(target)) {\n    return target;\n  }\n  options = options || {};\n  const merger = options.merger || _merger;\n  for (let i = 0; i < ilen; ++i) {\n    source = sources[i];\n    if (!isObject(source)) {\n      continue;\n    }\n    const keys = Object.keys(source);\n    for (let k = 0, klen = keys.length; k < klen; ++k) {\n      merger(keys[k], target, source, options);\n    }\n  }\n  return target;\n}\nfunction mergeIf(target, source) {\n  return merge(target, source, {merger: _mergerIf});\n}\nfunction _mergerIf(key, target, source) {\n  if (!isValidKey(key)) {\n    return;\n  }\n  const tval = target[key];\n  const sval = source[key];\n  if (isObject(tval) && isObject(sval)) {\n    mergeIf(tval, sval);\n  } else if (!Object.prototype.hasOwnProperty.call(target, key)) {\n    target[key] = clone$1(sval);\n  }\n}\nfunction _deprecated(scope, value, previous, current) {\n  if (value !== undefined) {\n    console.warn(scope + ': \"' + previous +\n\t\t\t'\" is deprecated. Please use \"' + current + '\" instead');\n  }\n}\nconst emptyString = '';\nconst dot = '.';\nfunction indexOfDotOrLength(key, start) {\n  const idx = key.indexOf(dot, start);\n  return idx === -1 ? key.length : idx;\n}\nfunction resolveObjectKey(obj, key) {\n  if (key === emptyString) {\n    return obj;\n  }\n  let pos = 0;\n  let idx = indexOfDotOrLength(key, pos);\n  while (obj && idx > pos) {\n    obj = obj[key.substr(pos, idx - pos)];\n    pos = idx + 1;\n    idx = indexOfDotOrLength(key, pos);\n  }\n  return obj;\n}\nfunction _capitalize(str) {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n}\nconst defined = (value) => typeof value !== 'undefined';\nconst isFunction = (value) => typeof value === 'function';\nconst setsEqual = (a, b) => {\n  if (a.size !== b.size) {\n    return false;\n  }\n  for (const item of a) {\n    if (!b.has(item)) {\n      return false;\n    }\n  }\n  return true;\n};\nfunction _isClickEvent(e) {\n  return e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu';\n}\n\nconst PI = Math.PI;\nconst TAU = 2 * PI;\nconst PITAU = TAU + PI;\nconst INFINITY = Number.POSITIVE_INFINITY;\nconst RAD_PER_DEG = PI / 180;\nconst HALF_PI = PI / 2;\nconst QUARTER_PI = PI / 4;\nconst TWO_THIRDS_PI = PI * 2 / 3;\nconst log10 = Math.log10;\nconst sign = Math.sign;\nfunction niceNum(range) {\n  const roundedRange = Math.round(range);\n  range = almostEquals(range, roundedRange, range / 1000) ? roundedRange : range;\n  const niceRange = Math.pow(10, Math.floor(log10(range)));\n  const fraction = range / niceRange;\n  const niceFraction = fraction <= 1 ? 1 : fraction <= 2 ? 2 : fraction <= 5 ? 5 : 10;\n  return niceFraction * niceRange;\n}\nfunction _factorize(value) {\n  const result = [];\n  const sqrt = Math.sqrt(value);\n  let i;\n  for (i = 1; i < sqrt; i++) {\n    if (value % i === 0) {\n      result.push(i);\n      result.push(value / i);\n    }\n  }\n  if (sqrt === (sqrt | 0)) {\n    result.push(sqrt);\n  }\n  result.sort((a, b) => a - b).pop();\n  return result;\n}\nfunction isNumber(n) {\n  return !isNaN(parseFloat(n)) && isFinite(n);\n}\nfunction almostEquals(x, y, epsilon) {\n  return Math.abs(x - y) < epsilon;\n}\nfunction almostWhole(x, epsilon) {\n  const rounded = Math.round(x);\n  return ((rounded - epsilon) <= x) && ((rounded + epsilon) >= x);\n}\nfunction _setMinAndMaxByKey(array, target, property) {\n  let i, ilen, value;\n  for (i = 0, ilen = array.length; i < ilen; i++) {\n    value = array[i][property];\n    if (!isNaN(value)) {\n      target.min = Math.min(target.min, value);\n      target.max = Math.max(target.max, value);\n    }\n  }\n}\nfunction toRadians(degrees) {\n  return degrees * (PI / 180);\n}\nfunction toDegrees(radians) {\n  return radians * (180 / PI);\n}\nfunction _decimalPlaces(x) {\n  if (!isNumberFinite(x)) {\n    return;\n  }\n  let e = 1;\n  let p = 0;\n  while (Math.round(x * e) / e !== x) {\n    e *= 10;\n    p++;\n  }\n  return p;\n}\nfunction getAngleFromPoint(centrePoint, anglePoint) {\n  const distanceFromXCenter = anglePoint.x - centrePoint.x;\n  const distanceFromYCenter = anglePoint.y - centrePoint.y;\n  const radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n  let angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n  if (angle < (-0.5 * PI)) {\n    angle += TAU;\n  }\n  return {\n    angle,\n    distance: radialDistanceFromCenter\n  };\n}\nfunction distanceBetweenPoints(pt1, pt2) {\n  return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n}\nfunction _angleDiff(a, b) {\n  return (a - b + PITAU) % TAU - PI;\n}\nfunction _normalizeAngle(a) {\n  return (a % TAU + TAU) % TAU;\n}\nfunction _angleBetween(angle, start, end, sameAngleIsFullCircle) {\n  const a = _normalizeAngle(angle);\n  const s = _normalizeAngle(start);\n  const e = _normalizeAngle(end);\n  const angleToStart = _normalizeAngle(s - a);\n  const angleToEnd = _normalizeAngle(e - a);\n  const startToAngle = _normalizeAngle(a - s);\n  const endToAngle = _normalizeAngle(a - e);\n  return a === s || a === e || (sameAngleIsFullCircle && s === e)\n    || (angleToStart > angleToEnd && startToAngle < endToAngle);\n}\nfunction _limitValue(value, min, max) {\n  return Math.max(min, Math.min(max, value));\n}\nfunction _int16Range(value) {\n  return _limitValue(value, -32768, 32767);\n}\nfunction _isBetween(value, start, end, epsilon = 1e-6) {\n  return value >= Math.min(start, end) - epsilon && value <= Math.max(start, end) + epsilon;\n}\n\nconst atEdge = (t) => t === 0 || t === 1;\nconst elasticIn = (t, s, p) => -(Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * TAU / p));\nconst elasticOut = (t, s, p) => Math.pow(2, -10 * t) * Math.sin((t - s) * TAU / p) + 1;\nconst effects = {\n  linear: t => t,\n  easeInQuad: t => t * t,\n  easeOutQuad: t => -t * (t - 2),\n  easeInOutQuad: t => ((t /= 0.5) < 1)\n    ? 0.5 * t * t\n    : -0.5 * ((--t) * (t - 2) - 1),\n  easeInCubic: t => t * t * t,\n  easeOutCubic: t => (t -= 1) * t * t + 1,\n  easeInOutCubic: t => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t\n    : 0.5 * ((t -= 2) * t * t + 2),\n  easeInQuart: t => t * t * t * t,\n  easeOutQuart: t => -((t -= 1) * t * t * t - 1),\n  easeInOutQuart: t => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t * t\n    : -0.5 * ((t -= 2) * t * t * t - 2),\n  easeInQuint: t => t * t * t * t * t,\n  easeOutQuint: t => (t -= 1) * t * t * t * t + 1,\n  easeInOutQuint: t => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t * t * t\n    : 0.5 * ((t -= 2) * t * t * t * t + 2),\n  easeInSine: t => -Math.cos(t * HALF_PI) + 1,\n  easeOutSine: t => Math.sin(t * HALF_PI),\n  easeInOutSine: t => -0.5 * (Math.cos(PI * t) - 1),\n  easeInExpo: t => (t === 0) ? 0 : Math.pow(2, 10 * (t - 1)),\n  easeOutExpo: t => (t === 1) ? 1 : -Math.pow(2, -10 * t) + 1,\n  easeInOutExpo: t => atEdge(t) ? t : t < 0.5\n    ? 0.5 * Math.pow(2, 10 * (t * 2 - 1))\n    : 0.5 * (-Math.pow(2, -10 * (t * 2 - 1)) + 2),\n  easeInCirc: t => (t >= 1) ? t : -(Math.sqrt(1 - t * t) - 1),\n  easeOutCirc: t => Math.sqrt(1 - (t -= 1) * t),\n  easeInOutCirc: t => ((t /= 0.5) < 1)\n    ? -0.5 * (Math.sqrt(1 - t * t) - 1)\n    : 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1),\n  easeInElastic: t => atEdge(t) ? t : elasticIn(t, 0.075, 0.3),\n  easeOutElastic: t => atEdge(t) ? t : elasticOut(t, 0.075, 0.3),\n  easeInOutElastic(t) {\n    const s = 0.1125;\n    const p = 0.45;\n    return atEdge(t) ? t :\n      t < 0.5\n        ? 0.5 * elasticIn(t * 2, s, p)\n        : 0.5 + 0.5 * elasticOut(t * 2 - 1, s, p);\n  },\n  easeInBack(t) {\n    const s = 1.70158;\n    return t * t * ((s + 1) * t - s);\n  },\n  easeOutBack(t) {\n    const s = 1.70158;\n    return (t -= 1) * t * ((s + 1) * t + s) + 1;\n  },\n  easeInOutBack(t) {\n    let s = 1.70158;\n    if ((t /= 0.5) < 1) {\n      return 0.5 * (t * t * (((s *= (1.525)) + 1) * t - s));\n    }\n    return 0.5 * ((t -= 2) * t * (((s *= (1.525)) + 1) * t + s) + 2);\n  },\n  easeInBounce: t => 1 - effects.easeOutBounce(1 - t),\n  easeOutBounce(t) {\n    const m = 7.5625;\n    const d = 2.75;\n    if (t < (1 / d)) {\n      return m * t * t;\n    }\n    if (t < (2 / d)) {\n      return m * (t -= (1.5 / d)) * t + 0.75;\n    }\n    if (t < (2.5 / d)) {\n      return m * (t -= (2.25 / d)) * t + 0.9375;\n    }\n    return m * (t -= (2.625 / d)) * t + 0.984375;\n  },\n  easeInOutBounce: t => (t < 0.5)\n    ? effects.easeInBounce(t * 2) * 0.5\n    : effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5,\n};\n\n/*!\n * @kurkle/color v0.1.9\n * https://github.com/kurkle/color#readme\n * (c) 2020 Jukka Kurkela\n * Released under the MIT License\n */\nconst map = {0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7, 8: 8, 9: 9, A: 10, B: 11, C: 12, D: 13, E: 14, F: 15, a: 10, b: 11, c: 12, d: 13, e: 14, f: 15};\nconst hex = '0123456789ABCDEF';\nconst h1 = (b) => hex[b & 0xF];\nconst h2 = (b) => hex[(b & 0xF0) >> 4] + hex[b & 0xF];\nconst eq = (b) => (((b & 0xF0) >> 4) === (b & 0xF));\nfunction isShort(v) {\n\treturn eq(v.r) && eq(v.g) && eq(v.b) && eq(v.a);\n}\nfunction hexParse(str) {\n\tvar len = str.length;\n\tvar ret;\n\tif (str[0] === '#') {\n\t\tif (len === 4 || len === 5) {\n\t\t\tret = {\n\t\t\t\tr: 255 & map[str[1]] * 17,\n\t\t\t\tg: 255 & map[str[2]] * 17,\n\t\t\t\tb: 255 & map[str[3]] * 17,\n\t\t\t\ta: len === 5 ? map[str[4]] * 17 : 255\n\t\t\t};\n\t\t} else if (len === 7 || len === 9) {\n\t\t\tret = {\n\t\t\t\tr: map[str[1]] << 4 | map[str[2]],\n\t\t\t\tg: map[str[3]] << 4 | map[str[4]],\n\t\t\t\tb: map[str[5]] << 4 | map[str[6]],\n\t\t\t\ta: len === 9 ? (map[str[7]] << 4 | map[str[8]]) : 255\n\t\t\t};\n\t\t}\n\t}\n\treturn ret;\n}\nfunction hexString(v) {\n\tvar f = isShort(v) ? h1 : h2;\n\treturn v\n\t\t? '#' + f(v.r) + f(v.g) + f(v.b) + (v.a < 255 ? f(v.a) : '')\n\t\t: v;\n}\nfunction round(v) {\n\treturn v + 0.5 | 0;\n}\nconst lim = (v, l, h) => Math.max(Math.min(v, h), l);\nfunction p2b(v) {\n\treturn lim(round(v * 2.55), 0, 255);\n}\nfunction n2b(v) {\n\treturn lim(round(v * 255), 0, 255);\n}\nfunction b2n(v) {\n\treturn lim(round(v / 2.55) / 100, 0, 1);\n}\nfunction n2p(v) {\n\treturn lim(round(v * 100), 0, 100);\n}\nconst RGB_RE = /^rgba?\\(\\s*([-+.\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?(?:[\\s,/]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction rgbParse(str) {\n\tconst m = RGB_RE.exec(str);\n\tlet a = 255;\n\tlet r, g, b;\n\tif (!m) {\n\t\treturn;\n\t}\n\tif (m[7] !== r) {\n\t\tconst v = +m[7];\n\t\ta = 255 & (m[8] ? p2b(v) : v * 255);\n\t}\n\tr = +m[1];\n\tg = +m[3];\n\tb = +m[5];\n\tr = 255 & (m[2] ? p2b(r) : r);\n\tg = 255 & (m[4] ? p2b(g) : g);\n\tb = 255 & (m[6] ? p2b(b) : b);\n\treturn {\n\t\tr: r,\n\t\tg: g,\n\t\tb: b,\n\t\ta: a\n\t};\n}\nfunction rgbString(v) {\n\treturn v && (\n\t\tv.a < 255\n\t\t\t? `rgba(${v.r}, ${v.g}, ${v.b}, ${b2n(v.a)})`\n\t\t\t: `rgb(${v.r}, ${v.g}, ${v.b})`\n\t);\n}\nconst HUE_RE = /^(hsla?|hwb|hsv)\\(\\s*([-+.e\\d]+)(?:deg)?[\\s,]+([-+.e\\d]+)%[\\s,]+([-+.e\\d]+)%(?:[\\s,]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction hsl2rgbn(h, s, l) {\n\tconst a = s * Math.min(l, 1 - l);\n\tconst f = (n, k = (n + h / 30) % 12) => l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n\treturn [f(0), f(8), f(4)];\n}\nfunction hsv2rgbn(h, s, v) {\n\tconst f = (n, k = (n + h / 60) % 6) => v - v * s * Math.max(Math.min(k, 4 - k, 1), 0);\n\treturn [f(5), f(3), f(1)];\n}\nfunction hwb2rgbn(h, w, b) {\n\tconst rgb = hsl2rgbn(h, 1, 0.5);\n\tlet i;\n\tif (w + b > 1) {\n\t\ti = 1 / (w + b);\n\t\tw *= i;\n\t\tb *= i;\n\t}\n\tfor (i = 0; i < 3; i++) {\n\t\trgb[i] *= 1 - w - b;\n\t\trgb[i] += w;\n\t}\n\treturn rgb;\n}\nfunction rgb2hsl(v) {\n\tconst range = 255;\n\tconst r = v.r / range;\n\tconst g = v.g / range;\n\tconst b = v.b / range;\n\tconst max = Math.max(r, g, b);\n\tconst min = Math.min(r, g, b);\n\tconst l = (max + min) / 2;\n\tlet h, s, d;\n\tif (max !== min) {\n\t\td = max - min;\n\t\ts = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n\t\th = max === r\n\t\t\t? ((g - b) / d) + (g < b ? 6 : 0)\n\t\t\t: max === g\n\t\t\t\t? (b - r) / d + 2\n\t\t\t\t: (r - g) / d + 4;\n\t\th = h * 60 + 0.5;\n\t}\n\treturn [h | 0, s || 0, l];\n}\nfunction calln(f, a, b, c) {\n\treturn (\n\t\tArray.isArray(a)\n\t\t\t? f(a[0], a[1], a[2])\n\t\t\t: f(a, b, c)\n\t).map(n2b);\n}\nfunction hsl2rgb(h, s, l) {\n\treturn calln(hsl2rgbn, h, s, l);\n}\nfunction hwb2rgb(h, w, b) {\n\treturn calln(hwb2rgbn, h, w, b);\n}\nfunction hsv2rgb(h, s, v) {\n\treturn calln(hsv2rgbn, h, s, v);\n}\nfunction hue(h) {\n\treturn (h % 360 + 360) % 360;\n}\nfunction hueParse(str) {\n\tconst m = HUE_RE.exec(str);\n\tlet a = 255;\n\tlet v;\n\tif (!m) {\n\t\treturn;\n\t}\n\tif (m[5] !== v) {\n\t\ta = m[6] ? p2b(+m[5]) : n2b(+m[5]);\n\t}\n\tconst h = hue(+m[2]);\n\tconst p1 = +m[3] / 100;\n\tconst p2 = +m[4] / 100;\n\tif (m[1] === 'hwb') {\n\t\tv = hwb2rgb(h, p1, p2);\n\t} else if (m[1] === 'hsv') {\n\t\tv = hsv2rgb(h, p1, p2);\n\t} else {\n\t\tv = hsl2rgb(h, p1, p2);\n\t}\n\treturn {\n\t\tr: v[0],\n\t\tg: v[1],\n\t\tb: v[2],\n\t\ta: a\n\t};\n}\nfunction rotate(v, deg) {\n\tvar h = rgb2hsl(v);\n\th[0] = hue(h[0] + deg);\n\th = hsl2rgb(h);\n\tv.r = h[0];\n\tv.g = h[1];\n\tv.b = h[2];\n}\nfunction hslString(v) {\n\tif (!v) {\n\t\treturn;\n\t}\n\tconst a = rgb2hsl(v);\n\tconst h = a[0];\n\tconst s = n2p(a[1]);\n\tconst l = n2p(a[2]);\n\treturn v.a < 255\n\t\t? `hsla(${h}, ${s}%, ${l}%, ${b2n(v.a)})`\n\t\t: `hsl(${h}, ${s}%, ${l}%)`;\n}\nconst map$1 = {\n\tx: 'dark',\n\tZ: 'light',\n\tY: 're',\n\tX: 'blu',\n\tW: 'gr',\n\tV: 'medium',\n\tU: 'slate',\n\tA: 'ee',\n\tT: 'ol',\n\tS: 'or',\n\tB: 'ra',\n\tC: 'lateg',\n\tD: 'ights',\n\tR: 'in',\n\tQ: 'turquois',\n\tE: 'hi',\n\tP: 'ro',\n\tO: 'al',\n\tN: 'le',\n\tM: 'de',\n\tL: 'yello',\n\tF: 'en',\n\tK: 'ch',\n\tG: 'arks',\n\tH: 'ea',\n\tI: 'ightg',\n\tJ: 'wh'\n};\nconst names = {\n\tOiceXe: 'f0f8ff',\n\tantiquewEte: 'faebd7',\n\taqua: 'ffff',\n\taquamarRe: '7fffd4',\n\tazuY: 'f0ffff',\n\tbeige: 'f5f5dc',\n\tbisque: 'ffe4c4',\n\tblack: '0',\n\tblanKedOmond: 'ffebcd',\n\tXe: 'ff',\n\tXeviTet: '8a2be2',\n\tbPwn: 'a52a2a',\n\tburlywood: 'deb887',\n\tcaMtXe: '5f9ea0',\n\tKartYuse: '7fff00',\n\tKocTate: 'd2691e',\n\tcSO: 'ff7f50',\n\tcSnflowerXe: '6495ed',\n\tcSnsilk: 'fff8dc',\n\tcrimson: 'dc143c',\n\tcyan: 'ffff',\n\txXe: '8b',\n\txcyan: '8b8b',\n\txgTMnPd: 'b8860b',\n\txWay: 'a9a9a9',\n\txgYF: '6400',\n\txgYy: 'a9a9a9',\n\txkhaki: 'bdb76b',\n\txmagFta: '8b008b',\n\txTivegYF: '556b2f',\n\txSange: 'ff8c00',\n\txScEd: '9932cc',\n\txYd: '8b0000',\n\txsOmon: 'e9967a',\n\txsHgYF: '8fbc8f',\n\txUXe: '483d8b',\n\txUWay: '2f4f4f',\n\txUgYy: '2f4f4f',\n\txQe: 'ced1',\n\txviTet: '9400d3',\n\tdAppRk: 'ff1493',\n\tdApskyXe: 'bfff',\n\tdimWay: '696969',\n\tdimgYy: '696969',\n\tdodgerXe: '1e90ff',\n\tfiYbrick: 'b22222',\n\tflSOwEte: 'fffaf0',\n\tfoYstWAn: '228b22',\n\tfuKsia: 'ff00ff',\n\tgaRsbSo: 'dcdcdc',\n\tghostwEte: 'f8f8ff',\n\tgTd: 'ffd700',\n\tgTMnPd: 'daa520',\n\tWay: '808080',\n\tgYF: '8000',\n\tgYFLw: 'adff2f',\n\tgYy: '808080',\n\thoneyMw: 'f0fff0',\n\thotpRk: 'ff69b4',\n\tRdianYd: 'cd5c5c',\n\tRdigo: '4b0082',\n\tivSy: 'fffff0',\n\tkhaki: 'f0e68c',\n\tlavFMr: 'e6e6fa',\n\tlavFMrXsh: 'fff0f5',\n\tlawngYF: '7cfc00',\n\tNmoncEffon: 'fffacd',\n\tZXe: 'add8e6',\n\tZcSO: 'f08080',\n\tZcyan: 'e0ffff',\n\tZgTMnPdLw: 'fafad2',\n\tZWay: 'd3d3d3',\n\tZgYF: '90ee90',\n\tZgYy: 'd3d3d3',\n\tZpRk: 'ffb6c1',\n\tZsOmon: 'ffa07a',\n\tZsHgYF: '20b2aa',\n\tZskyXe: '87cefa',\n\tZUWay: '778899',\n\tZUgYy: '778899',\n\tZstAlXe: 'b0c4de',\n\tZLw: 'ffffe0',\n\tlime: 'ff00',\n\tlimegYF: '32cd32',\n\tlRF: 'faf0e6',\n\tmagFta: 'ff00ff',\n\tmaPon: '800000',\n\tVaquamarRe: '66cdaa',\n\tVXe: 'cd',\n\tVScEd: 'ba55d3',\n\tVpurpN: '9370db',\n\tVsHgYF: '3cb371',\n\tVUXe: '7b68ee',\n\tVsprRggYF: 'fa9a',\n\tVQe: '48d1cc',\n\tVviTetYd: 'c71585',\n\tmidnightXe: '191970',\n\tmRtcYam: 'f5fffa',\n\tmistyPse: 'ffe4e1',\n\tmoccasR: 'ffe4b5',\n\tnavajowEte: 'ffdead',\n\tnavy: '80',\n\tTdlace: 'fdf5e6',\n\tTive: '808000',\n\tTivedBb: '6b8e23',\n\tSange: 'ffa500',\n\tSangeYd: 'ff4500',\n\tScEd: 'da70d6',\n\tpOegTMnPd: 'eee8aa',\n\tpOegYF: '98fb98',\n\tpOeQe: 'afeeee',\n\tpOeviTetYd: 'db7093',\n\tpapayawEp: 'ffefd5',\n\tpHKpuff: 'ffdab9',\n\tperu: 'cd853f',\n\tpRk: 'ffc0cb',\n\tplum: 'dda0dd',\n\tpowMrXe: 'b0e0e6',\n\tpurpN: '800080',\n\tYbeccapurpN: '663399',\n\tYd: 'ff0000',\n\tPsybrown: 'bc8f8f',\n\tPyOXe: '4169e1',\n\tsaddNbPwn: '8b4513',\n\tsOmon: 'fa8072',\n\tsandybPwn: 'f4a460',\n\tsHgYF: '2e8b57',\n\tsHshell: 'fff5ee',\n\tsiFna: 'a0522d',\n\tsilver: 'c0c0c0',\n\tskyXe: '87ceeb',\n\tUXe: '6a5acd',\n\tUWay: '708090',\n\tUgYy: '708090',\n\tsnow: 'fffafa',\n\tsprRggYF: 'ff7f',\n\tstAlXe: '4682b4',\n\ttan: 'd2b48c',\n\tteO: '8080',\n\ttEstN: 'd8bfd8',\n\ttomato: 'ff6347',\n\tQe: '40e0d0',\n\tviTet: 'ee82ee',\n\tJHt: 'f5deb3',\n\twEte: 'ffffff',\n\twEtesmoke: 'f5f5f5',\n\tLw: 'ffff00',\n\tLwgYF: '9acd32'\n};\nfunction unpack() {\n\tconst unpacked = {};\n\tconst keys = Object.keys(names);\n\tconst tkeys = Object.keys(map$1);\n\tlet i, j, k, ok, nk;\n\tfor (i = 0; i < keys.length; i++) {\n\t\tok = nk = keys[i];\n\t\tfor (j = 0; j < tkeys.length; j++) {\n\t\t\tk = tkeys[j];\n\t\t\tnk = nk.replace(k, map$1[k]);\n\t\t}\n\t\tk = parseInt(names[ok], 16);\n\t\tunpacked[nk] = [k >> 16 & 0xFF, k >> 8 & 0xFF, k & 0xFF];\n\t}\n\treturn unpacked;\n}\nlet names$1;\nfunction nameParse(str) {\n\tif (!names$1) {\n\t\tnames$1 = unpack();\n\t\tnames$1.transparent = [0, 0, 0, 0];\n\t}\n\tconst a = names$1[str.toLowerCase()];\n\treturn a && {\n\t\tr: a[0],\n\t\tg: a[1],\n\t\tb: a[2],\n\t\ta: a.length === 4 ? a[3] : 255\n\t};\n}\nfunction modHSL(v, i, ratio) {\n\tif (v) {\n\t\tlet tmp = rgb2hsl(v);\n\t\ttmp[i] = Math.max(0, Math.min(tmp[i] + tmp[i] * ratio, i === 0 ? 360 : 1));\n\t\ttmp = hsl2rgb(tmp);\n\t\tv.r = tmp[0];\n\t\tv.g = tmp[1];\n\t\tv.b = tmp[2];\n\t}\n}\nfunction clone(v, proto) {\n\treturn v ? Object.assign(proto || {}, v) : v;\n}\nfunction fromObject(input) {\n\tvar v = {r: 0, g: 0, b: 0, a: 255};\n\tif (Array.isArray(input)) {\n\t\tif (input.length >= 3) {\n\t\t\tv = {r: input[0], g: input[1], b: input[2], a: 255};\n\t\t\tif (input.length > 3) {\n\t\t\t\tv.a = n2b(input[3]);\n\t\t\t}\n\t\t}\n\t} else {\n\t\tv = clone(input, {r: 0, g: 0, b: 0, a: 1});\n\t\tv.a = n2b(v.a);\n\t}\n\treturn v;\n}\nfunction functionParse(str) {\n\tif (str.charAt(0) === 'r') {\n\t\treturn rgbParse(str);\n\t}\n\treturn hueParse(str);\n}\nclass Color {\n\tconstructor(input) {\n\t\tif (input instanceof Color) {\n\t\t\treturn input;\n\t\t}\n\t\tconst type = typeof input;\n\t\tlet v;\n\t\tif (type === 'object') {\n\t\t\tv = fromObject(input);\n\t\t} else if (type === 'string') {\n\t\t\tv = hexParse(input) || nameParse(input) || functionParse(input);\n\t\t}\n\t\tthis._rgb = v;\n\t\tthis._valid = !!v;\n\t}\n\tget valid() {\n\t\treturn this._valid;\n\t}\n\tget rgb() {\n\t\tvar v = clone(this._rgb);\n\t\tif (v) {\n\t\t\tv.a = b2n(v.a);\n\t\t}\n\t\treturn v;\n\t}\n\tset rgb(obj) {\n\t\tthis._rgb = fromObject(obj);\n\t}\n\trgbString() {\n\t\treturn this._valid ? rgbString(this._rgb) : this._rgb;\n\t}\n\thexString() {\n\t\treturn this._valid ? hexString(this._rgb) : this._rgb;\n\t}\n\thslString() {\n\t\treturn this._valid ? hslString(this._rgb) : this._rgb;\n\t}\n\tmix(color, weight) {\n\t\tconst me = this;\n\t\tif (color) {\n\t\t\tconst c1 = me.rgb;\n\t\t\tconst c2 = color.rgb;\n\t\t\tlet w2;\n\t\t\tconst p = weight === w2 ? 0.5 : weight;\n\t\t\tconst w = 2 * p - 1;\n\t\t\tconst a = c1.a - c2.a;\n\t\t\tconst w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n\t\t\tw2 = 1 - w1;\n\t\t\tc1.r = 0xFF & w1 * c1.r + w2 * c2.r + 0.5;\n\t\t\tc1.g = 0xFF & w1 * c1.g + w2 * c2.g + 0.5;\n\t\t\tc1.b = 0xFF & w1 * c1.b + w2 * c2.b + 0.5;\n\t\t\tc1.a = p * c1.a + (1 - p) * c2.a;\n\t\t\tme.rgb = c1;\n\t\t}\n\t\treturn me;\n\t}\n\tclone() {\n\t\treturn new Color(this.rgb);\n\t}\n\talpha(a) {\n\t\tthis._rgb.a = n2b(a);\n\t\treturn this;\n\t}\n\tclearer(ratio) {\n\t\tconst rgb = this._rgb;\n\t\trgb.a *= 1 - ratio;\n\t\treturn this;\n\t}\n\tgreyscale() {\n\t\tconst rgb = this._rgb;\n\t\tconst val = round(rgb.r * 0.3 + rgb.g * 0.59 + rgb.b * 0.11);\n\t\trgb.r = rgb.g = rgb.b = val;\n\t\treturn this;\n\t}\n\topaquer(ratio) {\n\t\tconst rgb = this._rgb;\n\t\trgb.a *= 1 + ratio;\n\t\treturn this;\n\t}\n\tnegate() {\n\t\tconst v = this._rgb;\n\t\tv.r = 255 - v.r;\n\t\tv.g = 255 - v.g;\n\t\tv.b = 255 - v.b;\n\t\treturn this;\n\t}\n\tlighten(ratio) {\n\t\tmodHSL(this._rgb, 2, ratio);\n\t\treturn this;\n\t}\n\tdarken(ratio) {\n\t\tmodHSL(this._rgb, 2, -ratio);\n\t\treturn this;\n\t}\n\tsaturate(ratio) {\n\t\tmodHSL(this._rgb, 1, ratio);\n\t\treturn this;\n\t}\n\tdesaturate(ratio) {\n\t\tmodHSL(this._rgb, 1, -ratio);\n\t\treturn this;\n\t}\n\trotate(deg) {\n\t\trotate(this._rgb, deg);\n\t\treturn this;\n\t}\n}\nfunction index_esm(input) {\n\treturn new Color(input);\n}\n\nconst isPatternOrGradient = (value) => value instanceof CanvasGradient || value instanceof CanvasPattern;\nfunction color(value) {\n  return isPatternOrGradient(value) ? value : index_esm(value);\n}\nfunction getHoverColor(value) {\n  return isPatternOrGradient(value)\n    ? value\n    : index_esm(value).saturate(0.5).darken(0.1).hexString();\n}\n\nconst overrides = Object.create(null);\nconst descriptors = Object.create(null);\nfunction getScope$1(node, key) {\n  if (!key) {\n    return node;\n  }\n  const keys = key.split('.');\n  for (let i = 0, n = keys.length; i < n; ++i) {\n    const k = keys[i];\n    node = node[k] || (node[k] = Object.create(null));\n  }\n  return node;\n}\nfunction set(root, scope, values) {\n  if (typeof scope === 'string') {\n    return merge(getScope$1(root, scope), values);\n  }\n  return merge(getScope$1(root, ''), scope);\n}\nclass Defaults {\n  constructor(_descriptors) {\n    this.animation = undefined;\n    this.backgroundColor = 'rgba(0,0,0,0.1)';\n    this.borderColor = 'rgba(0,0,0,0.1)';\n    this.color = '#666';\n    this.datasets = {};\n    this.devicePixelRatio = (context) => context.chart.platform.getDevicePixelRatio();\n    this.elements = {};\n    this.events = [\n      'mousemove',\n      'mouseout',\n      'click',\n      'touchstart',\n      'touchmove'\n    ];\n    this.font = {\n      family: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n      size: 12,\n      style: 'normal',\n      lineHeight: 1.2,\n      weight: null\n    };\n    this.hover = {};\n    this.hoverBackgroundColor = (ctx, options) => getHoverColor(options.backgroundColor);\n    this.hoverBorderColor = (ctx, options) => getHoverColor(options.borderColor);\n    this.hoverColor = (ctx, options) => getHoverColor(options.color);\n    this.indexAxis = 'x';\n    this.interaction = {\n      mode: 'nearest',\n      intersect: true\n    };\n    this.maintainAspectRatio = true;\n    this.onHover = null;\n    this.onClick = null;\n    this.parsing = true;\n    this.plugins = {};\n    this.responsive = true;\n    this.scale = undefined;\n    this.scales = {};\n    this.showLine = true;\n    this.drawActiveElementsOnTop = true;\n    this.describe(_descriptors);\n  }\n  set(scope, values) {\n    return set(this, scope, values);\n  }\n  get(scope) {\n    return getScope$1(this, scope);\n  }\n  describe(scope, values) {\n    return set(descriptors, scope, values);\n  }\n  override(scope, values) {\n    return set(overrides, scope, values);\n  }\n  route(scope, name, targetScope, targetName) {\n    const scopeObject = getScope$1(this, scope);\n    const targetScopeObject = getScope$1(this, targetScope);\n    const privateName = '_' + name;\n    Object.defineProperties(scopeObject, {\n      [privateName]: {\n        value: scopeObject[name],\n        writable: true\n      },\n      [name]: {\n        enumerable: true,\n        get() {\n          const local = this[privateName];\n          const target = targetScopeObject[targetName];\n          if (isObject(local)) {\n            return Object.assign({}, target, local);\n          }\n          return valueOrDefault(local, target);\n        },\n        set(value) {\n          this[privateName] = value;\n        }\n      }\n    });\n  }\n}\nvar defaults = new Defaults({\n  _scriptable: (name) => !name.startsWith('on'),\n  _indexable: (name) => name !== 'events',\n  hover: {\n    _fallback: 'interaction'\n  },\n  interaction: {\n    _scriptable: false,\n    _indexable: false,\n  }\n});\n\nfunction toFontString(font) {\n  if (!font || isNullOrUndef(font.size) || isNullOrUndef(font.family)) {\n    return null;\n  }\n  return (font.style ? font.style + ' ' : '')\n\t\t+ (font.weight ? font.weight + ' ' : '')\n\t\t+ font.size + 'px '\n\t\t+ font.family;\n}\nfunction _measureText(ctx, data, gc, longest, string) {\n  let textWidth = data[string];\n  if (!textWidth) {\n    textWidth = data[string] = ctx.measureText(string).width;\n    gc.push(string);\n  }\n  if (textWidth > longest) {\n    longest = textWidth;\n  }\n  return longest;\n}\nfunction _longestText(ctx, font, arrayOfThings, cache) {\n  cache = cache || {};\n  let data = cache.data = cache.data || {};\n  let gc = cache.garbageCollect = cache.garbageCollect || [];\n  if (cache.font !== font) {\n    data = cache.data = {};\n    gc = cache.garbageCollect = [];\n    cache.font = font;\n  }\n  ctx.save();\n  ctx.font = font;\n  let longest = 0;\n  const ilen = arrayOfThings.length;\n  let i, j, jlen, thing, nestedThing;\n  for (i = 0; i < ilen; i++) {\n    thing = arrayOfThings[i];\n    if (thing !== undefined && thing !== null && isArray(thing) !== true) {\n      longest = _measureText(ctx, data, gc, longest, thing);\n    } else if (isArray(thing)) {\n      for (j = 0, jlen = thing.length; j < jlen; j++) {\n        nestedThing = thing[j];\n        if (nestedThing !== undefined && nestedThing !== null && !isArray(nestedThing)) {\n          longest = _measureText(ctx, data, gc, longest, nestedThing);\n        }\n      }\n    }\n  }\n  ctx.restore();\n  const gcLen = gc.length / 2;\n  if (gcLen > arrayOfThings.length) {\n    for (i = 0; i < gcLen; i++) {\n      delete data[gc[i]];\n    }\n    gc.splice(0, gcLen);\n  }\n  return longest;\n}\nfunction _alignPixel(chart, pixel, width) {\n  const devicePixelRatio = chart.currentDevicePixelRatio;\n  const halfWidth = width !== 0 ? Math.max(width / 2, 0.5) : 0;\n  return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n}\nfunction clearCanvas(canvas, ctx) {\n  ctx = ctx || canvas.getContext('2d');\n  ctx.save();\n  ctx.resetTransform();\n  ctx.clearRect(0, 0, canvas.width, canvas.height);\n  ctx.restore();\n}\nfunction drawPoint(ctx, options, x, y) {\n  let type, xOffset, yOffset, size, cornerRadius;\n  const style = options.pointStyle;\n  const rotation = options.rotation;\n  const radius = options.radius;\n  let rad = (rotation || 0) * RAD_PER_DEG;\n  if (style && typeof style === 'object') {\n    type = style.toString();\n    if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n      ctx.save();\n      ctx.translate(x, y);\n      ctx.rotate(rad);\n      ctx.drawImage(style, -style.width / 2, -style.height / 2, style.width, style.height);\n      ctx.restore();\n      return;\n    }\n  }\n  if (isNaN(radius) || radius <= 0) {\n    return;\n  }\n  ctx.beginPath();\n  switch (style) {\n  default:\n    ctx.arc(x, y, radius, 0, TAU);\n    ctx.closePath();\n    break;\n  case 'triangle':\n    ctx.moveTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n    rad += TWO_THIRDS_PI;\n    ctx.lineTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n    rad += TWO_THIRDS_PI;\n    ctx.lineTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n    ctx.closePath();\n    break;\n  case 'rectRounded':\n    cornerRadius = radius * 0.516;\n    size = radius - cornerRadius;\n    xOffset = Math.cos(rad + QUARTER_PI) * size;\n    yOffset = Math.sin(rad + QUARTER_PI) * size;\n    ctx.arc(x - xOffset, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n    ctx.arc(x + yOffset, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n    ctx.arc(x + xOffset, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n    ctx.arc(x - yOffset, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n    ctx.closePath();\n    break;\n  case 'rect':\n    if (!rotation) {\n      size = Math.SQRT1_2 * radius;\n      ctx.rect(x - size, y - size, 2 * size, 2 * size);\n      break;\n    }\n    rad += QUARTER_PI;\n  case 'rectRot':\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + yOffset, y - xOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    ctx.lineTo(x - yOffset, y + xOffset);\n    ctx.closePath();\n    break;\n  case 'crossRot':\n    rad += QUARTER_PI;\n  case 'cross':\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    ctx.moveTo(x + yOffset, y - xOffset);\n    ctx.lineTo(x - yOffset, y + xOffset);\n    break;\n  case 'star':\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    ctx.moveTo(x + yOffset, y - xOffset);\n    ctx.lineTo(x - yOffset, y + xOffset);\n    rad += QUARTER_PI;\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    ctx.moveTo(x + yOffset, y - xOffset);\n    ctx.lineTo(x - yOffset, y + xOffset);\n    break;\n  case 'line':\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    break;\n  case 'dash':\n    ctx.moveTo(x, y);\n    ctx.lineTo(x + Math.cos(rad) * radius, y + Math.sin(rad) * radius);\n    break;\n  }\n  ctx.fill();\n  if (options.borderWidth > 0) {\n    ctx.stroke();\n  }\n}\nfunction _isPointInArea(point, area, margin) {\n  margin = margin || 0.5;\n  return !area || (point && point.x > area.left - margin && point.x < area.right + margin &&\n\t\tpoint.y > area.top - margin && point.y < area.bottom + margin);\n}\nfunction clipArea(ctx, area) {\n  ctx.save();\n  ctx.beginPath();\n  ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n  ctx.clip();\n}\nfunction unclipArea(ctx) {\n  ctx.restore();\n}\nfunction _steppedLineTo(ctx, previous, target, flip, mode) {\n  if (!previous) {\n    return ctx.lineTo(target.x, target.y);\n  }\n  if (mode === 'middle') {\n    const midpoint = (previous.x + target.x) / 2.0;\n    ctx.lineTo(midpoint, previous.y);\n    ctx.lineTo(midpoint, target.y);\n  } else if (mode === 'after' !== !!flip) {\n    ctx.lineTo(previous.x, target.y);\n  } else {\n    ctx.lineTo(target.x, previous.y);\n  }\n  ctx.lineTo(target.x, target.y);\n}\nfunction _bezierCurveTo(ctx, previous, target, flip) {\n  if (!previous) {\n    return ctx.lineTo(target.x, target.y);\n  }\n  ctx.bezierCurveTo(\n    flip ? previous.cp1x : previous.cp2x,\n    flip ? previous.cp1y : previous.cp2y,\n    flip ? target.cp2x : target.cp1x,\n    flip ? target.cp2y : target.cp1y,\n    target.x,\n    target.y);\n}\nfunction renderText(ctx, text, x, y, font, opts = {}) {\n  const lines = isArray(text) ? text : [text];\n  const stroke = opts.strokeWidth > 0 && opts.strokeColor !== '';\n  let i, line;\n  ctx.save();\n  ctx.font = font.string;\n  setRenderOpts(ctx, opts);\n  for (i = 0; i < lines.length; ++i) {\n    line = lines[i];\n    if (stroke) {\n      if (opts.strokeColor) {\n        ctx.strokeStyle = opts.strokeColor;\n      }\n      if (!isNullOrUndef(opts.strokeWidth)) {\n        ctx.lineWidth = opts.strokeWidth;\n      }\n      ctx.strokeText(line, x, y, opts.maxWidth);\n    }\n    ctx.fillText(line, x, y, opts.maxWidth);\n    decorateText(ctx, x, y, line, opts);\n    y += font.lineHeight;\n  }\n  ctx.restore();\n}\nfunction setRenderOpts(ctx, opts) {\n  if (opts.translation) {\n    ctx.translate(opts.translation[0], opts.translation[1]);\n  }\n  if (!isNullOrUndef(opts.rotation)) {\n    ctx.rotate(opts.rotation);\n  }\n  if (opts.color) {\n    ctx.fillStyle = opts.color;\n  }\n  if (opts.textAlign) {\n    ctx.textAlign = opts.textAlign;\n  }\n  if (opts.textBaseline) {\n    ctx.textBaseline = opts.textBaseline;\n  }\n}\nfunction decorateText(ctx, x, y, line, opts) {\n  if (opts.strikethrough || opts.underline) {\n    const metrics = ctx.measureText(line);\n    const left = x - metrics.actualBoundingBoxLeft;\n    const right = x + metrics.actualBoundingBoxRight;\n    const top = y - metrics.actualBoundingBoxAscent;\n    const bottom = y + metrics.actualBoundingBoxDescent;\n    const yDecoration = opts.strikethrough ? (top + bottom) / 2 : bottom;\n    ctx.strokeStyle = ctx.fillStyle;\n    ctx.beginPath();\n    ctx.lineWidth = opts.decorationWidth || 2;\n    ctx.moveTo(left, yDecoration);\n    ctx.lineTo(right, yDecoration);\n    ctx.stroke();\n  }\n}\nfunction addRoundedRectPath(ctx, rect) {\n  const {x, y, w, h, radius} = rect;\n  ctx.arc(x + radius.topLeft, y + radius.topLeft, radius.topLeft, -HALF_PI, PI, true);\n  ctx.lineTo(x, y + h - radius.bottomLeft);\n  ctx.arc(x + radius.bottomLeft, y + h - radius.bottomLeft, radius.bottomLeft, PI, HALF_PI, true);\n  ctx.lineTo(x + w - radius.bottomRight, y + h);\n  ctx.arc(x + w - radius.bottomRight, y + h - radius.bottomRight, radius.bottomRight, HALF_PI, 0, true);\n  ctx.lineTo(x + w, y + radius.topRight);\n  ctx.arc(x + w - radius.topRight, y + radius.topRight, radius.topRight, 0, -HALF_PI, true);\n  ctx.lineTo(x + radius.topLeft, y);\n}\n\nconst LINE_HEIGHT = new RegExp(/^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/);\nconst FONT_STYLE = new RegExp(/^(normal|italic|initial|inherit|unset|(oblique( -?[0-9]?[0-9]deg)?))$/);\nfunction toLineHeight(value, size) {\n  const matches = ('' + value).match(LINE_HEIGHT);\n  if (!matches || matches[1] === 'normal') {\n    return size * 1.2;\n  }\n  value = +matches[2];\n  switch (matches[3]) {\n  case 'px':\n    return value;\n  case '%':\n    value /= 100;\n    break;\n  }\n  return size * value;\n}\nconst numberOrZero = v => +v || 0;\nfunction _readValueToProps(value, props) {\n  const ret = {};\n  const objProps = isObject(props);\n  const keys = objProps ? Object.keys(props) : props;\n  const read = isObject(value)\n    ? objProps\n      ? prop => valueOrDefault(value[prop], value[props[prop]])\n      : prop => value[prop]\n    : () => value;\n  for (const prop of keys) {\n    ret[prop] = numberOrZero(read(prop));\n  }\n  return ret;\n}\nfunction toTRBL(value) {\n  return _readValueToProps(value, {top: 'y', right: 'x', bottom: 'y', left: 'x'});\n}\nfunction toTRBLCorners(value) {\n  return _readValueToProps(value, ['topLeft', 'topRight', 'bottomLeft', 'bottomRight']);\n}\nfunction toPadding(value) {\n  const obj = toTRBL(value);\n  obj.width = obj.left + obj.right;\n  obj.height = obj.top + obj.bottom;\n  return obj;\n}\nfunction toFont(options, fallback) {\n  options = options || {};\n  fallback = fallback || defaults.font;\n  let size = valueOrDefault(options.size, fallback.size);\n  if (typeof size === 'string') {\n    size = parseInt(size, 10);\n  }\n  let style = valueOrDefault(options.style, fallback.style);\n  if (style && !('' + style).match(FONT_STYLE)) {\n    console.warn('Invalid font style specified: \"' + style + '\"');\n    style = '';\n  }\n  const font = {\n    family: valueOrDefault(options.family, fallback.family),\n    lineHeight: toLineHeight(valueOrDefault(options.lineHeight, fallback.lineHeight), size),\n    size,\n    style,\n    weight: valueOrDefault(options.weight, fallback.weight),\n    string: ''\n  };\n  font.string = toFontString(font);\n  return font;\n}\nfunction resolve(inputs, context, index, info) {\n  let cacheable = true;\n  let i, ilen, value;\n  for (i = 0, ilen = inputs.length; i < ilen; ++i) {\n    value = inputs[i];\n    if (value === undefined) {\n      continue;\n    }\n    if (context !== undefined && typeof value === 'function') {\n      value = value(context);\n      cacheable = false;\n    }\n    if (index !== undefined && isArray(value)) {\n      value = value[index % value.length];\n      cacheable = false;\n    }\n    if (value !== undefined) {\n      if (info && !cacheable) {\n        info.cacheable = false;\n      }\n      return value;\n    }\n  }\n}\nfunction _addGrace(minmax, grace, beginAtZero) {\n  const {min, max} = minmax;\n  const change = toDimension(grace, (max - min) / 2);\n  const keepZero = (value, add) => beginAtZero && value === 0 ? 0 : value + add;\n  return {\n    min: keepZero(min, -Math.abs(change)),\n    max: keepZero(max, change)\n  };\n}\nfunction createContext(parentContext, context) {\n  return Object.assign(Object.create(parentContext), context);\n}\n\nfunction _lookup(table, value, cmp) {\n  cmp = cmp || ((index) => table[index] < value);\n  let hi = table.length - 1;\n  let lo = 0;\n  let mid;\n  while (hi - lo > 1) {\n    mid = (lo + hi) >> 1;\n    if (cmp(mid)) {\n      lo = mid;\n    } else {\n      hi = mid;\n    }\n  }\n  return {lo, hi};\n}\nconst _lookupByKey = (table, key, value) =>\n  _lookup(table, value, index => table[index][key] < value);\nconst _rlookupByKey = (table, key, value) =>\n  _lookup(table, value, index => table[index][key] >= value);\nfunction _filterBetween(values, min, max) {\n  let start = 0;\n  let end = values.length;\n  while (start < end && values[start] < min) {\n    start++;\n  }\n  while (end > start && values[end - 1] > max) {\n    end--;\n  }\n  return start > 0 || end < values.length\n    ? values.slice(start, end)\n    : values;\n}\nconst arrayEvents = ['push', 'pop', 'shift', 'splice', 'unshift'];\nfunction listenArrayEvents(array, listener) {\n  if (array._chartjs) {\n    array._chartjs.listeners.push(listener);\n    return;\n  }\n  Object.defineProperty(array, '_chartjs', {\n    configurable: true,\n    enumerable: false,\n    value: {\n      listeners: [listener]\n    }\n  });\n  arrayEvents.forEach((key) => {\n    const method = '_onData' + _capitalize(key);\n    const base = array[key];\n    Object.defineProperty(array, key, {\n      configurable: true,\n      enumerable: false,\n      value(...args) {\n        const res = base.apply(this, args);\n        array._chartjs.listeners.forEach((object) => {\n          if (typeof object[method] === 'function') {\n            object[method](...args);\n          }\n        });\n        return res;\n      }\n    });\n  });\n}\nfunction unlistenArrayEvents(array, listener) {\n  const stub = array._chartjs;\n  if (!stub) {\n    return;\n  }\n  const listeners = stub.listeners;\n  const index = listeners.indexOf(listener);\n  if (index !== -1) {\n    listeners.splice(index, 1);\n  }\n  if (listeners.length > 0) {\n    return;\n  }\n  arrayEvents.forEach((key) => {\n    delete array[key];\n  });\n  delete array._chartjs;\n}\nfunction _arrayUnique(items) {\n  const set = new Set();\n  let i, ilen;\n  for (i = 0, ilen = items.length; i < ilen; ++i) {\n    set.add(items[i]);\n  }\n  if (set.size === ilen) {\n    return items;\n  }\n  return Array.from(set);\n}\n\nfunction _createResolver(scopes, prefixes = [''], rootScopes = scopes, fallback, getTarget = () => scopes[0]) {\n  if (!defined(fallback)) {\n    fallback = _resolve('_fallback', scopes);\n  }\n  const cache = {\n    [Symbol.toStringTag]: 'Object',\n    _cacheable: true,\n    _scopes: scopes,\n    _rootScopes: rootScopes,\n    _fallback: fallback,\n    _getTarget: getTarget,\n    override: (scope) => _createResolver([scope, ...scopes], prefixes, rootScopes, fallback),\n  };\n  return new Proxy(cache, {\n    deleteProperty(target, prop) {\n      delete target[prop];\n      delete target._keys;\n      delete scopes[0][prop];\n      return true;\n    },\n    get(target, prop) {\n      return _cached(target, prop,\n        () => _resolveWithPrefixes(prop, prefixes, scopes, target));\n    },\n    getOwnPropertyDescriptor(target, prop) {\n      return Reflect.getOwnPropertyDescriptor(target._scopes[0], prop);\n    },\n    getPrototypeOf() {\n      return Reflect.getPrototypeOf(scopes[0]);\n    },\n    has(target, prop) {\n      return getKeysFromAllScopes(target).includes(prop);\n    },\n    ownKeys(target) {\n      return getKeysFromAllScopes(target);\n    },\n    set(target, prop, value) {\n      const storage = target._storage || (target._storage = getTarget());\n      target[prop] = storage[prop] = value;\n      delete target._keys;\n      return true;\n    }\n  });\n}\nfunction _attachContext(proxy, context, subProxy, descriptorDefaults) {\n  const cache = {\n    _cacheable: false,\n    _proxy: proxy,\n    _context: context,\n    _subProxy: subProxy,\n    _stack: new Set(),\n    _descriptors: _descriptors(proxy, descriptorDefaults),\n    setContext: (ctx) => _attachContext(proxy, ctx, subProxy, descriptorDefaults),\n    override: (scope) => _attachContext(proxy.override(scope), context, subProxy, descriptorDefaults)\n  };\n  return new Proxy(cache, {\n    deleteProperty(target, prop) {\n      delete target[prop];\n      delete proxy[prop];\n      return true;\n    },\n    get(target, prop, receiver) {\n      return _cached(target, prop,\n        () => _resolveWithContext(target, prop, receiver));\n    },\n    getOwnPropertyDescriptor(target, prop) {\n      return target._descriptors.allKeys\n        ? Reflect.has(proxy, prop) ? {enumerable: true, configurable: true} : undefined\n        : Reflect.getOwnPropertyDescriptor(proxy, prop);\n    },\n    getPrototypeOf() {\n      return Reflect.getPrototypeOf(proxy);\n    },\n    has(target, prop) {\n      return Reflect.has(proxy, prop);\n    },\n    ownKeys() {\n      return Reflect.ownKeys(proxy);\n    },\n    set(target, prop, value) {\n      proxy[prop] = value;\n      delete target[prop];\n      return true;\n    }\n  });\n}\nfunction _descriptors(proxy, defaults = {scriptable: true, indexable: true}) {\n  const {_scriptable = defaults.scriptable, _indexable = defaults.indexable, _allKeys = defaults.allKeys} = proxy;\n  return {\n    allKeys: _allKeys,\n    scriptable: _scriptable,\n    indexable: _indexable,\n    isScriptable: isFunction(_scriptable) ? _scriptable : () => _scriptable,\n    isIndexable: isFunction(_indexable) ? _indexable : () => _indexable\n  };\n}\nconst readKey = (prefix, name) => prefix ? prefix + _capitalize(name) : name;\nconst needsSubResolver = (prop, value) => isObject(value) && prop !== 'adapters' &&\n  (Object.getPrototypeOf(value) === null || value.constructor === Object);\nfunction _cached(target, prop, resolve) {\n  if (Object.prototype.hasOwnProperty.call(target, prop)) {\n    return target[prop];\n  }\n  const value = resolve();\n  target[prop] = value;\n  return value;\n}\nfunction _resolveWithContext(target, prop, receiver) {\n  const {_proxy, _context, _subProxy, _descriptors: descriptors} = target;\n  let value = _proxy[prop];\n  if (isFunction(value) && descriptors.isScriptable(prop)) {\n    value = _resolveScriptable(prop, value, target, receiver);\n  }\n  if (isArray(value) && value.length) {\n    value = _resolveArray(prop, value, target, descriptors.isIndexable);\n  }\n  if (needsSubResolver(prop, value)) {\n    value = _attachContext(value, _context, _subProxy && _subProxy[prop], descriptors);\n  }\n  return value;\n}\nfunction _resolveScriptable(prop, value, target, receiver) {\n  const {_proxy, _context, _subProxy, _stack} = target;\n  if (_stack.has(prop)) {\n    throw new Error('Recursion detected: ' + Array.from(_stack).join('->') + '->' + prop);\n  }\n  _stack.add(prop);\n  value = value(_context, _subProxy || receiver);\n  _stack.delete(prop);\n  if (needsSubResolver(prop, value)) {\n    value = createSubResolver(_proxy._scopes, _proxy, prop, value);\n  }\n  return value;\n}\nfunction _resolveArray(prop, value, target, isIndexable) {\n  const {_proxy, _context, _subProxy, _descriptors: descriptors} = target;\n  if (defined(_context.index) && isIndexable(prop)) {\n    value = value[_context.index % value.length];\n  } else if (isObject(value[0])) {\n    const arr = value;\n    const scopes = _proxy._scopes.filter(s => s !== arr);\n    value = [];\n    for (const item of arr) {\n      const resolver = createSubResolver(scopes, _proxy, prop, item);\n      value.push(_attachContext(resolver, _context, _subProxy && _subProxy[prop], descriptors));\n    }\n  }\n  return value;\n}\nfunction resolveFallback(fallback, prop, value) {\n  return isFunction(fallback) ? fallback(prop, value) : fallback;\n}\nconst getScope = (key, parent) => key === true ? parent\n  : typeof key === 'string' ? resolveObjectKey(parent, key) : undefined;\nfunction addScopes(set, parentScopes, key, parentFallback, value) {\n  for (const parent of parentScopes) {\n    const scope = getScope(key, parent);\n    if (scope) {\n      set.add(scope);\n      const fallback = resolveFallback(scope._fallback, key, value);\n      if (defined(fallback) && fallback !== key && fallback !== parentFallback) {\n        return fallback;\n      }\n    } else if (scope === false && defined(parentFallback) && key !== parentFallback) {\n      return null;\n    }\n  }\n  return false;\n}\nfunction createSubResolver(parentScopes, resolver, prop, value) {\n  const rootScopes = resolver._rootScopes;\n  const fallback = resolveFallback(resolver._fallback, prop, value);\n  const allScopes = [...parentScopes, ...rootScopes];\n  const set = new Set();\n  set.add(value);\n  let key = addScopesFromKey(set, allScopes, prop, fallback || prop, value);\n  if (key === null) {\n    return false;\n  }\n  if (defined(fallback) && fallback !== prop) {\n    key = addScopesFromKey(set, allScopes, fallback, key, value);\n    if (key === null) {\n      return false;\n    }\n  }\n  return _createResolver(Array.from(set), [''], rootScopes, fallback,\n    () => subGetTarget(resolver, prop, value));\n}\nfunction addScopesFromKey(set, allScopes, key, fallback, item) {\n  while (key) {\n    key = addScopes(set, allScopes, key, fallback, item);\n  }\n  return key;\n}\nfunction subGetTarget(resolver, prop, value) {\n  const parent = resolver._getTarget();\n  if (!(prop in parent)) {\n    parent[prop] = {};\n  }\n  const target = parent[prop];\n  if (isArray(target) && isObject(value)) {\n    return value;\n  }\n  return target;\n}\nfunction _resolveWithPrefixes(prop, prefixes, scopes, proxy) {\n  let value;\n  for (const prefix of prefixes) {\n    value = _resolve(readKey(prefix, prop), scopes);\n    if (defined(value)) {\n      return needsSubResolver(prop, value)\n        ? createSubResolver(scopes, proxy, prop, value)\n        : value;\n    }\n  }\n}\nfunction _resolve(key, scopes) {\n  for (const scope of scopes) {\n    if (!scope) {\n      continue;\n    }\n    const value = scope[key];\n    if (defined(value)) {\n      return value;\n    }\n  }\n}\nfunction getKeysFromAllScopes(target) {\n  let keys = target._keys;\n  if (!keys) {\n    keys = target._keys = resolveKeysFromAllScopes(target._scopes);\n  }\n  return keys;\n}\nfunction resolveKeysFromAllScopes(scopes) {\n  const set = new Set();\n  for (const scope of scopes) {\n    for (const key of Object.keys(scope).filter(k => !k.startsWith('_'))) {\n      set.add(key);\n    }\n  }\n  return Array.from(set);\n}\n\nconst EPSILON = Number.EPSILON || 1e-14;\nconst getPoint = (points, i) => i < points.length && !points[i].skip && points[i];\nconst getValueAxis = (indexAxis) => indexAxis === 'x' ? 'y' : 'x';\nfunction splineCurve(firstPoint, middlePoint, afterPoint, t) {\n  const previous = firstPoint.skip ? middlePoint : firstPoint;\n  const current = middlePoint;\n  const next = afterPoint.skip ? middlePoint : afterPoint;\n  const d01 = distanceBetweenPoints(current, previous);\n  const d12 = distanceBetweenPoints(next, current);\n  let s01 = d01 / (d01 + d12);\n  let s12 = d12 / (d01 + d12);\n  s01 = isNaN(s01) ? 0 : s01;\n  s12 = isNaN(s12) ? 0 : s12;\n  const fa = t * s01;\n  const fb = t * s12;\n  return {\n    previous: {\n      x: current.x - fa * (next.x - previous.x),\n      y: current.y - fa * (next.y - previous.y)\n    },\n    next: {\n      x: current.x + fb * (next.x - previous.x),\n      y: current.y + fb * (next.y - previous.y)\n    }\n  };\n}\nfunction monotoneAdjust(points, deltaK, mK) {\n  const pointsLen = points.length;\n  let alphaK, betaK, tauK, squaredMagnitude, pointCurrent;\n  let pointAfter = getPoint(points, 0);\n  for (let i = 0; i < pointsLen - 1; ++i) {\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent || !pointAfter) {\n      continue;\n    }\n    if (almostEquals(deltaK[i], 0, EPSILON)) {\n      mK[i] = mK[i + 1] = 0;\n      continue;\n    }\n    alphaK = mK[i] / deltaK[i];\n    betaK = mK[i + 1] / deltaK[i];\n    squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n    if (squaredMagnitude <= 9) {\n      continue;\n    }\n    tauK = 3 / Math.sqrt(squaredMagnitude);\n    mK[i] = alphaK * tauK * deltaK[i];\n    mK[i + 1] = betaK * tauK * deltaK[i];\n  }\n}\nfunction monotoneCompute(points, mK, indexAxis = 'x') {\n  const valueAxis = getValueAxis(indexAxis);\n  const pointsLen = points.length;\n  let delta, pointBefore, pointCurrent;\n  let pointAfter = getPoint(points, 0);\n  for (let i = 0; i < pointsLen; ++i) {\n    pointBefore = pointCurrent;\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent) {\n      continue;\n    }\n    const iPixel = pointCurrent[indexAxis];\n    const vPixel = pointCurrent[valueAxis];\n    if (pointBefore) {\n      delta = (iPixel - pointBefore[indexAxis]) / 3;\n      pointCurrent[`cp1${indexAxis}`] = iPixel - delta;\n      pointCurrent[`cp1${valueAxis}`] = vPixel - delta * mK[i];\n    }\n    if (pointAfter) {\n      delta = (pointAfter[indexAxis] - iPixel) / 3;\n      pointCurrent[`cp2${indexAxis}`] = iPixel + delta;\n      pointCurrent[`cp2${valueAxis}`] = vPixel + delta * mK[i];\n    }\n  }\n}\nfunction splineCurveMonotone(points, indexAxis = 'x') {\n  const valueAxis = getValueAxis(indexAxis);\n  const pointsLen = points.length;\n  const deltaK = Array(pointsLen).fill(0);\n  const mK = Array(pointsLen);\n  let i, pointBefore, pointCurrent;\n  let pointAfter = getPoint(points, 0);\n  for (i = 0; i < pointsLen; ++i) {\n    pointBefore = pointCurrent;\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent) {\n      continue;\n    }\n    if (pointAfter) {\n      const slopeDelta = pointAfter[indexAxis] - pointCurrent[indexAxis];\n      deltaK[i] = slopeDelta !== 0 ? (pointAfter[valueAxis] - pointCurrent[valueAxis]) / slopeDelta : 0;\n    }\n    mK[i] = !pointBefore ? deltaK[i]\n      : !pointAfter ? deltaK[i - 1]\n      : (sign(deltaK[i - 1]) !== sign(deltaK[i])) ? 0\n      : (deltaK[i - 1] + deltaK[i]) / 2;\n  }\n  monotoneAdjust(points, deltaK, mK);\n  monotoneCompute(points, mK, indexAxis);\n}\nfunction capControlPoint(pt, min, max) {\n  return Math.max(Math.min(pt, max), min);\n}\nfunction capBezierPoints(points, area) {\n  let i, ilen, point, inArea, inAreaPrev;\n  let inAreaNext = _isPointInArea(points[0], area);\n  for (i = 0, ilen = points.length; i < ilen; ++i) {\n    inAreaPrev = inArea;\n    inArea = inAreaNext;\n    inAreaNext = i < ilen - 1 && _isPointInArea(points[i + 1], area);\n    if (!inArea) {\n      continue;\n    }\n    point = points[i];\n    if (inAreaPrev) {\n      point.cp1x = capControlPoint(point.cp1x, area.left, area.right);\n      point.cp1y = capControlPoint(point.cp1y, area.top, area.bottom);\n    }\n    if (inAreaNext) {\n      point.cp2x = capControlPoint(point.cp2x, area.left, area.right);\n      point.cp2y = capControlPoint(point.cp2y, area.top, area.bottom);\n    }\n  }\n}\nfunction _updateBezierControlPoints(points, options, area, loop, indexAxis) {\n  let i, ilen, point, controlPoints;\n  if (options.spanGaps) {\n    points = points.filter((pt) => !pt.skip);\n  }\n  if (options.cubicInterpolationMode === 'monotone') {\n    splineCurveMonotone(points, indexAxis);\n  } else {\n    let prev = loop ? points[points.length - 1] : points[0];\n    for (i = 0, ilen = points.length; i < ilen; ++i) {\n      point = points[i];\n      controlPoints = splineCurve(\n        prev,\n        point,\n        points[Math.min(i + 1, ilen - (loop ? 0 : 1)) % ilen],\n        options.tension\n      );\n      point.cp1x = controlPoints.previous.x;\n      point.cp1y = controlPoints.previous.y;\n      point.cp2x = controlPoints.next.x;\n      point.cp2y = controlPoints.next.y;\n      prev = point;\n    }\n  }\n  if (options.capBezierPoints) {\n    capBezierPoints(points, area);\n  }\n}\n\nfunction _isDomSupported() {\n  return typeof window !== 'undefined' && typeof document !== 'undefined';\n}\nfunction _getParentNode(domNode) {\n  let parent = domNode.parentNode;\n  if (parent && parent.toString() === '[object ShadowRoot]') {\n    parent = parent.host;\n  }\n  return parent;\n}\nfunction parseMaxStyle(styleValue, node, parentProperty) {\n  let valueInPixels;\n  if (typeof styleValue === 'string') {\n    valueInPixels = parseInt(styleValue, 10);\n    if (styleValue.indexOf('%') !== -1) {\n      valueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\n    }\n  } else {\n    valueInPixels = styleValue;\n  }\n  return valueInPixels;\n}\nconst getComputedStyle = (element) => window.getComputedStyle(element, null);\nfunction getStyle(el, property) {\n  return getComputedStyle(el).getPropertyValue(property);\n}\nconst positions = ['top', 'right', 'bottom', 'left'];\nfunction getPositionedStyle(styles, style, suffix) {\n  const result = {};\n  suffix = suffix ? '-' + suffix : '';\n  for (let i = 0; i < 4; i++) {\n    const pos = positions[i];\n    result[pos] = parseFloat(styles[style + '-' + pos + suffix]) || 0;\n  }\n  result.width = result.left + result.right;\n  result.height = result.top + result.bottom;\n  return result;\n}\nconst useOffsetPos = (x, y, target) => (x > 0 || y > 0) && (!target || !target.shadowRoot);\nfunction getCanvasPosition(evt, canvas) {\n  const e = evt.native || evt;\n  const touches = e.touches;\n  const source = touches && touches.length ? touches[0] : e;\n  const {offsetX, offsetY} = source;\n  let box = false;\n  let x, y;\n  if (useOffsetPos(offsetX, offsetY, e.target)) {\n    x = offsetX;\n    y = offsetY;\n  } else {\n    const rect = canvas.getBoundingClientRect();\n    x = source.clientX - rect.left;\n    y = source.clientY - rect.top;\n    box = true;\n  }\n  return {x, y, box};\n}\nfunction getRelativePosition(evt, chart) {\n  const {canvas, currentDevicePixelRatio} = chart;\n  const style = getComputedStyle(canvas);\n  const borderBox = style.boxSizing === 'border-box';\n  const paddings = getPositionedStyle(style, 'padding');\n  const borders = getPositionedStyle(style, 'border', 'width');\n  const {x, y, box} = getCanvasPosition(evt, canvas);\n  const xOffset = paddings.left + (box && borders.left);\n  const yOffset = paddings.top + (box && borders.top);\n  let {width, height} = chart;\n  if (borderBox) {\n    width -= paddings.width + borders.width;\n    height -= paddings.height + borders.height;\n  }\n  return {\n    x: Math.round((x - xOffset) / width * canvas.width / currentDevicePixelRatio),\n    y: Math.round((y - yOffset) / height * canvas.height / currentDevicePixelRatio)\n  };\n}\nfunction getContainerSize(canvas, width, height) {\n  let maxWidth, maxHeight;\n  if (width === undefined || height === undefined) {\n    const container = _getParentNode(canvas);\n    if (!container) {\n      width = canvas.clientWidth;\n      height = canvas.clientHeight;\n    } else {\n      const rect = container.getBoundingClientRect();\n      const containerStyle = getComputedStyle(container);\n      const containerBorder = getPositionedStyle(containerStyle, 'border', 'width');\n      const containerPadding = getPositionedStyle(containerStyle, 'padding');\n      width = rect.width - containerPadding.width - containerBorder.width;\n      height = rect.height - containerPadding.height - containerBorder.height;\n      maxWidth = parseMaxStyle(containerStyle.maxWidth, container, 'clientWidth');\n      maxHeight = parseMaxStyle(containerStyle.maxHeight, container, 'clientHeight');\n    }\n  }\n  return {\n    width,\n    height,\n    maxWidth: maxWidth || INFINITY,\n    maxHeight: maxHeight || INFINITY\n  };\n}\nconst round1 = v => Math.round(v * 10) / 10;\nfunction getMaximumSize(canvas, bbWidth, bbHeight, aspectRatio) {\n  const style = getComputedStyle(canvas);\n  const margins = getPositionedStyle(style, 'margin');\n  const maxWidth = parseMaxStyle(style.maxWidth, canvas, 'clientWidth') || INFINITY;\n  const maxHeight = parseMaxStyle(style.maxHeight, canvas, 'clientHeight') || INFINITY;\n  const containerSize = getContainerSize(canvas, bbWidth, bbHeight);\n  let {width, height} = containerSize;\n  if (style.boxSizing === 'content-box') {\n    const borders = getPositionedStyle(style, 'border', 'width');\n    const paddings = getPositionedStyle(style, 'padding');\n    width -= paddings.width + borders.width;\n    height -= paddings.height + borders.height;\n  }\n  width = Math.max(0, width - margins.width);\n  height = Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height - margins.height);\n  width = round1(Math.min(width, maxWidth, containerSize.maxWidth));\n  height = round1(Math.min(height, maxHeight, containerSize.maxHeight));\n  if (width && !height) {\n    height = round1(width / 2);\n  }\n  return {\n    width,\n    height\n  };\n}\nfunction retinaScale(chart, forceRatio, forceStyle) {\n  const pixelRatio = forceRatio || 1;\n  const deviceHeight = Math.floor(chart.height * pixelRatio);\n  const deviceWidth = Math.floor(chart.width * pixelRatio);\n  chart.height = deviceHeight / pixelRatio;\n  chart.width = deviceWidth / pixelRatio;\n  const canvas = chart.canvas;\n  if (canvas.style && (forceStyle || (!canvas.style.height && !canvas.style.width))) {\n    canvas.style.height = `${chart.height}px`;\n    canvas.style.width = `${chart.width}px`;\n  }\n  if (chart.currentDevicePixelRatio !== pixelRatio\n      || canvas.height !== deviceHeight\n      || canvas.width !== deviceWidth) {\n    chart.currentDevicePixelRatio = pixelRatio;\n    canvas.height = deviceHeight;\n    canvas.width = deviceWidth;\n    chart.ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n    return true;\n  }\n  return false;\n}\nconst supportsEventListenerOptions = (function() {\n  let passiveSupported = false;\n  try {\n    const options = {\n      get passive() {\n        passiveSupported = true;\n        return false;\n      }\n    };\n    window.addEventListener('test', null, options);\n    window.removeEventListener('test', null, options);\n  } catch (e) {\n  }\n  return passiveSupported;\n}());\nfunction readUsedSize(element, property) {\n  const value = getStyle(element, property);\n  const matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n  return matches ? +matches[1] : undefined;\n}\n\nfunction _pointInLine(p1, p2, t, mode) {\n  return {\n    x: p1.x + t * (p2.x - p1.x),\n    y: p1.y + t * (p2.y - p1.y)\n  };\n}\nfunction _steppedInterpolation(p1, p2, t, mode) {\n  return {\n    x: p1.x + t * (p2.x - p1.x),\n    y: mode === 'middle' ? t < 0.5 ? p1.y : p2.y\n    : mode === 'after' ? t < 1 ? p1.y : p2.y\n    : t > 0 ? p2.y : p1.y\n  };\n}\nfunction _bezierInterpolation(p1, p2, t, mode) {\n  const cp1 = {x: p1.cp2x, y: p1.cp2y};\n  const cp2 = {x: p2.cp1x, y: p2.cp1y};\n  const a = _pointInLine(p1, cp1, t);\n  const b = _pointInLine(cp1, cp2, t);\n  const c = _pointInLine(cp2, p2, t);\n  const d = _pointInLine(a, b, t);\n  const e = _pointInLine(b, c, t);\n  return _pointInLine(d, e, t);\n}\n\nconst intlCache = new Map();\nfunction getNumberFormat(locale, options) {\n  options = options || {};\n  const cacheKey = locale + JSON.stringify(options);\n  let formatter = intlCache.get(cacheKey);\n  if (!formatter) {\n    formatter = new Intl.NumberFormat(locale, options);\n    intlCache.set(cacheKey, formatter);\n  }\n  return formatter;\n}\nfunction formatNumber(num, locale, options) {\n  return getNumberFormat(locale, options).format(num);\n}\n\nconst getRightToLeftAdapter = function(rectX, width) {\n  return {\n    x(x) {\n      return rectX + rectX + width - x;\n    },\n    setWidth(w) {\n      width = w;\n    },\n    textAlign(align) {\n      if (align === 'center') {\n        return align;\n      }\n      return align === 'right' ? 'left' : 'right';\n    },\n    xPlus(x, value) {\n      return x - value;\n    },\n    leftForLtr(x, itemWidth) {\n      return x - itemWidth;\n    },\n  };\n};\nconst getLeftToRightAdapter = function() {\n  return {\n    x(x) {\n      return x;\n    },\n    setWidth(w) {\n    },\n    textAlign(align) {\n      return align;\n    },\n    xPlus(x, value) {\n      return x + value;\n    },\n    leftForLtr(x, _itemWidth) {\n      return x;\n    },\n  };\n};\nfunction getRtlAdapter(rtl, rectX, width) {\n  return rtl ? getRightToLeftAdapter(rectX, width) : getLeftToRightAdapter();\n}\nfunction overrideTextDirection(ctx, direction) {\n  let style, original;\n  if (direction === 'ltr' || direction === 'rtl') {\n    style = ctx.canvas.style;\n    original = [\n      style.getPropertyValue('direction'),\n      style.getPropertyPriority('direction'),\n    ];\n    style.setProperty('direction', direction, 'important');\n    ctx.prevTextDirection = original;\n  }\n}\nfunction restoreTextDirection(ctx, original) {\n  if (original !== undefined) {\n    delete ctx.prevTextDirection;\n    ctx.canvas.style.setProperty('direction', original[0], original[1]);\n  }\n}\n\nfunction propertyFn(property) {\n  if (property === 'angle') {\n    return {\n      between: _angleBetween,\n      compare: _angleDiff,\n      normalize: _normalizeAngle,\n    };\n  }\n  return {\n    between: _isBetween,\n    compare: (a, b) => a - b,\n    normalize: x => x\n  };\n}\nfunction normalizeSegment({start, end, count, loop, style}) {\n  return {\n    start: start % count,\n    end: end % count,\n    loop: loop && (end - start + 1) % count === 0,\n    style\n  };\n}\nfunction getSegment(segment, points, bounds) {\n  const {property, start: startBound, end: endBound} = bounds;\n  const {between, normalize} = propertyFn(property);\n  const count = points.length;\n  let {start, end, loop} = segment;\n  let i, ilen;\n  if (loop) {\n    start += count;\n    end += count;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      if (!between(normalize(points[start % count][property]), startBound, endBound)) {\n        break;\n      }\n      start--;\n      end--;\n    }\n    start %= count;\n    end %= count;\n  }\n  if (end < start) {\n    end += count;\n  }\n  return {start, end, loop, style: segment.style};\n}\nfunction _boundSegment(segment, points, bounds) {\n  if (!bounds) {\n    return [segment];\n  }\n  const {property, start: startBound, end: endBound} = bounds;\n  const count = points.length;\n  const {compare, between, normalize} = propertyFn(property);\n  const {start, end, loop, style} = getSegment(segment, points, bounds);\n  const result = [];\n  let inside = false;\n  let subStart = null;\n  let value, point, prevValue;\n  const startIsBefore = () => between(startBound, prevValue, value) && compare(startBound, prevValue) !== 0;\n  const endIsBefore = () => compare(endBound, value) === 0 || between(endBound, prevValue, value);\n  const shouldStart = () => inside || startIsBefore();\n  const shouldStop = () => !inside || endIsBefore();\n  for (let i = start, prev = start; i <= end; ++i) {\n    point = points[i % count];\n    if (point.skip) {\n      continue;\n    }\n    value = normalize(point[property]);\n    if (value === prevValue) {\n      continue;\n    }\n    inside = between(value, startBound, endBound);\n    if (subStart === null && shouldStart()) {\n      subStart = compare(value, startBound) === 0 ? i : prev;\n    }\n    if (subStart !== null && shouldStop()) {\n      result.push(normalizeSegment({start: subStart, end: i, loop, count, style}));\n      subStart = null;\n    }\n    prev = i;\n    prevValue = value;\n  }\n  if (subStart !== null) {\n    result.push(normalizeSegment({start: subStart, end, loop, count, style}));\n  }\n  return result;\n}\nfunction _boundSegments(line, bounds) {\n  const result = [];\n  const segments = line.segments;\n  for (let i = 0; i < segments.length; i++) {\n    const sub = _boundSegment(segments[i], line.points, bounds);\n    if (sub.length) {\n      result.push(...sub);\n    }\n  }\n  return result;\n}\nfunction findStartAndEnd(points, count, loop, spanGaps) {\n  let start = 0;\n  let end = count - 1;\n  if (loop && !spanGaps) {\n    while (start < count && !points[start].skip) {\n      start++;\n    }\n  }\n  while (start < count && points[start].skip) {\n    start++;\n  }\n  start %= count;\n  if (loop) {\n    end += start;\n  }\n  while (end > start && points[end % count].skip) {\n    end--;\n  }\n  end %= count;\n  return {start, end};\n}\nfunction solidSegments(points, start, max, loop) {\n  const count = points.length;\n  const result = [];\n  let last = start;\n  let prev = points[start];\n  let end;\n  for (end = start + 1; end <= max; ++end) {\n    const cur = points[end % count];\n    if (cur.skip || cur.stop) {\n      if (!prev.skip) {\n        loop = false;\n        result.push({start: start % count, end: (end - 1) % count, loop});\n        start = last = cur.stop ? end : null;\n      }\n    } else {\n      last = end;\n      if (prev.skip) {\n        start = end;\n      }\n    }\n    prev = cur;\n  }\n  if (last !== null) {\n    result.push({start: start % count, end: last % count, loop});\n  }\n  return result;\n}\nfunction _computeSegments(line, segmentOptions) {\n  const points = line.points;\n  const spanGaps = line.options.spanGaps;\n  const count = points.length;\n  if (!count) {\n    return [];\n  }\n  const loop = !!line._loop;\n  const {start, end} = findStartAndEnd(points, count, loop, spanGaps);\n  if (spanGaps === true) {\n    return splitByStyles(line, [{start, end, loop}], points, segmentOptions);\n  }\n  const max = end < start ? end + count : end;\n  const completeLoop = !!line._fullLoop && start === 0 && end === count - 1;\n  return splitByStyles(line, solidSegments(points, start, max, completeLoop), points, segmentOptions);\n}\nfunction splitByStyles(line, segments, points, segmentOptions) {\n  if (!segmentOptions || !segmentOptions.setContext || !points) {\n    return segments;\n  }\n  return doSplitByStyles(line, segments, points, segmentOptions);\n}\nfunction doSplitByStyles(line, segments, points, segmentOptions) {\n  const chartContext = line._chart.getContext();\n  const baseStyle = readStyle(line.options);\n  const {_datasetIndex: datasetIndex, options: {spanGaps}} = line;\n  const count = points.length;\n  const result = [];\n  let prevStyle = baseStyle;\n  let start = segments[0].start;\n  let i = start;\n  function addStyle(s, e, l, st) {\n    const dir = spanGaps ? -1 : 1;\n    if (s === e) {\n      return;\n    }\n    s += count;\n    while (points[s % count].skip) {\n      s -= dir;\n    }\n    while (points[e % count].skip) {\n      e += dir;\n    }\n    if (s % count !== e % count) {\n      result.push({start: s % count, end: e % count, loop: l, style: st});\n      prevStyle = st;\n      start = e % count;\n    }\n  }\n  for (const segment of segments) {\n    start = spanGaps ? start : segment.start;\n    let prev = points[start % count];\n    let style;\n    for (i = start + 1; i <= segment.end; i++) {\n      const pt = points[i % count];\n      style = readStyle(segmentOptions.setContext(createContext(chartContext, {\n        type: 'segment',\n        p0: prev,\n        p1: pt,\n        p0DataIndex: (i - 1) % count,\n        p1DataIndex: i % count,\n        datasetIndex\n      })));\n      if (styleChanged(style, prevStyle)) {\n        addStyle(start, i - 1, segment.loop, prevStyle);\n      }\n      prev = pt;\n      prevStyle = style;\n    }\n    if (start < i - 1) {\n      addStyle(start, i - 1, segment.loop, prevStyle);\n    }\n  }\n  return result;\n}\nfunction readStyle(options) {\n  return {\n    backgroundColor: options.backgroundColor,\n    borderCapStyle: options.borderCapStyle,\n    borderDash: options.borderDash,\n    borderDashOffset: options.borderDashOffset,\n    borderJoinStyle: options.borderJoinStyle,\n    borderWidth: options.borderWidth,\n    borderColor: options.borderColor\n  };\n}\nfunction styleChanged(style, prevStyle) {\n  return prevStyle && JSON.stringify(style) !== JSON.stringify(prevStyle);\n}\n\nexport { _toLeftRightCenter as $, _rlookupByKey as A, getAngleFromPoint as B, toPadding as C, each as D, getMaximumSize as E, _getParentNode as F, readUsedSize as G, HALF_PI as H, throttled as I, supportsEventListenerOptions as J, _isDomSupported as K, log10 as L, _factorize as M, finiteOrDefault as N, callback as O, PI as P, _addGrace as Q, toDegrees as R, _measureText as S, TAU as T, _int16Range as U, _alignPixel as V, clipArea as W, renderText as X, unclipArea as Y, toFont as Z, _arrayUnique as _, resolve as a, _angleDiff as a$, _alignStartEnd as a0, overrides as a1, merge as a2, _capitalize as a3, descriptors as a4, isFunction as a5, _attachContext as a6, _createResolver as a7, _descriptors as a8, mergeIf as a9, restoreTextDirection as aA, noop as aB, distanceBetweenPoints as aC, _setMinAndMaxByKey as aD, niceNum as aE, almostWhole as aF, almostEquals as aG, _decimalPlaces as aH, _longestText as aI, _filterBetween as aJ, _lookup as aK, getHoverColor as aL, clone$1 as aM, _merger as aN, _mergerIf as aO, _deprecated as aP, toFontString as aQ, splineCurve as aR, splineCurveMonotone as aS, getStyle as aT, fontString as aU, toLineHeight as aV, PITAU as aW, INFINITY as aX, RAD_PER_DEG as aY, QUARTER_PI as aZ, TWO_THIRDS_PI as a_, uid as aa, debounce as ab, retinaScale as ac, clearCanvas as ad, setsEqual as ae, _elementsEqual as af, _isClickEvent as ag, _isBetween as ah, _readValueToProps as ai, _updateBezierControlPoints as aj, _computeSegments as ak, _boundSegments as al, _steppedInterpolation as am, _bezierInterpolation as an, _pointInLine as ao, _steppedLineTo as ap, _bezierCurveTo as aq, drawPoint as ar, addRoundedRectPath as as, toTRBL as at, toTRBLCorners as au, _boundSegment as av, _normalizeAngle as aw, getRtlAdapter as ax, overrideTextDirection as ay, _textX as az, isArray as b, color as c, defaults as d, effects as e, resolveObjectKey as f, isNumberFinite as g, createContext as h, isObject as i, defined as j, isNullOrUndef as k, listenArrayEvents as l, toPercentage as m, toDimension as n, formatNumber as o, _angleBetween as p, isNumber as q, requestAnimFrame as r, sign as s, toRadians as t, unlistenArrayEvents as u, valueOrDefault as v, _limitValue as w, _lookupByKey as x, getRelativePosition as y, _isPointInArea as z };\n","/*!\n * chartjs-plugin-datalabels v2.0.0\n * https://chartjs-plugin-datalabels.netlify.app\n * (c) 2017-2021 chartjs-plugin-datalabels contributors\n * Released under the MIT license\n */\nimport { isNullOrUndef, merge, toFont, resolve, toPadding, valueOrDefault, callback, isObject, each } from 'chart.js/helpers';\nimport { defaults as defaults$1, ArcElement, PointElement, BarElement } from 'chart.js';\n\nvar devicePixelRatio = (function() {\n  if (typeof window !== 'undefined') {\n    if (window.devicePixelRatio) {\n      return window.devicePixelRatio;\n    }\n\n    // devicePixelRatio is undefined on IE10\n    // https://stackoverflow.com/a/20204180/8837887\n    // https://github.com/chartjs/chartjs-plugin-datalabels/issues/85\n    var screen = window.screen;\n    if (screen) {\n      return (screen.deviceXDPI || 1) / (screen.logicalXDPI || 1);\n    }\n  }\n\n  return 1;\n}());\n\nvar utils = {\n  // @todo move this in Chart.helpers.toTextLines\n  toTextLines: function(inputs) {\n    var lines = [];\n    var input;\n\n    inputs = [].concat(inputs);\n    while (inputs.length) {\n      input = inputs.pop();\n      if (typeof input === 'string') {\n        lines.unshift.apply(lines, input.split('\\n'));\n      } else if (Array.isArray(input)) {\n        inputs.push.apply(inputs, input);\n      } else if (!isNullOrUndef(inputs)) {\n        lines.unshift('' + input);\n      }\n    }\n\n    return lines;\n  },\n\n  // @todo move this in Chart.helpers.canvas.textSize\n  // @todo cache calls of measureText if font doesn't change?!\n  textSize: function(ctx, lines, font) {\n    var items = [].concat(lines);\n    var ilen = items.length;\n    var prev = ctx.font;\n    var width = 0;\n    var i;\n\n    ctx.font = font.string;\n\n    for (i = 0; i < ilen; ++i) {\n      width = Math.max(ctx.measureText(items[i]).width, width);\n    }\n\n    ctx.font = prev;\n\n    return {\n      height: ilen * font.lineHeight,\n      width: width\n    };\n  },\n\n  /**\n   * Returns value bounded by min and max. This is equivalent to max(min, min(value, max)).\n   * @todo move this method in Chart.helpers.bound\n   * https://doc.qt.io/qt-5/qtglobal.html#qBound\n   */\n  bound: function(min, value, max) {\n    return Math.max(min, Math.min(value, max));\n  },\n\n  /**\n   * Returns an array of pair [value, state] where state is:\n   * * -1: value is only in a0 (removed)\n   * *  1: value is only in a1 (added)\n   */\n  arrayDiff: function(a0, a1) {\n    var prev = a0.slice();\n    var updates = [];\n    var i, j, ilen, v;\n\n    for (i = 0, ilen = a1.length; i < ilen; ++i) {\n      v = a1[i];\n      j = prev.indexOf(v);\n\n      if (j === -1) {\n        updates.push([v, 1]);\n      } else {\n        prev.splice(j, 1);\n      }\n    }\n\n    for (i = 0, ilen = prev.length; i < ilen; ++i) {\n      updates.push([prev[i], -1]);\n    }\n\n    return updates;\n  },\n\n  /**\n   * https://github.com/chartjs/chartjs-plugin-datalabels/issues/70\n   */\n  rasterize: function(v) {\n    return Math.round(v * devicePixelRatio) / devicePixelRatio;\n  }\n};\n\nfunction orient(point, origin) {\n  var x0 = origin.x;\n  var y0 = origin.y;\n\n  if (x0 === null) {\n    return {x: 0, y: -1};\n  }\n  if (y0 === null) {\n    return {x: 1, y: 0};\n  }\n\n  var dx = point.x - x0;\n  var dy = point.y - y0;\n  var ln = Math.sqrt(dx * dx + dy * dy);\n\n  return {\n    x: ln ? dx / ln : 0,\n    y: ln ? dy / ln : -1\n  };\n}\n\nfunction aligned(x, y, vx, vy, align) {\n  switch (align) {\n  case 'center':\n    vx = vy = 0;\n    break;\n  case 'bottom':\n    vx = 0;\n    vy = 1;\n    break;\n  case 'right':\n    vx = 1;\n    vy = 0;\n    break;\n  case 'left':\n    vx = -1;\n    vy = 0;\n    break;\n  case 'top':\n    vx = 0;\n    vy = -1;\n    break;\n  case 'start':\n    vx = -vx;\n    vy = -vy;\n    break;\n  case 'end':\n    // keep natural orientation\n    break;\n  default:\n    // clockwise rotation (in degree)\n    align *= (Math.PI / 180);\n    vx = Math.cos(align);\n    vy = Math.sin(align);\n    break;\n  }\n\n  return {\n    x: x,\n    y: y,\n    vx: vx,\n    vy: vy\n  };\n}\n\n// Line clipping (Cohen–Sutherland algorithm)\n// https://en.wikipedia.org/wiki/Cohen–Sutherland_algorithm\n\nvar R_INSIDE = 0;\nvar R_LEFT = 1;\nvar R_RIGHT = 2;\nvar R_BOTTOM = 4;\nvar R_TOP = 8;\n\nfunction region(x, y, rect) {\n  var res = R_INSIDE;\n\n  if (x < rect.left) {\n    res |= R_LEFT;\n  } else if (x > rect.right) {\n    res |= R_RIGHT;\n  }\n  if (y < rect.top) {\n    res |= R_TOP;\n  } else if (y > rect.bottom) {\n    res |= R_BOTTOM;\n  }\n\n  return res;\n}\n\nfunction clipped(segment, area) {\n  var x0 = segment.x0;\n  var y0 = segment.y0;\n  var x1 = segment.x1;\n  var y1 = segment.y1;\n  var r0 = region(x0, y0, area);\n  var r1 = region(x1, y1, area);\n  var r, x, y;\n\n  // eslint-disable-next-line no-constant-condition\n  while (true) {\n    if (!(r0 | r1) || (r0 & r1)) {\n      // both points inside or on the same side: no clipping\n      break;\n    }\n\n    // at least one point is outside\n    r = r0 || r1;\n\n    if (r & R_TOP) {\n      x = x0 + (x1 - x0) * (area.top - y0) / (y1 - y0);\n      y = area.top;\n    } else if (r & R_BOTTOM) {\n      x = x0 + (x1 - x0) * (area.bottom - y0) / (y1 - y0);\n      y = area.bottom;\n    } else if (r & R_RIGHT) {\n      y = y0 + (y1 - y0) * (area.right - x0) / (x1 - x0);\n      x = area.right;\n    } else if (r & R_LEFT) {\n      y = y0 + (y1 - y0) * (area.left - x0) / (x1 - x0);\n      x = area.left;\n    }\n\n    if (r === r0) {\n      x0 = x;\n      y0 = y;\n      r0 = region(x0, y0, area);\n    } else {\n      x1 = x;\n      y1 = y;\n      r1 = region(x1, y1, area);\n    }\n  }\n\n  return {\n    x0: x0,\n    x1: x1,\n    y0: y0,\n    y1: y1\n  };\n}\n\nfunction compute$1(range, config) {\n  var anchor = config.anchor;\n  var segment = range;\n  var x, y;\n\n  if (config.clamp) {\n    segment = clipped(segment, config.area);\n  }\n\n  if (anchor === 'start') {\n    x = segment.x0;\n    y = segment.y0;\n  } else if (anchor === 'end') {\n    x = segment.x1;\n    y = segment.y1;\n  } else {\n    x = (segment.x0 + segment.x1) / 2;\n    y = (segment.y0 + segment.y1) / 2;\n  }\n\n  return aligned(x, y, range.vx, range.vy, config.align);\n}\n\nvar positioners = {\n  arc: function(el, config) {\n    var angle = (el.startAngle + el.endAngle) / 2;\n    var vx = Math.cos(angle);\n    var vy = Math.sin(angle);\n    var r0 = el.innerRadius;\n    var r1 = el.outerRadius;\n\n    return compute$1({\n      x0: el.x + vx * r0,\n      y0: el.y + vy * r0,\n      x1: el.x + vx * r1,\n      y1: el.y + vy * r1,\n      vx: vx,\n      vy: vy\n    }, config);\n  },\n\n  point: function(el, config) {\n    var v = orient(el, config.origin);\n    var rx = v.x * el.options.radius;\n    var ry = v.y * el.options.radius;\n\n    return compute$1({\n      x0: el.x - rx,\n      y0: el.y - ry,\n      x1: el.x + rx,\n      y1: el.y + ry,\n      vx: v.x,\n      vy: v.y\n    }, config);\n  },\n\n  bar: function(el, config) {\n    var v = orient(el, config.origin);\n    var x = el.x;\n    var y = el.y;\n    var sx = 0;\n    var sy = 0;\n\n    if (el.horizontal) {\n      x = Math.min(el.x, el.base);\n      sx = Math.abs(el.base - el.x);\n    } else {\n      y = Math.min(el.y, el.base);\n      sy = Math.abs(el.base - el.y);\n    }\n\n    return compute$1({\n      x0: x,\n      y0: y + sy,\n      x1: x + sx,\n      y1: y,\n      vx: v.x,\n      vy: v.y\n    }, config);\n  },\n\n  fallback: function(el, config) {\n    var v = orient(el, config.origin);\n\n    return compute$1({\n      x0: el.x,\n      y0: el.y,\n      x1: el.x,\n      y1: el.y,\n      vx: v.x,\n      vy: v.y\n    }, config);\n  }\n};\n\nvar rasterize = utils.rasterize;\n\nfunction boundingRects(model) {\n  var borderWidth = model.borderWidth || 0;\n  var padding = model.padding;\n  var th = model.size.height;\n  var tw = model.size.width;\n  var tx = -tw / 2;\n  var ty = -th / 2;\n\n  return {\n    frame: {\n      x: tx - padding.left - borderWidth,\n      y: ty - padding.top - borderWidth,\n      w: tw + padding.width + borderWidth * 2,\n      h: th + padding.height + borderWidth * 2\n    },\n    text: {\n      x: tx,\n      y: ty,\n      w: tw,\n      h: th\n    }\n  };\n}\n\nfunction getScaleOrigin(el, context) {\n  var scale = context.chart.getDatasetMeta(context.datasetIndex).vScale;\n\n  if (!scale) {\n    return null;\n  }\n\n  if (scale.xCenter !== undefined && scale.yCenter !== undefined) {\n    return {x: scale.xCenter, y: scale.yCenter};\n  }\n\n  var pixel = scale.getBasePixel();\n  return el.horizontal ?\n    {x: pixel, y: null} :\n    {x: null, y: pixel};\n}\n\nfunction getPositioner(el) {\n  if (el instanceof ArcElement) {\n    return positioners.arc;\n  }\n  if (el instanceof PointElement) {\n    return positioners.point;\n  }\n  if (el instanceof BarElement) {\n    return positioners.bar;\n  }\n  return positioners.fallback;\n}\n\nfunction drawRoundedRect(ctx, x, y, w, h, radius) {\n  var HALF_PI = Math.PI / 2;\n\n  if (radius) {\n    var r = Math.min(radius, h / 2, w / 2);\n    var left = x + r;\n    var top = y + r;\n    var right = x + w - r;\n    var bottom = y + h - r;\n\n    ctx.moveTo(x, top);\n    if (left < right && top < bottom) {\n      ctx.arc(left, top, r, -Math.PI, -HALF_PI);\n      ctx.arc(right, top, r, -HALF_PI, 0);\n      ctx.arc(right, bottom, r, 0, HALF_PI);\n      ctx.arc(left, bottom, r, HALF_PI, Math.PI);\n    } else if (left < right) {\n      ctx.moveTo(left, y);\n      ctx.arc(right, top, r, -HALF_PI, HALF_PI);\n      ctx.arc(left, top, r, HALF_PI, Math.PI + HALF_PI);\n    } else if (top < bottom) {\n      ctx.arc(left, top, r, -Math.PI, 0);\n      ctx.arc(left, bottom, r, 0, Math.PI);\n    } else {\n      ctx.arc(left, top, r, -Math.PI, Math.PI);\n    }\n    ctx.closePath();\n    ctx.moveTo(x, y);\n  } else {\n    ctx.rect(x, y, w, h);\n  }\n}\n\nfunction drawFrame(ctx, rect, model) {\n  var bgColor = model.backgroundColor;\n  var borderColor = model.borderColor;\n  var borderWidth = model.borderWidth;\n\n  if (!bgColor && (!borderColor || !borderWidth)) {\n    return;\n  }\n\n  ctx.beginPath();\n\n  drawRoundedRect(\n    ctx,\n    rasterize(rect.x) + borderWidth / 2,\n    rasterize(rect.y) + borderWidth / 2,\n    rasterize(rect.w) - borderWidth,\n    rasterize(rect.h) - borderWidth,\n    model.borderRadius);\n\n  ctx.closePath();\n\n  if (bgColor) {\n    ctx.fillStyle = bgColor;\n    ctx.fill();\n  }\n\n  if (borderColor && borderWidth) {\n    ctx.strokeStyle = borderColor;\n    ctx.lineWidth = borderWidth;\n    ctx.lineJoin = 'miter';\n    ctx.stroke();\n  }\n}\n\nfunction textGeometry(rect, align, font) {\n  var h = font.lineHeight;\n  var w = rect.w;\n  var x = rect.x;\n  var y = rect.y + h / 2;\n\n  if (align === 'center') {\n    x += w / 2;\n  } else if (align === 'end' || align === 'right') {\n    x += w;\n  }\n\n  return {\n    h: h,\n    w: w,\n    x: x,\n    y: y\n  };\n}\n\nfunction drawTextLine(ctx, text, cfg) {\n  var shadow = ctx.shadowBlur;\n  var stroked = cfg.stroked;\n  var x = rasterize(cfg.x);\n  var y = rasterize(cfg.y);\n  var w = rasterize(cfg.w);\n\n  if (stroked) {\n    ctx.strokeText(text, x, y, w);\n  }\n\n  if (cfg.filled) {\n    if (shadow && stroked) {\n      // Prevent drawing shadow on both the text stroke and fill, so\n      // if the text is stroked, remove the shadow for the text fill.\n      ctx.shadowBlur = 0;\n    }\n\n    ctx.fillText(text, x, y, w);\n\n    if (shadow && stroked) {\n      ctx.shadowBlur = shadow;\n    }\n  }\n}\n\nfunction drawText(ctx, lines, rect, model) {\n  var align = model.textAlign;\n  var color = model.color;\n  var filled = !!color;\n  var font = model.font;\n  var ilen = lines.length;\n  var strokeColor = model.textStrokeColor;\n  var strokeWidth = model.textStrokeWidth;\n  var stroked = strokeColor && strokeWidth;\n  var i;\n\n  if (!ilen || (!filled && !stroked)) {\n    return;\n  }\n\n  // Adjust coordinates based on text alignment and line height\n  rect = textGeometry(rect, align, font);\n\n  ctx.font = font.string;\n  ctx.textAlign = align;\n  ctx.textBaseline = 'middle';\n  ctx.shadowBlur = model.textShadowBlur;\n  ctx.shadowColor = model.textShadowColor;\n\n  if (filled) {\n    ctx.fillStyle = color;\n  }\n  if (stroked) {\n    ctx.lineJoin = 'round';\n    ctx.lineWidth = strokeWidth;\n    ctx.strokeStyle = strokeColor;\n  }\n\n  for (i = 0, ilen = lines.length; i < ilen; ++i) {\n    drawTextLine(ctx, lines[i], {\n      stroked: stroked,\n      filled: filled,\n      w: rect.w,\n      x: rect.x,\n      y: rect.y + rect.h * i\n    });\n  }\n}\n\nvar Label = function(config, ctx, el, index) {\n  var me = this;\n\n  me._config = config;\n  me._index = index;\n  me._model = null;\n  me._rects = null;\n  me._ctx = ctx;\n  me._el = el;\n};\n\nmerge(Label.prototype, {\n  /**\n   * @private\n   */\n  _modelize: function(display, lines, config, context) {\n    var me = this;\n    var index = me._index;\n    var font = toFont(resolve([config.font, {}], context, index));\n    var color = resolve([config.color, defaults$1.color], context, index);\n\n    return {\n      align: resolve([config.align, 'center'], context, index),\n      anchor: resolve([config.anchor, 'center'], context, index),\n      area: context.chart.chartArea,\n      backgroundColor: resolve([config.backgroundColor, null], context, index),\n      borderColor: resolve([config.borderColor, null], context, index),\n      borderRadius: resolve([config.borderRadius, 0], context, index),\n      borderWidth: resolve([config.borderWidth, 0], context, index),\n      clamp: resolve([config.clamp, false], context, index),\n      clip: resolve([config.clip, false], context, index),\n      color: color,\n      display: display,\n      font: font,\n      lines: lines,\n      offset: resolve([config.offset, 0], context, index),\n      opacity: resolve([config.opacity, 1], context, index),\n      origin: getScaleOrigin(me._el, context),\n      padding: toPadding(resolve([config.padding, 0], context, index)),\n      positioner: getPositioner(me._el),\n      rotation: resolve([config.rotation, 0], context, index) * (Math.PI / 180),\n      size: utils.textSize(me._ctx, lines, font),\n      textAlign: resolve([config.textAlign, 'start'], context, index),\n      textShadowBlur: resolve([config.textShadowBlur, 0], context, index),\n      textShadowColor: resolve([config.textShadowColor, color], context, index),\n      textStrokeColor: resolve([config.textStrokeColor, color], context, index),\n      textStrokeWidth: resolve([config.textStrokeWidth, 0], context, index)\n    };\n  },\n\n  update: function(context) {\n    var me = this;\n    var model = null;\n    var rects = null;\n    var index = me._index;\n    var config = me._config;\n    var value, label, lines;\n\n    // We first resolve the display option (separately) to avoid computing\n    // other options in case the label is hidden (i.e. display: false).\n    var display = resolve([config.display, true], context, index);\n\n    if (display) {\n      value = context.dataset.data[index];\n      label = valueOrDefault(callback(config.formatter, [value, context]), value);\n      lines = isNullOrUndef(label) ? [] : utils.toTextLines(label);\n\n      if (lines.length) {\n        model = me._modelize(display, lines, config, context);\n        rects = boundingRects(model);\n      }\n    }\n\n    me._model = model;\n    me._rects = rects;\n  },\n\n  geometry: function() {\n    return this._rects ? this._rects.frame : {};\n  },\n\n  rotation: function() {\n    return this._model ? this._model.rotation : 0;\n  },\n\n  visible: function() {\n    return this._model && this._model.opacity;\n  },\n\n  model: function() {\n    return this._model;\n  },\n\n  draw: function(chart, center) {\n    var me = this;\n    var ctx = chart.ctx;\n    var model = me._model;\n    var rects = me._rects;\n    var area;\n\n    if (!this.visible()) {\n      return;\n    }\n\n    ctx.save();\n\n    if (model.clip) {\n      area = model.area;\n      ctx.beginPath();\n      ctx.rect(\n        area.left,\n        area.top,\n        area.right - area.left,\n        area.bottom - area.top);\n      ctx.clip();\n    }\n\n    ctx.globalAlpha = utils.bound(0, model.opacity, 1);\n    ctx.translate(rasterize(center.x), rasterize(center.y));\n    ctx.rotate(model.rotation);\n\n    drawFrame(ctx, rects.frame, model);\n    drawText(ctx, model.lines, rects.text, model);\n\n    ctx.restore();\n  }\n});\n\nvar MIN_INTEGER = Number.MIN_SAFE_INTEGER || -9007199254740991; // eslint-disable-line es/no-number-minsafeinteger\nvar MAX_INTEGER = Number.MAX_SAFE_INTEGER || 9007199254740991;  // eslint-disable-line es/no-number-maxsafeinteger\n\nfunction rotated(point, center, angle) {\n  var cos = Math.cos(angle);\n  var sin = Math.sin(angle);\n  var cx = center.x;\n  var cy = center.y;\n\n  return {\n    x: cx + cos * (point.x - cx) - sin * (point.y - cy),\n    y: cy + sin * (point.x - cx) + cos * (point.y - cy)\n  };\n}\n\nfunction projected(points, axis) {\n  var min = MAX_INTEGER;\n  var max = MIN_INTEGER;\n  var origin = axis.origin;\n  var i, pt, vx, vy, dp;\n\n  for (i = 0; i < points.length; ++i) {\n    pt = points[i];\n    vx = pt.x - origin.x;\n    vy = pt.y - origin.y;\n    dp = axis.vx * vx + axis.vy * vy;\n    min = Math.min(min, dp);\n    max = Math.max(max, dp);\n  }\n\n  return {\n    min: min,\n    max: max\n  };\n}\n\nfunction toAxis(p0, p1) {\n  var vx = p1.x - p0.x;\n  var vy = p1.y - p0.y;\n  var ln = Math.sqrt(vx * vx + vy * vy);\n\n  return {\n    vx: (p1.x - p0.x) / ln,\n    vy: (p1.y - p0.y) / ln,\n    origin: p0,\n    ln: ln\n  };\n}\n\nvar HitBox = function() {\n  this._rotation = 0;\n  this._rect = {\n    x: 0,\n    y: 0,\n    w: 0,\n    h: 0\n  };\n};\n\nmerge(HitBox.prototype, {\n  center: function() {\n    var r = this._rect;\n    return {\n      x: r.x + r.w / 2,\n      y: r.y + r.h / 2\n    };\n  },\n\n  update: function(center, rect, rotation) {\n    this._rotation = rotation;\n    this._rect = {\n      x: rect.x + center.x,\n      y: rect.y + center.y,\n      w: rect.w,\n      h: rect.h\n    };\n  },\n\n  contains: function(point) {\n    var me = this;\n    var margin = 1;\n    var rect = me._rect;\n\n    point = rotated(point, me.center(), -me._rotation);\n\n    return !(point.x < rect.x - margin\n      || point.y < rect.y - margin\n      || point.x > rect.x + rect.w + margin * 2\n      || point.y > rect.y + rect.h + margin * 2);\n  },\n\n  // Separating Axis Theorem\n  // https://gamedevelopment.tutsplus.com/tutorials/collision-detection-using-the-separating-axis-theorem--gamedev-169\n  intersects: function(other) {\n    var r0 = this._points();\n    var r1 = other._points();\n    var axes = [\n      toAxis(r0[0], r0[1]),\n      toAxis(r0[0], r0[3])\n    ];\n    var i, pr0, pr1;\n\n    if (this._rotation !== other._rotation) {\n      // Only separate with r1 axis if the rotation is different,\n      // else it's enough to separate r0 and r1 with r0 axis only!\n      axes.push(\n        toAxis(r1[0], r1[1]),\n        toAxis(r1[0], r1[3])\n      );\n    }\n\n    for (i = 0; i < axes.length; ++i) {\n      pr0 = projected(r0, axes[i]);\n      pr1 = projected(r1, axes[i]);\n\n      if (pr0.max < pr1.min || pr1.max < pr0.min) {\n        return false;\n      }\n    }\n\n    return true;\n  },\n\n  /**\n   * @private\n   */\n  _points: function() {\n    var me = this;\n    var rect = me._rect;\n    var angle = me._rotation;\n    var center = me.center();\n\n    return [\n      rotated({x: rect.x, y: rect.y}, center, angle),\n      rotated({x: rect.x + rect.w, y: rect.y}, center, angle),\n      rotated({x: rect.x + rect.w, y: rect.y + rect.h}, center, angle),\n      rotated({x: rect.x, y: rect.y + rect.h}, center, angle)\n    ];\n  }\n});\n\nfunction coordinates(el, model, geometry) {\n  var point = model.positioner(el, model);\n  var vx = point.vx;\n  var vy = point.vy;\n\n  if (!vx && !vy) {\n    // if aligned center, we don't want to offset the center point\n    return {x: point.x, y: point.y};\n  }\n\n  var w = geometry.w;\n  var h = geometry.h;\n\n  // take in account the label rotation\n  var rotation = model.rotation;\n  var dx = Math.abs(w / 2 * Math.cos(rotation)) + Math.abs(h / 2 * Math.sin(rotation));\n  var dy = Math.abs(w / 2 * Math.sin(rotation)) + Math.abs(h / 2 * Math.cos(rotation));\n\n  // scale the unit vector (vx, vy) to get at least dx or dy equal to\n  // w or h respectively (else we would calculate the distance to the\n  // ellipse inscribed in the bounding rect)\n  var vs = 1 / Math.max(Math.abs(vx), Math.abs(vy));\n  dx *= vx * vs;\n  dy *= vy * vs;\n\n  // finally, include the explicit offset\n  dx += model.offset * vx;\n  dy += model.offset * vy;\n\n  return {\n    x: point.x + dx,\n    y: point.y + dy\n  };\n}\n\nfunction collide(labels, collider) {\n  var i, j, s0, s1;\n\n  // IMPORTANT Iterate in the reverse order since items at the end of the\n  // list have an higher weight/priority and thus should be less impacted\n  // by the overlapping strategy.\n\n  for (i = labels.length - 1; i >= 0; --i) {\n    s0 = labels[i].$layout;\n\n    for (j = i - 1; j >= 0 && s0._visible; --j) {\n      s1 = labels[j].$layout;\n\n      if (s1._visible && s0._box.intersects(s1._box)) {\n        collider(s0, s1);\n      }\n    }\n  }\n\n  return labels;\n}\n\nfunction compute(labels) {\n  var i, ilen, label, state, geometry, center, proxy;\n\n  // Initialize labels for overlap detection\n  for (i = 0, ilen = labels.length; i < ilen; ++i) {\n    label = labels[i];\n    state = label.$layout;\n\n    if (state._visible) {\n      // Chart.js 3 removed el._model in favor of getProps(), making harder to\n      // abstract reading values in positioners. Also, using string arrays to\n      // read values (i.e. var {a,b,c} = el.getProps([\"a\",\"b\",\"c\"])) would make\n      // positioners inefficient in the normal case (i.e. not the final values)\n      // and the code a bit ugly, so let's use a Proxy instead.\n      proxy = new Proxy(label._el, {get: (el, p) => el.getProps([p], true)[p]});\n\n      geometry = label.geometry();\n      center = coordinates(proxy, label.model(), geometry);\n      state._box.update(center, geometry, label.rotation());\n    }\n  }\n\n  // Auto hide overlapping labels\n  return collide(labels, function(s0, s1) {\n    var h0 = s0._hidable;\n    var h1 = s1._hidable;\n\n    if ((h0 && h1) || h1) {\n      s1._visible = false;\n    } else if (h0) {\n      s0._visible = false;\n    }\n  });\n}\n\nvar layout = {\n  prepare: function(datasets) {\n    var labels = [];\n    var i, j, ilen, jlen, label;\n\n    for (i = 0, ilen = datasets.length; i < ilen; ++i) {\n      for (j = 0, jlen = datasets[i].length; j < jlen; ++j) {\n        label = datasets[i][j];\n        labels.push(label);\n        label.$layout = {\n          _box: new HitBox(),\n          _hidable: false,\n          _visible: true,\n          _set: i,\n          _idx: j\n        };\n      }\n    }\n\n    // TODO New `z` option: labels with a higher z-index are drawn\n    // of top of the ones with a lower index. Lowest z-index labels\n    // are also discarded first when hiding overlapping labels.\n    labels.sort(function(a, b) {\n      var sa = a.$layout;\n      var sb = b.$layout;\n\n      return sa._idx === sb._idx\n        ? sb._set - sa._set\n        : sb._idx - sa._idx;\n    });\n\n    this.update(labels);\n\n    return labels;\n  },\n\n  update: function(labels) {\n    var dirty = false;\n    var i, ilen, label, model, state;\n\n    for (i = 0, ilen = labels.length; i < ilen; ++i) {\n      label = labels[i];\n      model = label.model();\n      state = label.$layout;\n      state._hidable = model && model.display === 'auto';\n      state._visible = label.visible();\n      dirty |= state._hidable;\n    }\n\n    if (dirty) {\n      compute(labels);\n    }\n  },\n\n  lookup: function(labels, point) {\n    var i, state;\n\n    // IMPORTANT Iterate in the reverse order since items at the end of\n    // the list have an higher z-index, thus should be picked first.\n\n    for (i = labels.length - 1; i >= 0; --i) {\n      state = labels[i].$layout;\n\n      if (state && state._visible && state._box.contains(point)) {\n        return labels[i];\n      }\n    }\n\n    return null;\n  },\n\n  draw: function(chart, labels) {\n    var i, ilen, label, state, geometry, center;\n\n    for (i = 0, ilen = labels.length; i < ilen; ++i) {\n      label = labels[i];\n      state = label.$layout;\n\n      if (state._visible) {\n        geometry = label.geometry();\n        center = coordinates(label._el, label.model(), geometry);\n        state._box.update(center, geometry, label.rotation());\n        label.draw(chart, center);\n      }\n    }\n  }\n};\n\nvar formatter = function(value) {\n  if (isNullOrUndef(value)) {\n    return null;\n  }\n\n  var label = value;\n  var keys, klen, k;\n  if (isObject(value)) {\n    if (!isNullOrUndef(value.label)) {\n      label = value.label;\n    } else if (!isNullOrUndef(value.r)) {\n      label = value.r;\n    } else {\n      label = '';\n      keys = Object.keys(value);\n      for (k = 0, klen = keys.length; k < klen; ++k) {\n        label += (k !== 0 ? ', ' : '') + keys[k] + ': ' + value[keys[k]];\n      }\n    }\n  }\n\n  return '' + label;\n};\n\n/**\n * IMPORTANT: make sure to also update tests and TypeScript definition\n * files (`/test/specs/defaults.spec.js` and `/types/options.d.ts`)\n */\n\nvar defaults = {\n  align: 'center',\n  anchor: 'center',\n  backgroundColor: null,\n  borderColor: null,\n  borderRadius: 0,\n  borderWidth: 0,\n  clamp: false,\n  clip: false,\n  color: undefined,\n  display: true,\n  font: {\n    family: undefined,\n    lineHeight: 1.2,\n    size: undefined,\n    style: undefined,\n    weight: null\n  },\n  formatter: formatter,\n  labels: undefined,\n  listeners: {},\n  offset: 4,\n  opacity: 1,\n  padding: {\n    top: 4,\n    right: 4,\n    bottom: 4,\n    left: 4\n  },\n  rotation: 0,\n  textAlign: 'start',\n  textStrokeColor: undefined,\n  textStrokeWidth: 0,\n  textShadowBlur: 0,\n  textShadowColor: undefined\n};\n\n/**\n * @see https://github.com/chartjs/Chart.js/issues/4176\n */\n\nvar EXPANDO_KEY = '$datalabels';\nvar DEFAULT_KEY = '$default';\n\nfunction configure(dataset, options) {\n  var override = dataset.datalabels;\n  var listeners = {};\n  var configs = [];\n  var labels, keys;\n\n  if (override === false) {\n    return null;\n  }\n  if (override === true) {\n    override = {};\n  }\n\n  options = merge({}, [options, override]);\n  labels = options.labels || {};\n  keys = Object.keys(labels);\n  delete options.labels;\n\n  if (keys.length) {\n    keys.forEach(function(key) {\n      if (labels[key]) {\n        configs.push(merge({}, [\n          options,\n          labels[key],\n          {_key: key}\n        ]));\n      }\n    });\n  } else {\n    // Default label if no \"named\" label defined.\n    configs.push(options);\n  }\n\n  // listeners: {<event-type>: {<label-key>: <fn>}}\n  listeners = configs.reduce(function(target, config) {\n    each(config.listeners || {}, function(fn, event) {\n      target[event] = target[event] || {};\n      target[event][config._key || DEFAULT_KEY] = fn;\n    });\n\n    delete config.listeners;\n    return target;\n  }, {});\n\n  return {\n    labels: configs,\n    listeners: listeners\n  };\n}\n\nfunction dispatchEvent(chart, listeners, label) {\n  if (!listeners) {\n    return;\n  }\n\n  var context = label.$context;\n  var groups = label.$groups;\n  var callback$1;\n\n  if (!listeners[groups._set]) {\n    return;\n  }\n\n  callback$1 = listeners[groups._set][groups._key];\n  if (!callback$1) {\n    return;\n  }\n\n  if (callback(callback$1, [context]) === true) {\n    // Users are allowed to tweak the given context by injecting values that can be\n    // used in scriptable options to display labels differently based on the current\n    // event (e.g. highlight an hovered label). That's why we update the label with\n    // the output context and schedule a new chart render by setting it dirty.\n    chart[EXPANDO_KEY]._dirty = true;\n    label.update(context);\n  }\n}\n\nfunction dispatchMoveEvents(chart, listeners, previous, label) {\n  var enter, leave;\n\n  if (!previous && !label) {\n    return;\n  }\n\n  if (!previous) {\n    enter = true;\n  } else if (!label) {\n    leave = true;\n  } else if (previous !== label) {\n    leave = enter = true;\n  }\n\n  if (leave) {\n    dispatchEvent(chart, listeners.leave, previous);\n  }\n  if (enter) {\n    dispatchEvent(chart, listeners.enter, label);\n  }\n}\n\nfunction handleMoveEvents(chart, event) {\n  var expando = chart[EXPANDO_KEY];\n  var listeners = expando._listeners;\n  var previous, label;\n\n  if (!listeners.enter && !listeners.leave) {\n    return;\n  }\n\n  if (event.type === 'mousemove') {\n    label = layout.lookup(expando._labels, event);\n  } else if (event.type !== 'mouseout') {\n    return;\n  }\n\n  previous = expando._hovered;\n  expando._hovered = label;\n  dispatchMoveEvents(chart, listeners, previous, label);\n}\n\nfunction handleClickEvents(chart, event) {\n  var expando = chart[EXPANDO_KEY];\n  var handlers = expando._listeners.click;\n  var label = handlers && layout.lookup(expando._labels, event);\n  if (label) {\n    dispatchEvent(chart, handlers, label);\n  }\n}\n\nvar plugin = {\n  id: 'datalabels',\n\n  defaults: defaults,\n\n  beforeInit: function(chart) {\n    chart[EXPANDO_KEY] = {\n      _actives: []\n    };\n  },\n\n  beforeUpdate: function(chart) {\n    var expando = chart[EXPANDO_KEY];\n    expando._listened = false;\n    expando._listeners = {};     // {<event-type>: {<dataset-index>: {<label-key>: <fn>}}}\n    expando._datasets = [];      // per dataset labels: [Label[]]\n    expando._labels = [];        // layouted labels: Label[]\n  },\n\n  afterDatasetUpdate: function(chart, args, options) {\n    var datasetIndex = args.index;\n    var expando = chart[EXPANDO_KEY];\n    var labels = expando._datasets[datasetIndex] = [];\n    var visible = chart.isDatasetVisible(datasetIndex);\n    var dataset = chart.data.datasets[datasetIndex];\n    var config = configure(dataset, options);\n    var elements = args.meta.data || [];\n    var ctx = chart.ctx;\n    var i, j, ilen, jlen, cfg, key, el, label;\n\n    ctx.save();\n\n    for (i = 0, ilen = elements.length; i < ilen; ++i) {\n      el = elements[i];\n      el[EXPANDO_KEY] = [];\n\n      if (visible && el && chart.getDataVisibility(i) && !el.skip) {\n        for (j = 0, jlen = config.labels.length; j < jlen; ++j) {\n          cfg = config.labels[j];\n          key = cfg._key;\n\n          label = new Label(cfg, ctx, el, i);\n          label.$groups = {\n            _set: datasetIndex,\n            _key: key || DEFAULT_KEY\n          };\n          label.$context = {\n            active: false,\n            chart: chart,\n            dataIndex: i,\n            dataset: dataset,\n            datasetIndex: datasetIndex\n          };\n\n          label.update(label.$context);\n          el[EXPANDO_KEY].push(label);\n          labels.push(label);\n        }\n      }\n    }\n\n    ctx.restore();\n\n    // Store listeners at the chart level and per event type to optimize\n    // cases where no listeners are registered for a specific event.\n    merge(expando._listeners, config.listeners, {\n      merger: function(event, target, source) {\n        target[event] = target[event] || {};\n        target[event][args.index] = source[event];\n        expando._listened = true;\n      }\n    });\n  },\n\n  afterUpdate: function(chart, options) {\n    chart[EXPANDO_KEY]._labels = layout.prepare(\n      chart[EXPANDO_KEY]._datasets,\n      options);\n  },\n\n  // Draw labels on top of all dataset elements\n  // https://github.com/chartjs/chartjs-plugin-datalabels/issues/29\n  // https://github.com/chartjs/chartjs-plugin-datalabels/issues/32\n  afterDatasetsDraw: function(chart) {\n    layout.draw(chart, chart[EXPANDO_KEY]._labels);\n  },\n\n  beforeEvent: function(chart, args) {\n    // If there is no listener registered for this chart, `listened` will be false,\n    // meaning we can immediately ignore the incoming event and avoid useless extra\n    // computation for users who don't implement label interactions.\n    if (chart[EXPANDO_KEY]._listened) {\n      var event = args.event;\n      switch (event.type) {\n      case 'mousemove':\n      case 'mouseout':\n        handleMoveEvents(chart, event);\n        break;\n      case 'click':\n        handleClickEvents(chart, event);\n        break;\n      }\n    }\n  },\n\n  afterEvent: function(chart) {\n    var expando = chart[EXPANDO_KEY];\n    var previous = expando._actives;\n    var actives = expando._actives = chart.getActiveElements();\n    var updates = utils.arrayDiff(previous, actives);\n    var i, ilen, j, jlen, update, label, labels;\n\n    for (i = 0, ilen = updates.length; i < ilen; ++i) {\n      update = updates[i];\n      if (update[1]) {\n        labels = update[0].element[EXPANDO_KEY] || [];\n        for (j = 0, jlen = labels.length; j < jlen; ++j) {\n          label = labels[j];\n          label.$context.active = (update[1] === 1);\n          label.update(label.$context);\n        }\n      }\n    }\n\n    if (expando._dirty || updates.length) {\n      layout.update(expando._labels);\n      chart.render();\n    }\n\n    delete expando._dirty;\n  }\n};\n\nexport default plugin;\n","import React, { forwardRef, useRef, useEffect } from 'react';\nimport { Chart as Chart$1, LineController, BarController, RadarController, DoughnutController, PolarAreaController, BubbleController, PieController, ScatterController } from 'chart.js';\n\nconst defaultDatasetIdKey = 'label';\nfunction reforwardRef(ref, value) {\n    if (typeof ref === 'function') {\n        ref(value);\n    } else if (ref) {\n        ref.current = value;\n    }\n}\nfunction setOptions(chart, nextOptions) {\n    chart.options = {\n        ...nextOptions\n    };\n}\nfunction setLabels(currentData, nextLabels) {\n    currentData.labels = nextLabels;\n}\nfunction setDatasets(currentData, nextDatasets) {\n    let datasetIdKey = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : defaultDatasetIdKey;\n    const addedDatasets = [];\n    currentData.datasets = nextDatasets.map((nextDataset)=>{\n        // given the new set, find it's current match\n        const currentDataset = currentData.datasets.find((dataset)=>dataset[datasetIdKey] === nextDataset[datasetIdKey]\n        );\n        // There is no original to update, so simply add new one\n        if (!currentDataset || !nextDataset.data || addedDatasets.includes(currentDataset)) {\n            return {\n                ...nextDataset\n            };\n        }\n        addedDatasets.push(currentDataset);\n        Object.assign(currentDataset, nextDataset);\n        return currentDataset;\n    });\n}\nfunction cloneData(data) {\n    let datasetIdKey = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : defaultDatasetIdKey;\n    const nextData = {\n        labels: [],\n        datasets: []\n    };\n    setLabels(nextData, data.labels);\n    setDatasets(nextData, data.datasets, datasetIdKey);\n    return nextData;\n}\n/**\n * Get dataset from mouse click event\n * @param chart - Chart.js instance\n * @param event - Mouse click event\n * @returns Dataset\n */ function getDatasetAtEvent(chart, event) {\n    return chart.getElementsAtEventForMode(event.nativeEvent, 'dataset', {\n        intersect: true\n    }, false);\n}\n/**\n * Get single dataset element from mouse click event\n * @param chart - Chart.js instance\n * @param event - Mouse click event\n * @returns Dataset\n */ function getElementAtEvent(chart, event) {\n    return chart.getElementsAtEventForMode(event.nativeEvent, 'nearest', {\n        intersect: true\n    }, false);\n}\n/**\n * Get all dataset elements from mouse click event\n * @param chart - Chart.js instance\n * @param event - Mouse click event\n * @returns Dataset\n */ function getElementsAtEvent(chart, event) {\n    return chart.getElementsAtEventForMode(event.nativeEvent, 'index', {\n        intersect: true\n    }, false);\n}\n\nfunction ChartComponent(param, ref) {\n    let { height =150 , width =300 , redraw =false , datasetIdKey , type , data , options , plugins =[] , fallbackContent , ...props } = param;\n    const canvasRef = useRef(null);\n    const chartRef = useRef();\n    const renderChart = ()=>{\n        if (!canvasRef.current) return;\n        chartRef.current = new Chart$1(canvasRef.current, {\n            type,\n            data: cloneData(data, datasetIdKey),\n            options,\n            plugins\n        });\n        reforwardRef(ref, chartRef.current);\n    };\n    const destroyChart = ()=>{\n        reforwardRef(ref, null);\n        if (chartRef.current) {\n            chartRef.current.destroy();\n            chartRef.current = null;\n        }\n    };\n    useEffect(()=>{\n        if (!redraw && chartRef.current && options) {\n            setOptions(chartRef.current, options);\n        }\n    }, [\n        redraw,\n        options\n    ]);\n    useEffect(()=>{\n        if (!redraw && chartRef.current) {\n            setLabels(chartRef.current.config.data, data.labels);\n        }\n    }, [\n        redraw,\n        data.labels\n    ]);\n    useEffect(()=>{\n        if (!redraw && chartRef.current && data.datasets) {\n            setDatasets(chartRef.current.config.data, data.datasets, datasetIdKey);\n        }\n    }, [\n        redraw,\n        data.datasets\n    ]);\n    useEffect(()=>{\n        if (!chartRef.current) return;\n        if (redraw) {\n            destroyChart();\n            setTimeout(renderChart);\n        } else {\n            chartRef.current.update();\n        }\n    }, [\n        redraw,\n        options,\n        data.labels,\n        data.datasets\n    ]);\n    useEffect(()=>{\n        renderChart();\n        return ()=>destroyChart()\n        ;\n    }, []);\n    return(/*#__PURE__*/ React.createElement(\"canvas\", Object.assign({\n        ref: canvasRef,\n        role: \"img\",\n        height: height,\n        width: width\n    }, props), fallbackContent));\n}\nconst Chart = /*#__PURE__*/ forwardRef(ChartComponent);\n\nfunction createTypedChart(type, registerables) {\n    Chart$1.register(registerables);\n    return(/*#__PURE__*/ forwardRef((props, ref)=>/*#__PURE__*/ React.createElement(Chart, Object.assign({}, props, {\n            ref: ref,\n            type: type\n        }))\n    ));\n}\nconst Line = /* #__PURE__ */ createTypedChart('line', LineController);\nconst Bar = /* #__PURE__ */ createTypedChart('bar', BarController);\nconst Radar = /* #__PURE__ */ createTypedChart('radar', RadarController);\nconst Doughnut = /* #__PURE__ */ createTypedChart('doughnut', DoughnutController);\nconst PolarArea = /* #__PURE__ */ createTypedChart('polarArea', PolarAreaController);\nconst Bubble = /* #__PURE__ */ createTypedChart('bubble', BubbleController);\nconst Pie = /* #__PURE__ */ createTypedChart('pie', PieController);\nconst Scatter = /* #__PURE__ */ createTypedChart('scatter', ScatterController);\n\nexport { Bar, Bubble, Chart, Doughnut, Line, Pie, PolarArea, Radar, Scatter, getDatasetAtEvent, getElementAtEvent, getElementsAtEvent };\n//# sourceMappingURL=index.js.map\n"],"names":["animator","constructor","this","_request","_charts","Map","_running","_lastDate","undefined","_notify","chart","anims","date","type","callbacks","listeners","numSteps","duration","forEach","fn","initial","currentStep","Math","min","start","_refresh","r","window","_update","Date","now","remaining","running","items","length","item","i","draw","_active","_total","tick","pop","_getAnims","charts","get","complete","progress","set","listen","event","cb","push","add","has","reduce","acc","cur","max","_duration","stop","cancel","remove","delete","transparent","interpolators","boolean","from","to","factor","color","c0","c","c1","valid","mix","hexString","number","Animation","cfg","target","prop","currentValue","_fn","_easing","e","easing","_start","floor","delay","_loop","loop","_target","_prop","_from","_to","_promises","active","update","elapsed","remain","wait","promises","Promise","res","rej","resolved","method","d","animationOptions","Object","keys","_fallback","_indexable","_scriptable","name","colors","properties","numbers","animation","resize","show","animations","visible","hide","v","Animations","config","_chart","_properties","configure","animatedProps","getOwnPropertyNames","key","option","_animateOptions","values","newOptions","options","$shared","assign","$animations","resolveTargetOptions","_createAnimations","anim","all","awaitAll","then","props","charAt","value","size","scaleClip","scale","allowedOverflow","opts","reverse","end","getSortedDatasetIndices","filterVisible","metasets","_getSortedDatasetMetas","ilen","index","applyStack","stack","dsIndex","singleMode","mode","datasetIndex","otherValue","s","isStacked","meta","stacked","getOrCreateStack","stacks","stackKey","indexValue","subStack","getLastIndexInStack","vScale","positive","getMatchingVisibleMetas","updateStacks","controller","parsed","_cachedMeta","_stacks","iScale","iAxis","axis","vAxis","indexScale","valueScale","id","getStackKey","_top","_bottom","getFirstScaleId","scales","filter","shift","clearStacks","_parsed","isDirectUpdateMode","cloneIfNotShared","cached","shared","DatasetController","_ctx","ctx","_cachedDataOpts","getMeta","_type","_parsing","_data","_objectData","_sharedOptions","_drawStart","_drawCount","enableOptionSharing","$context","_syncList","initialize","linkScales","_stacked","addElements","updateIndex","dataset","getDataset","chooseId","x","y","xid","xAxisID","yid","yAxisID","rid","rAxisID","indexAxis","iid","iAxisID","vid","vAxisID","xScale","getScaleForId","yScale","rScale","data","datasets","getDatasetMeta","scaleID","_getOtherScale","reset","_destroy","u","_dataCheck","adata","Array","convertObjectDataToArray","isExtensible","l","datasetElementType","buildOrUpdateElements","resetNewElements","stackChanged","oldStacked","_resyncElements","scopeKeys","datasetScopeKeys","scopes","getOptionScopes","createResolver","getContext","parsing","parse","count","sorted","_sorted","prev","parseArrayData","parseObjectData","parsePrimitiveData","isNotInOrderComparedToPrev","labels","getLabels","singleScale","xAxisKey","yAxisKey","getParsed","getDataElement","updateRangeFromParsed","range","parsedValue","NaN","getMinMax","canStack","otherScale","hidden","createStack","Number","POSITIVE_INFINITY","NEGATIVE_INFINITY","otherMin","otherMax","minDefined","maxDefined","getUserBounds","_skip","getAllParsedValues","getMaxOverflow","getLabelAndValue","label","getLabelForValue","_clip","t","b","top","right","bottom","left","disabled","toClip","clip","defaultClip","elements","area","chartArea","drawActiveElementsOnTop","element","getStyle","resolveDatasetElementOptions","resolveDataElementOptions","context","parent","dataIndex","raw","createDataContext","createDatasetContext","_resolveElementOptions","dataElementType","elementType","cache","cacheKey","sharing","datasetElementScopeKeys","prefixes","names","resolveNamedOptions","freeze","_resolveAnimations","transition","datasetAnimationScopeKeys","_cacheable","getSharedOptions","includeOptions","sharedOptions","_animationsDisabled","updateElement","updateSharedOptions","_setStyle","removeHoverStyle","setHoverStyle","_removeDatasetHoverStyle","_setDatasetHoverStyle","arg1","arg2","numMeta","numData","_insertElements","_removeElements","move","arr","updateElements","removed","splice","_sync","args","_dataChanges","_onDataPush","arguments","_onDataPop","_onDataShift","_onDataSplice","newCount","_onDataUnshift","computeMinSampleSize","_cache","$bar","visibleMetas","concat","_","sort","a","getAllScaleValues","curr","_length","updateMinAndPrev","abs","getPixelForValue","ticks","getPixelForTick","parseValue","entry","startValue","endValue","barStart","barEnd","_custom","parseFloatBar","parseArrayOrPrimitive","isFloatBar","custom","setBorderSkipped","edge","borderSkipped","horizontal","base","borderProps","enableBorderRadius","parseEdge","orig","v1","v2","startEnd","setInflateAmount","inflateAmount","ratio","defaults","prototype","BarController","iAxisKey","vAxisKey","obj","super","bars","getBasePixel","isHorizontal","ruler","_getRuler","firstOpts","vpixels","head","_calculateBarValuePixels","ipixels","_calculateBarIndexPixels","center","height","width","_getStacks","last","grouped","val","isNaN","indexOf","_getStackCount","_getStackIndex","pixels","barThickness","_startPixel","_endPixel","stackCount","categoryPercentage","barPercentage","baseValue","minBarLength","actualBase","floating","getDataVisibility","barSign","halfGrid","getLineWidthForValue","skipNull","maxBarThickness","Infinity","next","percent","chunk","computeFlexCategoryTraits","thickness","computeFitCategoryTraits","stackIndex","rects","overrides","_index_","offset","grid","_value_","beginAtZero","BubbleController","radius","points","point","iPixel","getPixelForDecimal","vPixel","skip","plugins","tooltip","title","DoughnutController","innerRadius","outerRadius","offsetX","offsetY","getter","_getRotation","rotation","_getCircumference","circumference","_getRotationExtents","T","isDatasetVisible","arcs","spacing","getMaxBorderWidth","getMaxOffset","maxSize","cutout","chartWeight","_getRingWeight","ratioX","ratioY","startAngle","endAngle","startX","cos","startY","sin","endX","endY","calcMax","angle","calcMin","maxX","maxY","H","minX","P","minY","getRatioAndOffset","maxWidth","maxHeight","maxRadius","radiusLength","_getVisibleDatasetWeightTotal","total","calculateTotal","_getRingWeightOffset","_circumference","animateRotate","calculateCircumference","animationOpts","centerX","centerY","animateScale","arc","metaData","locale","borderAlign","borderWidth","hoverBorderWidth","hoverOffset","ringWeightOffset","weight","descriptors","aspectRatio","legend","generateLabels","pointStyle","map","style","text","fillStyle","backgroundColor","strokeStyle","borderColor","lineWidth","onClick","legendItem","toggleDataVisibility","tooltipItem","dataLabel","formattedValue","slice","LineController","line","_dataset","animationsDisabled","pointCount","lo","hi","getStartAndCountOfVisiblePoints","_scaleRanges","newRanges","xmin","xmax","ymin","ymax","changed","scaleRangesChanged","_datasetIndex","_decimated","showLine","segment","animated","spanGaps","maxGapLength","directUpdate","prevParsed","nullData","border","firstPoint","lastPoint","updateControlPoints","PolarAreaController","_updateRadius","minSize","cutoutPercentage","getVisibleDatasetCount","xCenter","yCenter","datasetStartAngle","getIndexAngle","defaultAngle","countVisibleElements","_computeAngle","getDistanceFromCenterForValue","angleLines","display","circular","pointLabels","PieController","RadarController","_fullLoop","pointPosition","getPointPositionForValue","fill","ScatterController","abstract","Error","interaction","DateAdapter","formats","format","timestamp","amount","unit","diff","startOf","weekday","endOf","override","members","adapters","_date","getRelativePosition","binarySearch","metaset","intersect","lookupMethod","_reversePixels","el","getRange","optimizedEvaluateItems","position","handler","getSortedVisibleDatasetMetas","j","getIntersectItems","useFinalPosition","_minPadding","inRange","getNearestItems","distanceMetric","useX","useY","pt1","pt2","deltaX","deltaY","sqrt","pow","getDistanceMetricForAxis","minDistance","getCenterPoint","distance","getNearestCartesianItems","getProps","getNearestRadialItems","getAxisItems","rangeMethod","intersectsItem","jlen","evaluateAllVisibleItems","Interaction","modes","nearest","STATIC_POSITIONS","filterByPosition","array","pos","filterDynamicPositionByAxis","box","sortByWeight","v0","getCombinedMax","maxPadding","updateMaxPadding","boxPadding","updateDims","params","layout","getPadding","newWidth","outerWidth","newHeight","outerHeight","widthChanged","w","heightChanged","h","same","other","getMargins","positions","margin","marginForPositions","fitBoxes","boxes","refitBoxes","refit","fullSize","setBoxDims","placeBoxes","userPadding","padding","placed","stackWeight","autoPadding","layouts","addBox","_layers","z","removeBox","layoutItem","minPadding","availableWidth","availableHeight","layoutBoxes","wrapBoxes","wrap","centerHorizontal","centerVertical","leftAndTop","rightAndBottom","vertical","buildLayoutBoxes","verticalBoxes","horizontalBoxes","beforeLayout","visibleVerticalBoxCount","vBoxMaxWidth","hBoxMaxHeight","includes","_stack","buildStacks","setLayoutDims","updatePos","change","handleMaxPadding","BasePlatform","acquireContext","canvas","releaseContext","addEventListener","listener","removeEventListener","getDevicePixelRatio","getMaximumSize","isAttached","updateConfig","BasicPlatform","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","isNullOrEmpty","eventListenerOptions","passive","removeListener","nodeListContains","nodeList","node","contains","createAttachObserver","observer","MutationObserver","entries","trigger","addedNodes","removedNodes","observe","document","childList","subtree","createDetachObserver","drpListeningCharts","oldDevicePixelRatio","onWindowResize","dpr","devicePixelRatio","currentDevicePixelRatio","createResizeObserver","container","clientWidth","ResizeObserver","contentRect","listenDevicePixelRatioChanges","releaseObserver","disconnect","unlistenDevicePixelRatioChanges","createProxyAndListen","proxy","native","fromNativeEvent","addListener","DomPlatform","renderHeight","getAttribute","renderWidth","boxSizing","displayWidth","displayHeight","initCanvas","removeAttribute","setAttribute","proxies","$proxies","attach","detach","isConnected","Element","tooltipPosition","hasValue","final","ret","defaultRoutes","formatters","numeric","tickValue","notation","delta","maxTick","calculateDelta","logDelta","numDecimal","minimumFractionDigits","maximumFractionDigits","logarithmic","call","Ticks","newTicks","majorStart","majorEnd","ceil","round","bounds","grace","drawBorder","drawOnChartArea","drawTicks","tickLength","tickWidth","tickColor","borderDash","borderDashOffset","minRotation","maxRotation","mirror","textStrokeWidth","textStrokeColor","autoSkip","autoSkipPadding","labelOffset","callback","minor","major","align","crossAlign","showLabelBackdrop","backdropColor","backdropPadding","startsWith","offsetFromEdge","sample","numItems","result","increment","len","getPixelForGridLine","offsetGridLines","validIndex","epsilon","lineValue","getTickMarkLength","getTitleHeight","fallback","font","lineHeight","titleAlign","reverseAlign","Scale","_margins","paddingTop","paddingBottom","paddingLeft","paddingRight","labelRotation","_range","_gridLineItems","_labelItems","_labelSizes","_maxLength","_longestTextCache","_userMax","_userMin","_suggestedMax","_suggestedMin","_ticksLength","_borderValue","_dataLimitsCached","init","setContext","suggestedMin","suggestedMax","metas","getTicks","xLabels","yLabels","beforeUpdate","margins","tickOpts","sampleSize","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","beforeBuildTicks","buildTicks","afterBuildTicks","samplingEnabled","_convertTicksToLabels","beforeCalculateLabelRotation","calculateLabelRotation","afterCalculateLabelRotation","source","ticksLimit","maxTicksLimit","_tickSize","maxScale","maxChart","determineMaxTicks","majorIndices","enabled","getMajorIndices","numMajorIndices","first","skipMajors","evenMajorSpacing","getEvenSpacing","factors","calculateSpacing","avgMajorSpacing","beforeFit","fit","afterFit","afterUpdate","startPixel","endPixel","reversePixels","_alignToPixels","alignToPixels","_callHooks","notifyPlugins","beforeTickToLabelConversion","generateTickLabels","afterTickToLabelConversion","numTicks","maxLabelDiagonal","_isVisible","labelSizes","_getLabelSizes","maxLabelWidth","widest","maxLabelHeight","highest","asin","titleOpts","gridOpts","titleHeight","tickPadding","angleRadians","labelHeight","labelWidth","_calculatePadding","_handleMargins","isRotated","labelsBelowTicks","offsetLeft","offsetRight","isFullSize","_computeLabelSizes","caches","widths","heights","tickFont","fontString","nestedLabel","widestLabelSize","highestLabelSize","_resolveTickFontOptions","string","gc","gcLen","garbageCollect","valueAt","idx","getValueForPixel","pixel","decimal","getDecimalForPixel","getBaseValue","createTickContext","optionTicks","rot","_computeGridLineItems","ticksLength","tl","borderOpts","axisWidth","axisHalfWidth","alignBorderValue","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","x1","y1","x2","y2","positionAxisID","limit","step","optsAtIndex","lineColor","tickBorderDash","tickBorderDashOffset","_computeLabelItems","tickAndPadding","hTickAndPadding","textAlign","lineCount","textOffset","textBaseline","_getXAxisLabelAlignment","_getYAxisLabelAlignment","halfCount","strokeColor","strokeWidth","backdrop","labelPadding","translation","_computeLabelArea","drawBackground","save","fillRect","restore","findIndex","drawGrid","drawLine","p1","p2","setLineDash","lineDashOffset","beginPath","moveTo","lineTo","stroke","lastLineWidth","drawLabels","drawTitle","titleX","titleY","titleArgs","tz","gz","axisID","_maxDigits","fontSize","TypedRegistry","scope","create","isForType","isPrototypeOf","register","proto","getPrototypeOf","parentScope","isIChartComponent","itemDefaults","routes","property","propertyParts","split","sourceName","sourceScope","join","parts","targetName","targetScope","routeDefaults","registerDefaults","unregister","registry","controllers","_typedRegistries","_each","addControllers","addPlugins","addScales","getController","_get","getElement","getPlugin","getScale","removeControllers","removeElements","removePlugins","removeScales","typedRegistry","arg","reg","_getRegistryForType","_exec","itemReg","component","camelMethod","PluginService","_init","notify","hook","_createDescriptors","_descriptors","descriptor","plugin","cancelable","invalidate","_oldCache","_notifyStateChanges","local","allPlugins","getOpts","pluginOpts","createDescriptors","previousDescriptors","some","pluginScopeKeys","scriptable","indexable","allKeys","getIndexAxis","datasetDefaults","determineAxis","scaleOptions","toLowerCase","initOptions","chartDefaults","configScales","chartIndexAxis","firstIDs","scaleConf","console","error","_proxy","warn","defaultId","getDefaultScaleIDFromAxis","defaultScaleOptions","defaultID","getAxisFromDefaultScaleID","mergeScaleConfig","initData","keyCache","keysCached","Set","cachedKeys","generate","addIfFound","Config","_config","initConfig","_scopeCache","_resolverCache","platform","clearCache","clear","datasetType","additionalOptionScopes","_cachedScopes","mainScope","resetCache","keyLists","chartOptionScopes","resolver","subPrefixes","getResolver","isScriptable","isIndexable","hasFunction","needContext","subResolver","descriptorDefaults","resolverCache","p","KNOWN_POSITIONS","positionIsHorizontal","compare2Level","l1","l2","onAnimationsComplete","onComplete","onAnimationProgress","onProgress","getCanvas","getElementById","instances","getChart","moveNumericKeys","intKey","Chart","userConfig","initialCanvas","existingChart","OffscreenCanvas","_detectPlatform","_options","_aspectRatio","_metasets","_lastEvent","_listeners","_responsiveListeners","_sortedMetasets","_plugins","_hiddenIndices","attached","_doResize","resizeDelay","_initialize","maintainAspectRatio","responsive","bindEvents","_resizeBeforeDraw","_resize","newSize","newRatio","onResize","render","ensureScalesHaveIDs","scalesOptions","axisOptions","buildOrUpdateScales","scaleOpts","updated","isRadial","dposition","dtype","scaleType","hasUpdated","_updateMetasets","_destroyDatasetMeta","_removeUnreferencedMetasets","buildOrUpdateControllers","newControllers","order","ControllerClass","_resetElements","animsDisabled","_updateScales","_checkEventBindings","_updateHiddenIndices","_updateLayout","_updateDatasets","_eventHandler","_updateHoverStyles","existingEvents","newEvents","events","unbindEvents","changes","_getUniformDataChanges","datasetCount","makeSet","changeSet","noArea","_idx","_updateDataset","layers","_drawDatasets","_drawDataset","useClip","getElementsAtEventForMode","setDatasetVisibility","_updateVisibility","_stop","destroy","toBase64Image","toDataURL","bindUserEvents","bindResponsiveEvents","_add","_remove","detached","updateHoverStyle","prefix","getActiveElements","setActiveElements","activeElements","lastActive","replay","hoverOptions","hover","deactivated","activated","inChartArea","eventFilter","_handleEvent","_getActiveElements","isClick","lastEvent","determineLastEvent","onHover","invalidatePlugins","enumerable","clipArc","pixelMargin","angleMargin","closePath","rThetaToXY","theta","pathArc","innerR","spacingOffset","alpha","avNogSpacingRadius","angleOffset","outerStart","outerEnd","innerStart","innerEnd","angleDelta","o","borderRadius","halfThickness","innerLimit","computeOuterLimit","outerArcLimit","parseBorderRadius$1","outerStartAdjustedRadius","outerEndAdjustedRadius","outerStartAdjustedAngle","outerEndAdjustedAngle","innerStartAdjustedRadius","innerEndAdjustedRadius","innerStartAdjustedAngle","innerEndAdjustedAngle","pCenter","p4","PI","p8","defineProperties","version","ArcElement","fullCircles","chartX","chartY","rAdjust","betweenAngles","withinRadius","halfAngle","halfRadius","radiusOffset","translate","drawArc","borderJoinStyle","inner","lineJoin","drawFullCircleBorders","setStyle","lineCap","borderCapStyle","previous","pathVars","paramsStart","paramsEnd","segmentStart","segmentEnd","outside","pathSegment","lineMethod","stepped","tension","cubicInterpolationMode","getLineMethod","fastPathSegment","prevX","lastY","avgX","countX","pointIndex","drawX","truncX","_getSegmentMethod","usePath2D","Path2D","LineElement","_path","_points","_segments","_pointsUpdated","segments","interpolate","_interpolate","_getInterpolationMethod","interpolated","segmentMethod","path","strokePathWithCache","strokePathDirect","inRange$1","hitRadius","capBezierPoints","PointElement","mouseX","mouseY","inXRange","inYRange","hoverRadius","getBarBounds","bar","half","skipOrLimit","skipX","skipY","addNormalRectPath","rect","inflateRect","refRect","BarElement","outer","maxW","maxH","parseBorderWidth","maxR","enableBorder","topLeft","topRight","bottomLeft","bottomRight","parseBorderRadius","boundingRects","addRectPath","Title","_padding","textSize","_drawArgs","fontOpts","plugin_title","_element","_args","titleBlock","createTitle","WeakMap","positioners","average","eventPosition","nearestElement","tp","pushOrConcat","toPush","apply","splitNewlines","str","String","createTooltipItem","getTooltipSize","body","footer","boxWidth","boxHeight","bodyFont","titleFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","bodyItem","before","lines","after","beforeBody","afterBody","titleSpacing","titleMarginBottom","displayColors","bodySpacing","footerMarginTop","footerSpacing","widthPadding","maxLineWidth","measureText","determineXAlign","yAlign","chartWidth","xAlign","caret","caretSize","caretPadding","doesNotFitWithAlign","determineAlignment","determineYAlign","getBackgroundPoint","alignment","cornerRadius","paddingAndSize","alignX","alignY","getAlignedX","getBeforeAfterBodyLines","overrideCallbacks","Tooltip","opacity","_eventPosition","_size","_cachedAnimations","_tooltipItems","dataPoints","caretX","caretY","labelColors","labelPointStyles","labelTextColors","tooltipItems","getTitle","beforeTitle","afterTitle","getBeforeBody","getBody","bodyItems","scoped","beforeLabel","afterLabel","getAfterBody","getFooter","beforeFooter","afterFooter","_createItems","itemSort","labelColor","labelPointStyle","labelTextColor","positionAndSize","backgroundPoint","external","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","pt","rtlHelper","rtl","titleColor","fillText","_drawColorBox","colorX","rtlColorX","yOffSet","colorY","usePointStyle","drawOptions","leftForLtr","multiKeyBackground","outerX","innerX","xPlus","strokeRect","drawBody","bodyAlign","bodyLineHeight","xLinePadding","fillLineOfText","bodyAlignForCalculation","textColor","bodyColor","drawFooter","footerAlign","footerColor","tooltipSize","quadraticCurveTo","_updateAnimationTarget","animX","animY","hasTooltipContent","globalAlpha","textDirection","positionChanged","_positionChanged","_ignoreReplayEvents","handleEvent","plugin_tooltip","afterInit","afterDraw","afterEvent","labelCount","CategoryScale","_startValue","_valueRange","_addedLabels","added","isFinite","addedLabels","unshift","addIfString","lastIndexOf","findOrAddLabel","relativeLabelSize","minSpacing","rad","LinearScaleBase","_endValue","handleTickRangeOptions","setMin","setMax","minSign","maxSign","MAX_SAFE_INTEGER","MIN_SAFE_INTEGER","getTickLimit","maxTicks","stepSize","computeTickLimit","generationOptions","dataRange","precision","maxDigits","includeBounds","maxSpaces","rmin","rmax","countDefined","niceMin","niceMax","numSpaces","decimalPlaces","generateTicks$1","LinearScale","isMajor","tickVal","LogarithmicScale","_zero","exp","m","endExp","endSignificand","significand","lastTick","generateTicks","getTickBackdropHeight","determineLimits","updateLimits","limits","hLimits","vLimits","getTextAlignForAngle","yForAngle","pathRadiusLine","getPointPosition","RadialLinearScale","drawingArea","_pointLabels","_pointLabelItems","valueCount","pointLabelOpts","additionalAngle","centerPointLabels","getPointLabelContext","plFont","setCenterPoint","extra","outerDistance","pointLabelPosition","buildPointLabelItems","fitWithPointLabels","leftMovement","rightMovement","topMovement","bottomMovement","angleMultiplier","scalingFactor","getValueForDistanceFromCenter","scaledDistance","pointLabel","createPointLabelContext","distanceFromCenter","getBasePosition","getPointLabelPosition","drawPointLabels","gridLineOpts","drawRadiusLine","rotate","animate","INTERVALS","millisecond","common","steps","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","input","adapter","_adapter","parser","isoWeekday","_parseOpts","determineUnitForAutoTicks","minUnit","capacity","interval","addTick","time","timestamps","ticksFromTimestamps","majorUnit","setMajorTicks","TimeScale","_unit","_majorUnit","_offsets","_normalized","displayFormats","normalized","_applyBounds","_getLabelBounds","getLabelTimestamps","timeOpts","_generate","_getLabelCapacity","determineUnitForFormatting","determineMajorUnit","initOffsets","getDecimalForValue","hasWeekday","getDataTimestamps","tooltipFormat","datetime","_tickFormatFunction","minorFormat","majorFormat","formatter","offsets","_getLabelSize","ticksOpts","tickLabelWidth","cosRotation","sinRotation","tickFontSize","exampleTime","exampleLabel","normalize","table","prevSource","nextSource","prevTarget","nextTarget","span","TimeSeriesScale","_table","_minPos","_tableRange","_getTimestampsForTable","buildLookupTable","requestAnimFrame","requestAnimationFrame","throttled","thisArg","updateFn","updateArgs","ticking","rest","debounce","timeout","clearTimeout","setTimeout","_toLeftRightCenter","_alignStartEnd","_textX","noop","uid","isNullOrUndef","isArray","toString","substr","isObject","isNumberFinite","finiteOrDefault","defaultValue","valueOrDefault","toPercentage","dimension","endsWith","parseFloat","toDimension","each","loopable","_elementsEqual","a0","a1","clone$1","klen","k","isValidKey","_merger","tval","sval","merge","sources","merger","mergeIf","_mergerIf","hasOwnProperty","indexOfDotOrLength","resolveObjectKey","_capitalize","toUpperCase","defined","isFunction","setsEqual","_isClickEvent","TAU","PITAU","INFINITY","RAD_PER_DEG","HALF_PI","QUARTER_PI","TWO_THIRDS_PI","log10","sign","niceNum","roundedRange","almostEquals","niceRange","fraction","_factorize","isNumber","n","almostWhole","rounded","_setMinAndMaxByKey","toRadians","degrees","toDegrees","radians","_decimalPlaces","getAngleFromPoint","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","atan2","distanceBetweenPoints","_angleDiff","_normalizeAngle","_angleBetween","sameAngleIsFullCircle","angleToStart","angleToEnd","startToAngle","endToAngle","_limitValue","_int16Range","_isBetween","atEdge","elasticIn","elasticOut","effects","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","A","B","C","D","E","F","f","hex","h1","h2","eq","lim","p2b","n2b","b2n","n2p","RGB_RE","HUE_RE","hsl2rgbn","hsv2rgbn","hwb2rgbn","rgb","rgb2hsl","g","calln","hsl2rgb","hue","map$1","Z","Y","X","W","V","U","S","R","Q","O","N","M","L","K","G","I","J","OiceXe","antiquewEte","aqua","aquamarRe","azuY","beige","bisque","black","blanKedOmond","Xe","XeviTet","bPwn","burlywood","caMtXe","KartYuse","KocTate","cSO","cSnflowerXe","cSnsilk","crimson","cyan","xXe","xcyan","xgTMnPd","xWay","xgYF","xgYy","xkhaki","xmagFta","xTivegYF","xSange","xScEd","xYd","xsOmon","xsHgYF","xUXe","xUWay","xUgYy","xQe","xviTet","dAppRk","dApskyXe","dimWay","dimgYy","dodgerXe","fiYbrick","flSOwEte","foYstWAn","fuKsia","gaRsbSo","ghostwEte","gTd","gTMnPd","Way","gYF","gYFLw","gYy","honeyMw","hotpRk","RdianYd","Rdigo","ivSy","khaki","lavFMr","lavFMrXsh","lawngYF","NmoncEffon","ZXe","ZcSO","Zcyan","ZgTMnPdLw","ZWay","ZgYF","ZgYy","ZpRk","ZsOmon","ZsHgYF","ZskyXe","ZUWay","ZUgYy","ZstAlXe","ZLw","lime","limegYF","lRF","magFta","maPon","VaquamarRe","VXe","VScEd","VpurpN","VsHgYF","VUXe","VsprRggYF","VQe","VviTetYd","midnightXe","mRtcYam","mistyPse","moccasR","navajowEte","navy","Tdlace","Tive","TivedBb","Sange","SangeYd","ScEd","pOegTMnPd","pOegYF","pOeQe","pOeviTetYd","papayawEp","pHKpuff","peru","pRk","plum","powMrXe","purpN","YbeccapurpN","Yd","Psybrown","PyOXe","saddNbPwn","sOmon","sandybPwn","sHgYF","sHshell","siFna","silver","skyXe","UXe","UWay","UgYy","snow","sprRggYF","stAlXe","tan","teO","tEstN","tomato","Qe","viTet","JHt","wEte","wEtesmoke","Lw","LwgYF","names$1","modHSL","tmp","clone","fromObject","functionParse","exec","rgbParse","hwb2rgb","hsv2rgb","hueParse","Color","unpacked","tkeys","ok","nk","replace","parseInt","unpack","nameParse","_rgb","_valid","rgbString","isShort","hslString","me","c2","w2","w1","clearer","greyscale","opaquer","negate","lighten","darken","saturate","desaturate","deg","index_esm","isPatternOrGradient","CanvasGradient","CanvasPattern","getHoverColor","getScope$1","root","family","hoverBackgroundColor","hoverBorderColor","hoverColor","describe","route","scopeObject","targetScopeObject","privateName","writable","_measureText","longest","textWidth","_longestText","arrayOfThings","thing","nestedThing","_alignPixel","halfWidth","clearCanvas","resetTransform","clearRect","drawPoint","xOffset","yOffset","drawImage","SQRT1_2","_isPointInArea","clipArea","unclipArea","_steppedLineTo","flip","midpoint","_bezierCurveTo","bezierCurveTo","cp1x","cp2x","cp1y","cp2y","renderText","setRenderOpts","strokeText","decorateText","strikethrough","underline","metrics","actualBoundingBoxLeft","actualBoundingBoxRight","actualBoundingBoxAscent","actualBoundingBoxDescent","yDecoration","decorationWidth","addRoundedRectPath","LINE_HEIGHT","RegExp","FONT_STYLE","toLineHeight","matches","match","_readValueToProps","objProps","read","toTRBL","toTRBLCorners","toPadding","toFont","toFontString","resolve","inputs","info","cacheable","_addGrace","minmax","keepZero","createContext","parentContext","_lookup","cmp","mid","_lookupByKey","_rlookupByKey","_filterBetween","arrayEvents","listenArrayEvents","_chartjs","defineProperty","configurable","object","unlistenArrayEvents","stub","_arrayUnique","_createResolver","rootScopes","getTarget","_resolve","Symbol","toStringTag","_scopes","_rootScopes","_getTarget","Proxy","deleteProperty","_keys","_cached","readKey","needsSubResolver","createSubResolver","_resolveWithPrefixes","getOwnPropertyDescriptor","Reflect","getKeysFromAllScopes","ownKeys","storage","_storage","_attachContext","subProxy","_context","_subProxy","receiver","_resolveScriptable","_resolveArray","_resolveWithContext","_allKeys","resolveFallback","getScope","addScopes","parentScopes","parentFallback","allScopes","addScopesFromKey","subGetTarget","resolveKeysFromAllScopes","EPSILON","getPoint","getValueAxis","splineCurve","middlePoint","afterPoint","current","d01","d12","s01","s12","fa","fb","capControlPoint","_updateBezierControlPoints","controlPoints","valueAxis","pointsLen","deltaK","mK","pointBefore","pointCurrent","pointAfter","slopeDelta","alphaK","betaK","tauK","squaredMagnitude","monotoneAdjust","monotoneCompute","splineCurveMonotone","inArea","inAreaPrev","inAreaNext","_isDomSupported","_getParentNode","domNode","parentNode","host","parseMaxStyle","styleValue","parentProperty","valueInPixels","getComputedStyle","getPositionedStyle","styles","suffix","evt","borderBox","paddings","borders","touches","shadowRoot","useOffsetPos","getBoundingClientRect","clientX","clientY","getCanvasPosition","round1","bbWidth","bbHeight","containerSize","containerStyle","containerBorder","containerPadding","clientHeight","getContainerSize","retinaScale","forceRatio","forceStyle","pixelRatio","deviceHeight","deviceWidth","setTransform","supportsEventListenerOptions","passiveSupported","readUsedSize","getPropertyValue","_pointInLine","_steppedInterpolation","_bezierInterpolation","cp1","cp2","intlCache","formatNumber","num","JSON","stringify","Intl","NumberFormat","getNumberFormat","getRtlAdapter","rectX","setWidth","itemWidth","getRightToLeftAdapter","_itemWidth","overrideTextDirection","direction","original","getPropertyPriority","setProperty","prevTextDirection","restoreTextDirection","propertyFn","between","compare","normalizeSegment","_boundSegment","startBound","endBound","getSegment","prevValue","inside","subStart","_boundSegments","sub","_computeSegments","segmentOptions","findStartAndEnd","splitByStyles","solidSegments","chartContext","baseStyle","readStyle","prevStyle","addStyle","st","dir","p0","p0DataIndex","p1DataIndex","styleChanged","doSplitByStyles","screen","deviceXDPI","logicalXDPI","utils","orient","origin","x0","y0","dx","dy","ln","region","compute$1","anchor","clamp","r0","r1","clipped","vx","vy","aligned","rx","ry","sx","sy","rasterize","getScaleOrigin","drawTextLine","shadow","shadowBlur","stroked","filled","Label","_index","_model","_rects","_el","_modelize","positioner","textShadowBlur","textShadowColor","model","th","tw","tx","ty","frame","geometry","bgColor","drawRoundedRect","drawFrame","textGeometry","shadowColor","drawText","MIN_INTEGER","MAX_INTEGER","rotated","cx","cy","projected","dp","toAxis","HitBox","_rotation","_rect","coordinates","vs","intersects","pr0","pr1","axes","prepare","$layout","_box","_hidable","_visible","_set","sa","sb","state","dirty","collider","s0","s1","collide","h0","compute","lookup","DEFAULT_KEY","dispatchEvent","callback$1","groups","$groups","_key","_dirty","beforeInit","_actives","expando","_listened","_datasets","_labels","afterDatasetUpdate","datalabels","configs","afterDatasetsDraw","beforeEvent","enter","leave","_hovered","dispatchMoveEvents","handleMoveEvents","handlers","click","handleClickEvents","updates","defaultDatasetIdKey","reforwardRef","ref","setLabels","currentData","nextLabels","setDatasets","nextDatasets","datasetIdKey","addedDatasets","nextDataset","currentDataset","find","cloneData","nextData","ChartComponent","param","redraw","fallbackContent","canvasRef","useRef","chartRef","renderChart","destroyChart","useEffect","nextOptions","role","forwardRef","createTypedChart","registerables","Bar"],"sourceRoot":""}