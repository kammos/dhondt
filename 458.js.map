{"version":3,"file":"458.js","mappings":"65BAIO,IAAMA,EAAW,SAAC,GAA6D,QAA5DC,MAAAA,OAA4D,MAApD,EAAoD,EAAjDC,EAAiD,EAAjDA,SAAUC,EAAuC,EAAvCA,OAA6BC,GAAU,EAA/BC,UAA+B,EAApBC,M,kXAAoB,uDAClF,OAAO,0BAAUD,UCJ6D,SDItCC,MAAO,CAACC,aAAaC,EAAAA,EAAAA,IAAgBP,KAAaG,GAAnF,eACH,mBAAQC,UAAWI,EAAAA,EAAAA,OAAnB,SACKN,IAEJD,O,SERT,SAAgB,KAAO,UAAU,MAAQ,UAAU,QAAU,UAAU,UAAY,SAAS,MAAQ,QAAQ,MAAQ,SAAS,aAAa,QAAQ,UAAY,QAAQ,MAAQ,SAAS,SAAW,SAAS,YAAY,SAAS,SAAW,U,urBCG3O,IAGaQ,EAAQ,SAAC,GAA0D,IAAzDC,EAAyD,EAAzDA,KAAMC,EAAmD,EAAnDA,KAAMC,EAA6C,EAA7CA,MAAOC,EAAsC,EAAtCA,MAA4BV,GAAU,EAA/BC,UAA+B,EAApBC,M,kXAAoB,yDACtES,GAAUC,EAAAA,EAAAA,IAAM,GAAD,OAAIL,EAAJ,WACfM,EAAsB,WAATL,EALI,SAAAC,GAAK,OAC5BK,OAAOC,UAAUN,GAASA,EAAQ,GAK5BO,CAAmBP,GACnBA,EAEN,OAAO,iBAAKR,WAAWgB,EAAAA,EAAAA,GAAIC,EAAAA,UAAaR,GAASQ,EAAAA,UAA1C,WACH,mBAAOjB,WAAWgB,EAAAA,EAAAA,GAAIC,EAAAA,MAASA,EAAEV,IAAjC,WACI,gBAAKP,UAAWiB,EAAAA,UAAhB,UAA8BC,EAAAA,EAAAA,IAAUZ,MACxC,oBACIN,UAAWiB,EAAAA,MACXX,KAAMA,EACNC,KAAMA,EACNC,MAAOI,EACP,eAAcH,EAAQ,OAAS,QAC/B,oBAAmBA,EAAQC,EAAU,MACjCX,QAGZ,gBAAKC,UAAWiB,EAAAA,MAASE,GAAIT,EAASU,QAASX,EAAO,YAAU,SAAhE,SACKA,QCtBN,IAAMY,EAAe,WACxB,IAAMC,GAAWC,EAAAA,EAAAA,MACXC,GAAQC,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMC,WAAWH,SAC9CI,GAAWH,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMC,WAAWC,YACjDC,GAAaJ,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMC,WAAWE,cACnDC,GAAgBL,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMC,WAAWG,iBAW5D,OAAO,iBACHC,KAAK,QACL,kBAAgB,sBAChB/B,UCvB0E,SDoBvE,WAKH,gBAAKA,UCzBuF,SDyBlEmB,GAAG,sBAA7B,4BAGA,iBAAKnB,UC5ByG,QD4B9G,WACI,SAACK,EAAD,CAAOC,KAAK,QAAQC,KAAK,SAASC,MAAOgB,EAAOf,MAAOoB,EAAYG,SAlBjD,SAAAC,GACtBX,EAASY,EAAAA,EAAAA,SAA2BC,SAASF,EAAMG,OAAO5B,MAAO,UAkB7D,SAACH,EAAD,CAAOC,KAAK,WAAWC,KAAK,SAASC,MAAOoB,EAAUnB,MAAOqB,EAAeE,SAfvD,SAAAC,GACzBX,EAASY,EAAAA,EAAAA,YAA8BC,SAASF,EAAMG,OAAO5B,MAAO,gBEhB5E,QAA+J,SCKxJ,IAAM6B,EAAQ,SAAC,GAAY,IAAXC,EAAW,EAAXA,MACbhB,GAAWC,EAAAA,EAAAA,MAkBjB,OAAO,SAAC5B,EAAD,CAAUC,MAAO0C,EAAMC,MAAOzC,OAAM,gBAAWwC,EAAMC,OAArD,UACH,iBAAKvC,UDzBsE,SCyB3E,WACI,gBAAKA,UAAWiB,EAAhB,UACI,SAACZ,EAAD,CACIC,KAAK,aACLE,MAAO8B,EAAMhC,KACb0B,SAtBS,SAAAC,GACrBX,EAASY,EAAAA,EAAAA,QAA0BI,EAAMC,MAAON,EAAMG,OAAO5B,SAsBjDC,MAAO6B,EAAME,UACb,kBAAiBF,EAAMC,WAG/B,gBAAKvC,UDnCmF,QCmCxF,UACI,mBAAQO,KAAK,SAASP,UDpC0K,SCoC/IyC,QAhBnC,WACtBnB,EAASY,EAAAA,EAAAA,YAA8BI,EAAMC,SAewC,aAAW,eAAxF,UACI,gBAAKvC,UDrCqH,gBCwClI,gBAAKA,UAAWiB,EAAhB,UACI,SAACZ,EAAD,CAAOC,KAAK,QAAQC,KAAK,SAASC,MAAO8B,EAAMI,MAAOV,SA7BxC,SAAAC,GACtBX,EAASY,EAAAA,EAAAA,SAA2BI,EAAMC,MAAOJ,SAASF,EAAMG,OAAO5B,MAAO,OA4BaC,MAAO6B,EAAMK,gBAEpG,gBAAK3C,UAAWiB,EAAhB,UACI,SAACZ,EAAD,CAAOC,KAAK,mBAAmBC,KAAK,WAAWqC,QAASN,EAAMO,gBAAiBb,SA5BvD,SAAAC,GAChCX,EAASY,EAAAA,EAAAA,mBAAqCI,EAAMC,MAAON,EAAMG,OAAOQ,qBCVhF,IAaaE,EAAa,WACtB,IAAMxB,GAAWC,EAAAA,EAAAA,MACXwB,GAAUtB,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMC,WAAWoB,WAChDC,GAAYvB,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMC,WAAWqB,aAOxD,OAAO,iCACH,eAAIhD,UAAWI,EAAAA,EAAAA,OAAf,yBACA,kBAAMJ,UChCgE,SDgC7CiD,aAAa,MAAtC,WACI,gBAAKjD,UCjC8G,SDiCnH,UACI,SAACqB,EAAD,OAEJ,iBAAKrB,UCpCiI,SDoCtI,UACKkD,OAAOC,OAAOJ,GAASK,KAAI,SAAAd,GAAK,OAAI,SAACD,EAAD,CAAyBC,MAAOA,GAApBA,EAAMC,WACvD,SAAC5C,EAAD,CAAUC,MAAOoD,EAAWlD,OAAO,YAAnC,UACI,mBAAQS,KAAK,SAASP,UCvCiJ,SDuC1HyC,QAbjC,WACxBnB,GApBe,SAACA,EAAU+B,GAC9B/B,EAASY,EAAAA,EAAAA,YACT,IAAMR,EAAQ2B,IAEdC,YAAW,WACP,IAAMC,EAAoBC,SAASC,cAAT,iCAAiD/B,EAAMC,WAAWqB,UAAY,EAA9E,OAEtBO,GACAA,EAAkBG,UAEvB,OAsBa,mCASpB,W,wEEhDO,IAAMvD,EAAkB,SAAAoC,GAG3B,oBAF0B,IAARA,EAAe,IAEjC,gB,SCJSrB,EAAY,SAAAZ,GACrB,IAAMqD,EAAiBrD,EAAKsD,MAAM,KAAKC,KAAK,KAE5C,OAAOF,EAAeG,OAAO,GAAGC,cAAgBJ,EAAeK,MAAM,I,mHCDzE,IAAIC,EAAS,EAEAtD,EAAQ,SAAAuD,GAGjB,O,GAFaC,EAAAA,EAAAA,WAAS,2BAASD,EAAT,YAAmBD,Q,EADd,E,kzBAAA,G,iDCJ/B,IAAMG,EAAiB,SAAAC,GAAM,OACzBC,WAAWC,KAAKC,IAAIH,GAAQI,QAAQ,KAE3BC,EAAiB,SAAAlD,GAC1B,OAAc,IAAVA,EACO,uBAEP,UAAU4C,EAAe5C,GAAzB,kBAAyCA,EAAQ,EAAI,SAAW,SAI3DmD,EAAyB,SAAAnD,GAClC,OAAc,IAAVA,EACO,uBAEP,UAAUA,EAAQ,EAAI,SAAW,OAAjC,YAA2C4C,EAAe5C,GAA1D,Y,+BCdR,SAAgB,UAAU,SAAS,OAAS","sources":["webpack://d-hondt-calculator-online/./src/fieldset/index.js","webpack://d-hondt-calculator-online/./src/fieldset/styles.scss","webpack://d-hondt-calculator-online/./src/input/styles.scss","webpack://d-hondt-calculator-online/./src/input/index.js","webpack://d-hondt-calculator-online/./src/main-settings/index.js","webpack://d-hondt-calculator-online/./src/main-settings/styles.scss","webpack://d-hondt-calculator-online/./src/party/styles.scss","webpack://d-hondt-calculator-online/./src/party/index.js","webpack://d-hondt-calculator-online/./src/calculator/component/index.js","webpack://d-hondt-calculator-online/./src/calculator/component/styles.scss","webpack://d-hondt-calculator-online/./src/misc/get-color-by-index.js","webpack://d-hondt-calculator-online/./src/misc/title-case.js","webpack://d-hondt-calculator-online/./src/misc/use-id.js","webpack://d-hondt-calculator-online/./src/misc/seats-formatter.js","webpack://d-hondt-calculator-online/./src/common.scss"],"sourcesContent":["import { getColorByIndex } from \"../misc\";\r\nimport s from \"./styles.scss\";\r\nimport common from \"../common.scss\";\r\n\r\nexport const Fieldset = ({color = 0, children, legend, className, style, ...rest}) => {\r\n    return <fieldset className={s.fieldset} style={{borderColor: getColorByIndex(color)}} {...rest} >\r\n        <legend className={common.srOnly}>\r\n            {legend}\r\n        </legend>\r\n        {children}\r\n    </fieldset>\r\n}","// extracted by mini-css-extract-plugin\nexport default {\"plus\":\"#27ab83\",\"minus\":\"#e12d39\",\"neutral\":\"#1f2933\",\"fieldset\":\"_3xWO8\"};","// extracted by mini-css-extract-plugin\nexport default {\"plus\":\"#27ab83\",\"minus\":\"#e12d39\",\"neutral\":\"#1f2933\",\"container\":\"_2r0e2\",\"label\":\"Tfyqn\",\"input\":\"_2rW2w\",\"label-text\":\"azeHn\",\"labelText\":\"azeHn\",\"error\":\"_1LMCk\",\"checkbox\":\"_94dG_\",\"has-error\":\"_2L7sm\",\"hasError\":\"_2L7sm\"};","import { cnb } from \"cnbuilder\";\r\nimport { titleCase, useId } from \"../misc\";\r\nimport s from \"./styles.scss\";\r\n\r\nconst normalizeForNumber = value => \r\n    Number.isInteger(value) ? value : '';\r\n\r\nexport const Input = ({name, type, value, error, className, style, ...rest}) => {\r\n    const errorId = useId(`${name}-error`);\r\n    const inputValue = type === \"number\" \r\n        ? normalizeForNumber(value)\r\n        : value;\r\n\r\n    return <div className={cnb(s.container, error && s.hasError)}>\r\n        <label className={cnb(s.label, s[type])}>\r\n            <div className={s.labelText}>{titleCase(name)}</div>\r\n            <input \r\n                className={s.input} \r\n                name={name} \r\n                type={type} \r\n                value={inputValue} \r\n                aria-invalid={error ? \"true\" : \"false\"}\r\n                aria-errormessage={error ? errorId : null}\r\n                {...rest}\r\n            />\r\n        </label>\r\n        <div className={s.error} id={errorId} hidden={!error} aria-live=\"polite\">\r\n            {error}\r\n        </div>\r\n    </div>\r\n}","import { Input } from \"../input\"\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { calculatorActions } from \"../calculator\";\r\nimport s from \"./styles.scss\";\r\n\r\nexport const MainSettings = () => {\r\n    const dispatch = useDispatch();\r\n    const seats = useSelector(state => state.calculator.seats);\r\n    const treshold = useSelector(state => state.calculator.treshold);\r\n    const seatsError = useSelector(state => state.calculator.seatsError);\r\n    const tresholdError = useSelector(state => state.calculator.tresholdError);\r\n\r\n    const handleSeatsChange = event => {\r\n        dispatch(calculatorActions.setSeats(parseInt(event.target.value, 10)));\r\n    }\r\n\r\n    const handleTresholdChange = event => {\r\n        dispatch(calculatorActions.setTreshold(parseInt(event.target.value, 10)));\r\n    }\r\n    \r\n    // cannot use real fieldset here due to bugs in chrome\r\n    return <div \r\n        role=\"group\" \r\n        aria-labelledby=\"main-settings-label\" \r\n        className={s.fieldset}\r\n    >\r\n        <div className={s.legend} id=\"main-settings-label\">\r\n            Main settings\r\n        </div>\r\n        <div className={s.inputs}>\r\n            <Input name=\"seats\" type=\"number\" value={seats} error={seatsError} onChange={handleSeatsChange} />\r\n            <Input name=\"treshold\" type=\"number\" value={treshold} error={tresholdError} onChange={handleTresholdChange} />\r\n        </div>\r\n    </div>\r\n}","// extracted by mini-css-extract-plugin\nexport default {\"plus\":\"#27ab83\",\"minus\":\"#e12d39\",\"neutral\":\"#1f2933\",\"fieldset\":\"_1acUv\",\"legend\":\"_2Nr42\",\"inputs\":\"MyEIp\"};","// extracted by mini-css-extract-plugin\nexport default {\"plus\":\"#27ab83\",\"minus\":\"#e12d39\",\"neutral\":\"#1f2933\",\"container\":\"_2Xcaa\",\"icons\":\"vroSu\",\"cross-icon\":\"_16Tha\",\"crossIcon\":\"_16Tha\",\"input\":\"_3iJJ0\",\"delete-button\":\"_3EAQ_\",\"deleteButton\":\"_3EAQ_\"};","import { Fieldset } from \"../fieldset\"\r\nimport { Input } from \"../input\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { calculatorActions } from \"../calculator\";\r\nimport s from \"./styles.scss\";\r\n\r\nexport const Party = ({party}) => {\r\n    const dispatch = useDispatch();\r\n\r\n    const handleNameChange = event => {\r\n        dispatch(calculatorActions.setName(party.index, event.target.value));\r\n    }\r\n\r\n    const handleVotesChange = event => {\r\n        dispatch(calculatorActions.setVotes(party.index, parseInt(event.target.value, 10)));\r\n    }\r\n\r\n    const handleIgnoresTresholdChange = event => {\r\n        dispatch(calculatorActions.setIgnoresTreshold(party.index, event.target.checked));\r\n    }\r\n\r\n    const handleDeleteClick = () => {\r\n        dispatch(calculatorActions.removeParty(party.index));\r\n    }\r\n\r\n    return <Fieldset color={party.index} legend={`party ${party.index}`}>\r\n        <div className={s.container}>\r\n            <div className={s.input}>\r\n                <Input\r\n                    name=\"party-name\" \r\n                    value={party.name} \r\n                    onChange={handleNameChange} \r\n                    error={party.nameError}\r\n                    data-partystart={party.index}\r\n                />\r\n            </div>\r\n            <div className={s.icons}>\r\n                <button type=\"button\" className={s.deleteButton} onClick={handleDeleteClick} aria-label=\"delete party\">\r\n                    <div className={s.crossIcon} />\r\n                </button>\r\n            </div>\r\n            <div className={s.input}>\r\n                <Input name=\"votes\" type=\"number\" value={party.votes} onChange={handleVotesChange} error={party.votesError} />\r\n            </div>\r\n            <div className={s.input}>\r\n                <Input name=\"ignores-treshold\" type=\"checkbox\" checked={party.ignoresTreshold} onChange={handleIgnoresTresholdChange}/>\r\n            </div>\r\n        </div>\r\n    </Fieldset>\r\n}","import { useDispatch, useSelector } from \"react-redux\";\r\nimport { calculatorActions } from \"..\";\r\nimport { Fieldset } from \"../../fieldset\";\r\nimport { MainSettings } from \"../../main-settings\";\r\nimport { Party } from \"../../party\";\r\nimport s from \"./styles.scss\";\r\nimport common from \"../../common.scss\";\r\n\r\nconst addParty = () => (dispatch, getState) => {\r\n    dispatch(calculatorActions.addParty());\r\n    const state = getState();\r\n\r\n    setTimeout(() => {\r\n        const firstInputOfParty = document.querySelector(`input[data-partystart=\"${state.calculator.nextIndex - 1}\"]`);\r\n\r\n        if (firstInputOfParty) {\r\n            firstInputOfParty.focus();\r\n        }\r\n    }, 0);\r\n}\r\n\r\nexport const Calculator = () => {\r\n    const dispatch = useDispatch();\r\n    const parties = useSelector(state => state.calculator.parties);\r\n    const nextIndex = useSelector(state => state.calculator.nextIndex);\r\n\r\n\r\n    const handleAddPartyClick = () => {\r\n        dispatch(addParty());\r\n    }\r\n\r\n    return <>\r\n        <h1 className={common.srOnly}>Enter data</h1>\r\n        <form className={s.form} autoComplete=\"off\">\r\n            <div className={s.mainSettings}>\r\n                <MainSettings />\r\n            </div>\r\n            <div className={s.parties}>\r\n                {Object.values(parties).map(party => <Party key={party.index} party={party} />)}\r\n                <Fieldset color={nextIndex} legend=\"New party\">\r\n                    <button type=\"button\" className={s.addParty} onClick={handleAddPartyClick}>\r\n                        New party\r\n                    </button>\r\n                </Fieldset>\r\n            </div>\r\n        </form>\r\n    </>\r\n}\r\n\r\nexport default Calculator;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"plus\":\"#27ab83\",\"minus\":\"#e12d39\",\"neutral\":\"#1f2933\",\"form\":\"_11OpB\",\"main-settings\":\"_1dO6e\",\"mainSettings\":\"_1dO6e\",\"parties\":\"_1iSid\",\"add-party\":\"_2FxFR\",\"addParty\":\"_2FxFR\"};","\r\nexport const getColorByIndex = index => {\r\n    const hueAngle = (index * 110) % 360;\r\n\r\n    return `hsl(${hueAngle}, 75%, 60%)`;\r\n}\r\n\r\n","export const titleCase = name => {\r\n    const splitAndJoined = name.split('-').join(' ');\r\n\r\n    return splitAndJoined.charAt(0).toUpperCase() + splitAndJoined.slice(1);\r\n}","import { useState } from \"react\";\r\n\r\nlet nextId = 0;\r\n\r\nexport const useId = prefix => {\r\n    const [id] = useState(() => `${prefix}-${nextId++}`);\r\n\r\n    return id;\r\n}","const simplifynumber = number =>\r\n    parseFloat(Math.abs(number).toFixed(2));\r\n\r\nexport const seatsFormatter = seats => {\r\n    if (seats === 0) {\r\n        return \"No seats gained/lost\";\r\n    } else {\r\n        return `${simplifynumber(seats)} seats ${seats > 0 ? 'gained' : 'lost'}`\r\n    }\r\n}\r\n\r\nexport const seatsFormatterReversed = seats => {\r\n    if (seats === 0) {\r\n        return \"gained/lost no seats\";\r\n    } else {\r\n        return `${seats > 0 ? 'gained' : 'lost'} ${simplifynumber(seats)} seats`\r\n    }\r\n}","// extracted by mini-css-extract-plugin\nexport default {\"sr-only\":\"_1YzBl\",\"srOnly\":\"_1YzBl\"};"],"names":["Fieldset","color","children","legend","rest","className","style","borderColor","getColorByIndex","common","Input","name","type","value","error","errorId","useId","inputValue","Number","isInteger","normalizeForNumber","cnb","s","titleCase","id","hidden","MainSettings","dispatch","useDispatch","seats","useSelector","state","calculator","treshold","seatsError","tresholdError","role","onChange","event","calculatorActions","parseInt","target","Party","party","index","nameError","onClick","votes","votesError","checked","ignoresTreshold","Calculator","parties","nextIndex","autoComplete","Object","values","map","getState","setTimeout","firstInputOfParty","document","querySelector","focus","splitAndJoined","split","join","charAt","toUpperCase","slice","nextId","prefix","useState","simplifynumber","number","parseFloat","Math","abs","toFixed","seatsFormatter","seatsFormatterReversed"],"sourceRoot":""}